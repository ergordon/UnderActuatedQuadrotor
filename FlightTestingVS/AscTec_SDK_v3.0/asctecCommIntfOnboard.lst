   1              		.file	"asctecCommIntfOnboard.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	aciInit
  13              	aciInit:
  14              	.LFB2:
  15              		.file 1 "asctecCommIntfOnboard.c"
   1:asctecCommIntfOnboard.c **** /*
   2:asctecCommIntfOnboard.c **** 
   3:asctecCommIntfOnboard.c **** Copyright (c) 2012, Ascending Technologies GmbH
   4:asctecCommIntfOnboard.c **** All rights reserved.
   5:asctecCommIntfOnboard.c **** 
   6:asctecCommIntfOnboard.c **** Redistribution and use in source and binary forms, with or without
   7:asctecCommIntfOnboard.c **** modification, are permitted provided that the following conditions are met:
   8:asctecCommIntfOnboard.c **** 
   9:asctecCommIntfOnboard.c ****  * Redistributions of source code must retain the above copyright notice,
  10:asctecCommIntfOnboard.c ****    this list of conditions and the following disclaimer.
  11:asctecCommIntfOnboard.c ****  * Redistributions in binary form must reproduce the above copyright
  12:asctecCommIntfOnboard.c ****    notice, this list of conditions and the following disclaimer in the
  13:asctecCommIntfOnboard.c ****    documentation and/or other materials provided with the distribution.
  14:asctecCommIntfOnboard.c **** 
  15:asctecCommIntfOnboard.c **** THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
  16:asctecCommIntfOnboard.c **** EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  17:asctecCommIntfOnboard.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  18:asctecCommIntfOnboard.c **** DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
  19:asctecCommIntfOnboard.c **** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  20:asctecCommIntfOnboard.c **** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  21:asctecCommIntfOnboard.c **** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  22:asctecCommIntfOnboard.c **** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:asctecCommIntfOnboard.c **** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:asctecCommIntfOnboard.c **** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  25:asctecCommIntfOnboard.c **** DAMAGE.
  26:asctecCommIntfOnboard.c **** 
  27:asctecCommIntfOnboard.c ****  */
  28:asctecCommIntfOnboard.c **** 
  29:asctecCommIntfOnboard.c **** #include "asctecCommIntfOnboard.h"
  30:asctecCommIntfOnboard.c **** #include <string.h>
  31:asctecCommIntfOnboard.c **** #include <stdlib.h>
  32:asctecCommIntfOnboard.c **** 
  33:asctecCommIntfOnboard.c **** struct ACI_MEM_TABLE_ENTRY aciListVar[MAX_VARIABLE_LIST];
  34:asctecCommIntfOnboard.c **** struct ACI_MEM_TABLE_ENTRY aciListCmd[MAX_COMMAND_LIST];
  35:asctecCommIntfOnboard.c **** struct ACI_MEM_TABLE_ENTRY aciListPar[MAX_PARAMETER_LIST];
  36:asctecCommIntfOnboard.c **** 
  37:asctecCommIntfOnboard.c **** int aciListVarCount = 0;
  38:asctecCommIntfOnboard.c **** int aciListCmdCount = 0;
  39:asctecCommIntfOnboard.c **** int aciListParCount = 0;
  40:asctecCommIntfOnboard.c **** 
  41:asctecCommIntfOnboard.c **** // Variabeln
  42:asctecCommIntfOnboard.c **** unsigned short aciVarPacketSelect[MAX_VAR_PACKETS][MEMPACKET_MAX_VARS];
  43:asctecCommIntfOnboard.c **** unsigned char aciVarPacketSelectLength[MAX_VAR_PACKETS];
  44:asctecCommIntfOnboard.c **** unsigned char aciVarPacketMagicCode[MAX_VAR_PACKETS]={0,0,0};
  45:asctecCommIntfOnboard.c **** void * aciVarPacketPtrList[MAX_VAR_PACKETS][MEMPACKET_MAX_VARS];
  46:asctecCommIntfOnboard.c **** unsigned char aciVarPacketTypeList[MAX_VAR_PACKETS][MEMPACKET_MAX_VARS];
  47:asctecCommIntfOnboard.c **** 
  48:asctecCommIntfOnboard.c **** unsigned short aciVarPacketContentBufferLength[MAX_VAR_PACKETS];
  49:asctecCommIntfOnboard.c **** unsigned char aciVarPacketContentBuffer[MAX_VAR_PACKETS][MAX_VARIABLE_LIST*8];
  50:asctecCommIntfOnboard.c **** 
  51:asctecCommIntfOnboard.c **** unsigned short aciVarPacketTransmissionRate[MAX_VAR_PACKETS]={10,10,10};
  52:asctecCommIntfOnboard.c **** unsigned short aciVarPacketCurrentSize[MAX_VAR_PACKETS]={0,0,0};
  53:asctecCommIntfOnboard.c **** unsigned short aciVarPacketNumberOfVars[MAX_VAR_PACKETS]={0,0,0};
  54:asctecCommIntfOnboard.c **** unsigned short aciVarPacketUpdated[MAX_VAR_PACKETS]={0,0,0};
  55:asctecCommIntfOnboard.c **** 
  56:asctecCommIntfOnboard.c **** // Command
  57:asctecCommIntfOnboard.c **** unsigned short aciCmdPacketSelect[MAX_VAR_PACKETS][MEMPACKET_MAX_VARS];
  58:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketSelectLength[MAX_VAR_PACKETS];
  59:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketMagicCode[MAX_VAR_PACKETS]={0,0,0};
  60:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketWithACK[MAX_VAR_PACKETS]={0,0,0};
  61:asctecCommIntfOnboard.c **** 
  62:asctecCommIntfOnboard.c **** unsigned short aciCmdPacketContentBufferLength[MAX_VAR_PACKETS];
  63:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketContentBuffer[MAX_VAR_PACKETS][MAX_COMMAND_LIST*8];
  64:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketContentBufferValid[MAX_VAR_PACKETS];
  65:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketSendAck[MAX_VAR_PACKETS] = {0,0,0};
  66:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketReceived[MAX_VAR_PACKETS] = {0,0,0};
  67:asctecCommIntfOnboard.c **** unsigned char aciCmdPacketContentBufferInvalidCnt[MAX_VAR_PACKETS];
  68:asctecCommIntfOnboard.c **** 
  69:asctecCommIntfOnboard.c **** // Parameter
  70:asctecCommIntfOnboard.c **** unsigned short aciParPacketSelect[MAX_VAR_PACKETS][MEMPACKET_MAX_VARS];
  71:asctecCommIntfOnboard.c **** unsigned char aciParPacketSelectLength[MAX_VAR_PACKETS];
  72:asctecCommIntfOnboard.c **** unsigned char aciParPacketMagicCode[MAX_VAR_PACKETS]={0,0,0};
  73:asctecCommIntfOnboard.c **** 
  74:asctecCommIntfOnboard.c **** unsigned short aciParPacketContentBufferLength[MAX_VAR_PACKETS];
  75:asctecCommIntfOnboard.c **** unsigned char aciParPacketContentBuffer[MAX_VAR_PACKETS][MAX_PARAMETER_LIST*8];
  76:asctecCommIntfOnboard.c **** unsigned char aciParPacketContentBufferValid[MAX_VAR_PACKETS];
  77:asctecCommIntfOnboard.c **** unsigned char aciParPacketSendAck[MAX_VAR_PACKETS] = {0,0,0};
  78:asctecCommIntfOnboard.c **** unsigned char aciParamPacketReceived[MAX_VAR_PACKETS] = {0,0,0};
  79:asctecCommIntfOnboard.c **** unsigned char aciParPacketContentBufferInvalidCnt[MAX_VAR_PACKETS];
  80:asctecCommIntfOnboard.c **** unsigned char aciParPacketRequest[MAX_VAR_PACKETS] = {0,0,0};
  81:asctecCommIntfOnboard.c **** 
  82:asctecCommIntfOnboard.c **** unsigned char aciParamSaveIt=0;
  83:asctecCommIntfOnboard.c **** unsigned char entry_exist = 1;
  84:asctecCommIntfOnboard.c **** 
  85:asctecCommIntfOnboard.c **** //internal global vars
  86:asctecCommIntfOnboard.c **** unsigned int aciEngineRate=1000;
  87:asctecCommIntfOnboard.c **** unsigned int aciEngineRateCounter[MAX_VAR_PACKETS]= {0,0,0};
  88:asctecCommIntfOnboard.c **** 
  89:asctecCommIntfOnboard.c **** 
  90:asctecCommIntfOnboard.c **** //aciTxRingbuffer global vars
  91:asctecCommIntfOnboard.c **** unsigned char aciTxRingBuffer[ACI_TX_RINGBUFFER_SIZE];
  92:asctecCommIntfOnboard.c **** unsigned short aciTxRingBufferWritePtr=0;
  93:asctecCommIntfOnboard.c **** unsigned char aciTxRingBufferReadPtr=0;
  94:asctecCommIntfOnboard.c **** 
  95:asctecCommIntfOnboard.c **** unsigned short aciHeartBeatCnt=0;
  96:asctecCommIntfOnboard.c **** unsigned short aciHeartBeatTimeout=2000; // in ms. Default: 2s timeout
  97:asctecCommIntfOnboard.c **** unsigned char aciInhibitPacketTransmission=0;
  98:asctecCommIntfOnboard.c **** 
  99:asctecCommIntfOnboard.c **** //aciTxRingbuffer prototypes
 100:asctecCommIntfOnboard.c **** void aciTxRingBufferReset(void);
 101:asctecCommIntfOnboard.c **** unsigned short aciTxRingBufferGetFreeSpace(void);
 102:asctecCommIntfOnboard.c **** void aciTxRingBufferAddData(void * ptr, unsigned short size);
 103:asctecCommIntfOnboard.c **** void aciTxSendPacket(unsigned char aciMessageType, void * data, unsigned short cnt);
 104:asctecCommIntfOnboard.c **** void (*aciStartTxCallback)(unsigned char byte);
 105:asctecCommIntfOnboard.c **** unsigned char (*aciReadDatafromFlashCallback)(void * ptr, unsigned short cnt);
 106:asctecCommIntfOnboard.c **** void (*aciReadWriteStartCallback)(void) = NULL;
 107:asctecCommIntfOnboard.c **** void (*aciReadWriteEndCallback)(void) = NULL;
 108:asctecCommIntfOnboard.c **** void (*aciAddDatatoFlashCallback)(void * ptr, unsigned short cnt) = NULL;
 109:asctecCommIntfOnboard.c **** short (*aciReadParafromFlashCallback)(void) = NULL;
 110:asctecCommIntfOnboard.c **** void (*aciSaveParaCallback)(void) = NULL;
 111:asctecCommIntfOnboard.c **** short (*aciWriteParatoFlashCallback)(void) = NULL;
 112:asctecCommIntfOnboard.c **** void aciSendVar(void);
 113:asctecCommIntfOnboard.c **** void aciPublishVariableInt(void * ptr, unsigned char varType, unsigned short id, char * name, char 
 114:asctecCommIntfOnboard.c **** void aciPublishCommandInt(void * ptr, unsigned char varType, unsigned short id, char * name, char *
 115:asctecCommIntfOnboard.c **** void aciPublishParameterInt(void * ptr, unsigned char varType, unsigned short id, char * name, char
 116:asctecCommIntfOnboard.c **** void aciSendSingleWithAck(short i);
 117:asctecCommIntfOnboard.c **** 
 118:asctecCommIntfOnboard.c **** //aciRxHandler prototypes
 119:asctecCommIntfOnboard.c **** void aciRxHandleMessage(unsigned char messagetype, unsigned short length);
 120:asctecCommIntfOnboard.c **** 
 121:asctecCommIntfOnboard.c **** 
 122:asctecCommIntfOnboard.c **** //aci helper prototypes
 123:asctecCommIntfOnboard.c **** ///update CRC with 1 byte
 124:asctecCommIntfOnboard.c **** unsigned short aciCrcUpdate (unsigned short crc, unsigned char data);
 125:asctecCommIntfOnboard.c **** ///update crc with multiple bytes
 126:asctecCommIntfOnboard.c **** unsigned short aciUpdateCrc16(unsigned short crc, void * data, unsigned short cnt);
 127:asctecCommIntfOnboard.c **** 
 128:asctecCommIntfOnboard.c **** // ACI Send Single
 129:asctecCommIntfOnboard.c **** unsigned short aciSendSingleCount = 0;
 130:asctecCommIntfOnboard.c **** unsigned short aciSendSingleNextBufferCount = 0;
 131:asctecCommIntfOnboard.c **** unsigned short aciSendSingleStatus[MAX_VARIABLE_LIST];
 132:asctecCommIntfOnboard.c **** unsigned short aciSendSingleId[MAX_VARIABLE_LIST];
 133:asctecCommIntfOnboard.c **** unsigned char aciSendSingleVarType[MAX_VARIABLE_LIST];
 134:asctecCommIntfOnboard.c **** unsigned char aciSendSingleBuffer[MAX_VARIABLE_LIST*8];
 135:asctecCommIntfOnboard.c **** unsigned short aciSendSingleBufferCnt[MAX_VARIABLE_LIST];
 136:asctecCommIntfOnboard.c **** 
 137:asctecCommIntfOnboard.c **** unsigned short aciMagicCodeVar = 0x00FF;
 138:asctecCommIntfOnboard.c **** unsigned short aciMagicCodeCmd = 0x00FF;
 139:asctecCommIntfOnboard.c **** unsigned short aciMagicCodePar = 0x00FF;
 140:asctecCommIntfOnboard.c **** 
 141:asctecCommIntfOnboard.c **** void aciInit(unsigned short callsPerSecond)
 142:asctecCommIntfOnboard.c **** {
  16              	@ Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              	.LVL0:
  20              		.loc 1 146 0
 143:asctecCommIntfOnboard.c **** 	int i=0;
 144:asctecCommIntfOnboard.c **** 	int z=0;
 145:asctecCommIntfOnboard.c **** 
 146:asctecCommIntfOnboard.c **** 	aciListVarCount = 0;
  21              	r3, .L20
  22 0000 F8309FE5 		mov	r1, #0
  23 0004 0010A0E3 		.loc 1 147 0
 147:asctecCommIntfOnboard.c **** 	aciListCmdCount = 0;
  24              	r	r2, .L20+4
  25 0008 F4209FE5 		.loc 1 146 0
  26              		str	r1, [r3, #0]
  27 000c 001083E5 		.loc 1 148 0
 148:asctecCommIntfOnboard.c **** 	aciListParCount = 0;
  28              		r3, .L20+8
  29 0010 F0309FE5 		.loc 1 142 0
  30              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  31 0014 F04F2DE9 	.LCFI0:
  32              		.loc 1 147 0
  33              		str	r1, [r2, #0]
  34 0018 001082E5 		.loc 1 142 0
  35              		mov	r0, r0, asl #16
  36 001c 0008A0E1 	.LVL1:
  37              		.loc 1 148 0
  38              		ldr	r2, .L20+12
  39 0020 E4209FE5 		ldr	r5, .L20+16
  40 0024 E4509FE5 		ldr	r4, .L20+20
  41 0028 E4409FE5 		ldr	lr, .L20+24
  42 002c E4E09FE5 		ldr	ip, .L20+28
  43 0030 E4C09FE5 		str	r1, [r3, #0]
  44 0034 001083E5 		.loc 1 142 0
  45              		mov	fp, r0, lsr #16
  46 0038 20B8A0E1 	.LVL2:
  47              	.LVL3:
  48              		mov	r3, r1
  49 003c 0130A0E1 	.LVL4:
  50              	.L2:
  51              		.loc 1 152 0
 149:asctecCommIntfOnboard.c **** 
 150:asctecCommIntfOnboard.c ****     for (i=0;i<MAX_VAR_PACKETS;i++)
 151:asctecCommIntfOnboard.c ****     {
 152:asctecCommIntfOnboard.c ****         aciCmdPacketContentBufferValid[i]=0;
  52              	 1 153 0
  53 0040 0530C1E7 		strb	r3, [r1, r4]
 153:asctecCommIntfOnboard.c ****         aciCmdPacketContentBufferInvalidCnt[i]=0;
  54              	loc 1 154 0
  55 0044 0430C1E7 		strb	r3, [r1, lr]
 154:asctecCommIntfOnboard.c ****         aciParPacketContentBufferValid[i]=0;
  56              	loc 1 155 0
  57 0048 0E30C1E7 		strb	r3, [r1, ip]
 155:asctecCommIntfOnboard.c ****         aciParPacketContentBufferInvalidCnt[i]=0;
  58              	loc 1 150 0
  59 004c 0C30C1E7 		add	r1, r1, #1
  60              		.loc 1 156 0
  61 0050 011081E2 		mov	r0, #0	@ movhi
 156:asctecCommIntfOnboard.c ****     	aciVarPacketContentBufferLength[i] = 0;
  62              	c 1 150 0
  63 0054 0000A0E3 		cmp	r1, #3
  64              		.loc 1 156 0
  65 0058 030051E3 		strh	r0, [r2], #2	@ movhi
  66              		.loc 1 150 0
  67 005c B200C2E0 		bne	.L2
  68              	.LVL5:
  69 0060 F6FFFF1A 		ldr	r9, .L20+32
  70              		ldr	r8, .L20+36
  71 0064 B4909FE5 		ldr	sl, .L20+40
  72 0068 B4809FE5 		ldr	r7, .L20+44
  73 006c B4A09FE5 		ldr	r5, .L20+48
  74 0070 B4709FE5 		ldr	r6, .L20+52
  75 0074 B4509FE5 		.loc 1 181 0
  76 0078 B4609FE5 		mov	r4, #0
 157:asctecCommIntfOnboard.c ****     }
 158:asctecCommIntfOnboard.c **** 
 159:asctecCommIntfOnboard.c **** 
 160:asctecCommIntfOnboard.c **** 	for (z=0;z<MAX_VAR_PACKETS;z++)
 161:asctecCommIntfOnboard.c **** 	{
 162:asctecCommIntfOnboard.c **** 		for (i=0;i<MEMPACKET_MAX_VARS;i++)
 163:asctecCommIntfOnboard.c **** 		{
 164:asctecCommIntfOnboard.c **** 			aciVarPacketSelect[z][i]=ID_NONE;
 165:asctecCommIntfOnboard.c **** 			aciVarPacketPtrList[z][i]=NULL;
 166:asctecCommIntfOnboard.c **** 			aciVarPacketTypeList[z][i]=0;
 167:asctecCommIntfOnboard.c **** 		}
 168:asctecCommIntfOnboard.c **** 		aciVarPacketMagicCode[z]=0;
 169:asctecCommIntfOnboard.c **** 		aciVarPacketSelectLength[z]=0;
 170:asctecCommIntfOnboard.c **** 		aciCmdPacketMagicCode[z]=0;
 171:asctecCommIntfOnboard.c **** 	}
 172:asctecCommIntfOnboard.c **** 
 173:asctecCommIntfOnboard.c **** 	for (i=0;i<ACI_TX_RINGBUFFER_SIZE;i++) {
 174:asctecCommIntfOnboard.c **** 		aciSendSingleBuffer[i] = 0;
 175:asctecCommIntfOnboard.c **** 		aciSendSingleId[i] = 0;
 176:asctecCommIntfOnboard.c **** 		aciSendSingleVarType[i] = 0;
 177:asctecCommIntfOnboard.c **** 	}
 178:asctecCommIntfOnboard.c **** 
 179:asctecCommIntfOnboard.c **** 	aciEngineRate = callsPerSecond;
 180:asctecCommIntfOnboard.c **** 
 181:asctecCommIntfOnboard.c **** }
  77              	d	r0, r7, r4, asl #7
  78 007c 0040A0E3 		add	lr, r5, r4, asl #8
  79              		add	ip, r6, r4, asl #6
  80              		mov	r3, #0
  81 0080 840387E0 	.L4:
  82 0084 04E485E0 		.loc 1 162 0
  83 0088 04C386E0 		add	r3, r3, #1
  84 008c 0030A0E3 		.loc 1 164 0
  85              		mov	r2, #0
  86              		.loc 1 162 0
  87 0090 013083E2 		cmp	r3, #64
  88              		.loc 1 164 0
  89 0094 0020A0E3 		strh	r2, [r0], #2	@ movhi
  90              		.loc 1 165 0
  91 0098 400053E3 		str	r2, [lr], #4
  92              		.loc 1 166 0
  93 009c B220C0E0 		strb	r2, [ip], #1
  94              		.loc 1 162 0
  95 00a0 04208EE4 		bne	.L4
  96              		.loc 1 170 0
  97 00a4 0120CCE4 		strb	r2, [r4, sl]
  98              		.loc 1 168 0
  99 00a8 F8FFFF1A 		strb	r2, [r4, r9]
 100              		.loc 1 169 0
 101 00ac 0A20C4E7 		strb	r2, [r4, r8]
 102              		.loc 1 160 0
 103 00b0 0920C4E7 		add	r4, r4, #1
 104              		cmp	r4, #3
 105 00b4 0820C4E7 		bne	.L6
 106              		ldr	r1, .L20+56
 107 00b8 014084E2 	.LVL7:
 108 00bc 030054E3 		ldr	lr, .L20+60
 109 00c0 EEFFFF1A 		ldr	ip, .L20+64
 110 00c4 6C109FE5 		mov	r3, r2
 111              	.LVL8:
 112 00c8 6CE09FE5 	.L8:
 113 00cc 6CC09FE5 		.loc 1 174 0
 114 00d0 0230A0E1 		strb	r2, [r3, lr]
 115              		.loc 1 176 0
 116              		strb	r2, [r3, ip]
 117              		.loc 1 173 0
 118 00d4 0E20C3E7 		add	r3, r3, #1
 119              		.loc 1 175 0
 120 00d8 0C20C3E7 		mov	r0, #0	@ movhi
 121              		.loc 1 173 0
 122 00dc 013083E2 		cmp	r3, #160
 123              		.loc 1 175 0
 124 00e0 0000A0E3 		strh	r0, [r1], #2	@ movhi
 125              		.loc 1 173 0
 126 00e4 A00053E3 		bne	.L8
 127              		.loc 1 179 0
 128 00e8 B200C1E0 		ldr	r3, .L20+68
 129              	.LVL9:
 130 00ec F8FFFF1A 		str	fp, [r3, #0]
 131              		.loc 1 181 0
 132 00f0 4C309FE5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 133              		bx	lr
 134 00f4 00B083E5 	.L21:
 135              		.align	2
 136 00f8 F04FBDE8 	.L20:
 137 00fc 1EFF2FE1 		.word	aciListVarCount
 138              		.word	aciListCmdCount
 139              		.word	aciListParCount
 140              		.word	aciVarPacketContentBufferLength
 141 0100 00000000 		.word	aciCmdPacketContentBufferValid
 142 0104 00000000 		.word	aciCmdPacketContentBufferInvalidCnt
 143 0108 00000000 		.word	aciParPacketContentBufferValid
 144 010c 00000000 		.word	aciParPacketContentBufferInvalidCnt
 145 0110 00000000 		.word	aciVarPacketMagicCode
 146 0114 00000000 		.word	aciVarPacketSelectLength
 147 0118 00000000 		.word	aciCmdPacketMagicCode
 148 011c 00000000 		.word	aciVarPacketSelect
 149 0120 00000000 		.word	aciVarPacketPtrList
 150 0124 00000000 		.word	aciVarPacketTypeList
 151 0128 00000000 		.word	aciSendSingleId
 152 012c 00000000 		.word	aciSendSingleBuffer
 153 0130 00000000 		.word	aciSendSingleVarType
 154 0134 00000000 		.word	aciEngineRate
 155 0138 00000000 	.LFE2:
 157 0140 00000000 		.align	2
 158 0144 00000000 		.global	aciSetStartTxCallback
 160              	aciSetStartTxCallback:
 161              	.LFB15:
 162              		.loc 1 1100 0
 163              		@ Function supports interworking.
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 182:asctecCommIntfOnboard.c **** 
 183:asctecCommIntfOnboard.c **** void aciSendSingleWithAck(short i)
 184:asctecCommIntfOnboard.c **** {
 185:asctecCommIntfOnboard.c **** 	short notzero_i = i+1;
 186:asctecCommIntfOnboard.c **** 	unsigned char varType = aciSendSingleVarType[i];
 187:asctecCommIntfOnboard.c **** 	unsigned char buffer[5+(varType>>2)];
 188:asctecCommIntfOnboard.c **** 
 189:asctecCommIntfOnboard.c **** 	memcpy(&buffer[0],&notzero_i,2);
 190:asctecCommIntfOnboard.c **** 	memcpy(&buffer[2],&aciSendSingleId[i],2);
 191:asctecCommIntfOnboard.c **** 	memcpy(&buffer[4],&varType,1);
 192:asctecCommIntfOnboard.c **** 	memcpy(&buffer[5],&aciSendSingleBuffer[aciSendSingleBufferCnt[i]],varType>>2);
 193:asctecCommIntfOnboard.c **** 	aciSendSingleStatus[i]++;
 194:asctecCommIntfOnboard.c **** 
 195:asctecCommIntfOnboard.c **** 	aciTxSendPacket(ACIMT_SINGLESEND,buffer,5+(varType>>2));
 196:asctecCommIntfOnboard.c **** 
 197:asctecCommIntfOnboard.c **** }
 198:asctecCommIntfOnboard.c **** 
 199:asctecCommIntfOnboard.c **** void aciSingleSend(void * ptr, unsigned char varType, unsigned short id, char with_ack) {
 200:asctecCommIntfOnboard.c **** 	if(!varType || !id) return;
 201:asctecCommIntfOnboard.c **** 	if((aciSendSingleNextBufferCount+(varType>>2))>MAX_VARIABLE_LIST*8) return;
 202:asctecCommIntfOnboard.c **** 
 203:asctecCommIntfOnboard.c **** 	unsigned char buffer[5+(varType>>2)];
 204:asctecCommIntfOnboard.c **** 	int i;
 205:asctecCommIntfOnboard.c **** 	int use_i = -1;
 206:asctecCommIntfOnboard.c **** 	short zero = 0;
 207:asctecCommIntfOnboard.c **** 
 208:asctecCommIntfOnboard.c **** 	if(with_ack) {
 209:asctecCommIntfOnboard.c **** 		for(i=0;i<MAX_VARIABLE_LIST;i++) {
 210:asctecCommIntfOnboard.c **** 			if((use_i==-1) && (aciSendSingleStatus[i]==0)) use_i=i;
 211:asctecCommIntfOnboard.c **** 		}
 212:asctecCommIntfOnboard.c **** 		if(use_i==-1) return; // security-if
 213:asctecCommIntfOnboard.c **** 
 214:asctecCommIntfOnboard.c **** 		aciSendSingleStatus[use_i] = 1;
 215:asctecCommIntfOnboard.c **** 		aciSendSingleId[use_i] = id;
 216:asctecCommIntfOnboard.c **** 		aciSendSingleVarType[use_i] = varType;
 217:asctecCommIntfOnboard.c **** 		memcpy(&aciSendSingleBuffer[aciSendSingleNextBufferCount],ptr,varType>>2);
 218:asctecCommIntfOnboard.c **** 		aciSendSingleBufferCnt[use_i]=aciSendSingleNextBufferCount;
 219:asctecCommIntfOnboard.c **** 		aciSendSingleNextBufferCount+=varType>>2;
 220:asctecCommIntfOnboard.c **** 		aciSendSingleCount++;
 221:asctecCommIntfOnboard.c **** 	} else {
 222:asctecCommIntfOnboard.c **** 		memcpy(&buffer[0],&zero,2);
 223:asctecCommIntfOnboard.c **** 		memcpy(&buffer[2],&id,2);
 224:asctecCommIntfOnboard.c **** 		memcpy(&buffer[4],&varType,1);
 225:asctecCommIntfOnboard.c **** 		memcpy(&buffer[5],ptr,varType>>2);
 226:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_SINGLESEND,buffer,5+(varType>>2));
 227:asctecCommIntfOnboard.c **** 	}
 228:asctecCommIntfOnboard.c **** }
 229:asctecCommIntfOnboard.c **** 
 230:asctecCommIntfOnboard.c **** /* published Variable. Variable has to be global! **/
 231:asctecCommIntfOnboard.c **** void aciPublishVariableInt(void * ptr, unsigned char varType, unsigned short id, char * name, char 
 232:asctecCommIntfOnboard.c **** 	if (aciListVarCount==MAX_VARIABLE_LIST) return;
 233:asctecCommIntfOnboard.c **** 
 234:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].id= id;
 235:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].varType = varType;
 236:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].name = name;
 237:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].description = description;
 238:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].unit = unit;
 239:asctecCommIntfOnboard.c **** 	aciListVar[aciListVarCount].ptrToVar = (void*) ptr;
 240:asctecCommIntfOnboard.c **** 
 241:asctecCommIntfOnboard.c **** 	aciMagicCodeVar = aciUpdateCrc16(aciMagicCodeVar,&id,2);
 242:asctecCommIntfOnboard.c **** 	aciMagicCodeVar = aciUpdateCrc16(aciMagicCodeVar,&varType,1);
 243:asctecCommIntfOnboard.c **** 
 244:asctecCommIntfOnboard.c **** 	aciListVarCount++;
 245:asctecCommIntfOnboard.c **** }
 246:asctecCommIntfOnboard.c **** 
 247:asctecCommIntfOnboard.c **** 
 248:asctecCommIntfOnboard.c **** /* published Command. Command has to be global! **/
 249:asctecCommIntfOnboard.c **** void aciPublishCommandInt(void * ptr, unsigned char varType, unsigned short id, char * name, char *
 250:asctecCommIntfOnboard.c **** {
 251:asctecCommIntfOnboard.c **** 	if (aciListCmdCount==MAX_PARAMETER_LIST) return;
 252:asctecCommIntfOnboard.c **** 
 253:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].id= id;
 254:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].varType = varType;
 255:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].name = name;
 256:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].description = description;
 257:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].unit = unit;
 258:asctecCommIntfOnboard.c **** 	aciListCmd[aciListCmdCount].ptrToVar = (void*) ptr;
 259:asctecCommIntfOnboard.c **** 
 260:asctecCommIntfOnboard.c **** 	aciMagicCodeCmd = aciUpdateCrc16(aciMagicCodeCmd,&id,2);
 261:asctecCommIntfOnboard.c **** 	aciMagicCodeCmd = aciUpdateCrc16(aciMagicCodeCmd,&varType,1);
 262:asctecCommIntfOnboard.c **** 
 263:asctecCommIntfOnboard.c **** 	aciListCmdCount++;
 264:asctecCommIntfOnboard.c **** }
 265:asctecCommIntfOnboard.c **** 
 266:asctecCommIntfOnboard.c **** /** published Parameter. Parameter has to be global! **/
 267:asctecCommIntfOnboard.c **** void aciPublishParameterInt(void * ptr, unsigned char varType, unsigned short id, char * name, char
 268:asctecCommIntfOnboard.c **** {
 269:asctecCommIntfOnboard.c **** 	if (aciListParCount==MAX_PARAMETER_LIST) return;
 270:asctecCommIntfOnboard.c **** 
 271:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].id= id;
 272:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].varType = varType;
 273:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].name = name;
 274:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].description = description;
 275:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].unit = unit;
 276:asctecCommIntfOnboard.c **** 	aciListPar[aciListParCount].ptrToVar = (void*) ptr;
 277:asctecCommIntfOnboard.c **** 
 278:asctecCommIntfOnboard.c **** 	aciMagicCodePar = aciUpdateCrc16(aciMagicCodePar,&id,2);
 279:asctecCommIntfOnboard.c **** 	aciMagicCodePar = aciUpdateCrc16(aciMagicCodePar,&varType,1);
 280:asctecCommIntfOnboard.c **** 
 281:asctecCommIntfOnboard.c **** 	aciListParCount++;
 282:asctecCommIntfOnboard.c **** }
 283:asctecCommIntfOnboard.c **** 
 284:asctecCommIntfOnboard.c **** void aciSendVar(void)
 285:asctecCommIntfOnboard.c **** {
 286:asctecCommIntfOnboard.c **** 	short i=0;
 287:asctecCommIntfOnboard.c **** 	short j=0;
 288:asctecCommIntfOnboard.c **** 	short ii=0;
 289:asctecCommIntfOnboard.c **** 	short z = 0;
 290:asctecCommIntfOnboard.c **** 	 for (i=0;i<MAX_VAR_PACKETS;i++)
 291:asctecCommIntfOnboard.c **** //	short i=2;
 292:asctecCommIntfOnboard.c **** 	 {
 293:asctecCommIntfOnboard.c **** 
 294:asctecCommIntfOnboard.c **** 		//handle variable packet generation and triggering
 295:asctecCommIntfOnboard.c **** 		if (!aciVarPacketTransmissionRate[i]) {
 296:asctecCommIntfOnboard.c **** 		//	continue;
 297:asctecCommIntfOnboard.c **** 		}
 298:asctecCommIntfOnboard.c **** 		else  {
 299:asctecCommIntfOnboard.c **** 			unsigned short packetSize;
 300:asctecCommIntfOnboard.c **** 
 301:asctecCommIntfOnboard.c **** 			//generate packet and send it
 302:asctecCommIntfOnboard.c **** 
 303:asctecCommIntfOnboard.c **** 			//if packet was changed, update pointer table and size
 304:asctecCommIntfOnboard.c **** 			if (aciVarPacketUpdated[i]) {
 305:asctecCommIntfOnboard.c **** 
 306:asctecCommIntfOnboard.c **** 				unsigned short currentPos = 0;
 307:asctecCommIntfOnboard.c **** 
 308:asctecCommIntfOnboard.c **** 				//reset update flag
 309:asctecCommIntfOnboard.c **** 				aciVarPacketUpdated[i] = 0;
 310:asctecCommIntfOnboard.c **** 
 311:asctecCommIntfOnboard.c **** 				for (j=0;j<aciVarPacketSelectLength[i];j++)
 312:asctecCommIntfOnboard.c **** 				{
 313:asctecCommIntfOnboard.c **** 
 314:asctecCommIntfOnboard.c **** 					unsigned short id;
 315:asctecCommIntfOnboard.c **** 
 316:asctecCommIntfOnboard.c **** 					id=aciVarPacketSelect[i][j];
 317:asctecCommIntfOnboard.c **** 
 318:asctecCommIntfOnboard.c **** 					for(ii=0;ii<aciListVarCount;ii++) {
 319:asctecCommIntfOnboard.c **** 						if (aciListVar[ii].id==id)
 320:asctecCommIntfOnboard.c **** 						{
 321:asctecCommIntfOnboard.c **** 							aciVarPacketPtrList[i][currentPos] = aciListVar[ii].ptrToVar;
 322:asctecCommIntfOnboard.c **** 							aciVarPacketTypeList[i][currentPos++] =	aciListVar[ii].varType;
 323:asctecCommIntfOnboard.c **** 							break;
 324:asctecCommIntfOnboard.c **** 						}
 325:asctecCommIntfOnboard.c **** 					}
 326:asctecCommIntfOnboard.c **** 				}
 327:asctecCommIntfOnboard.c **** 				aciVarPacketNumberOfVars[i] = currentPos;
 328:asctecCommIntfOnboard.c **** 
 329:asctecCommIntfOnboard.c **** 				//get packet size
 330:asctecCommIntfOnboard.c **** 				packetSize = 0;
 331:asctecCommIntfOnboard.c **** 				for (z = 0; z < MEMPACKET_MAX_VARS; z++) {
 332:asctecCommIntfOnboard.c **** 					if (aciVarPacketPtrList[i][z] == NULL
 333:asctecCommIntfOnboard.c **** 						)
 334:asctecCommIntfOnboard.c **** 						break;
 335:asctecCommIntfOnboard.c **** 					packetSize += aciVarPacketTypeList[i][z] >> 2;
 336:asctecCommIntfOnboard.c **** 				}
 337:asctecCommIntfOnboard.c **** 				aciVarPacketCurrentSize[i] = packetSize;
 338:asctecCommIntfOnboard.c **** 				aciVarPacketContentBufferLength[i] = packetSize;
 339:asctecCommIntfOnboard.c **** 			}
 340:asctecCommIntfOnboard.c **** 
 341:asctecCommIntfOnboard.c **** 			//check for free space in ring buffer
 342:asctecCommIntfOnboard.c **** 			else if ((aciVarPacketNumberOfVars[i])&&(aciVarPacketCurrentSize[i] + 10 < aciTxRingBufferGetFre
 343:asctecCommIntfOnboard.c **** 
 344:asctecCommIntfOnboard.c **** 				unsigned char startstring[3] = { '!', '#', '!' };
 345:asctecCommIntfOnboard.c **** 				unsigned char messageType = ACIMT_VARPACKET+i;
 346:asctecCommIntfOnboard.c **** 				unsigned short crc = 0xFF;
 347:asctecCommIntfOnboard.c **** 				unsigned short psize=aciVarPacketCurrentSize[i]+1;
 348:asctecCommIntfOnboard.c **** 
 349:asctecCommIntfOnboard.c **** 				aciEngineRateCounter[i]=1;
 350:asctecCommIntfOnboard.c **** 
 351:asctecCommIntfOnboard.c **** 				//add header to ringbuffer
 352:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(&startstring, 3);
 353:asctecCommIntfOnboard.c **** 
 354:asctecCommIntfOnboard.c **** 				//add message type to ringbuffer
 355:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(&messageType, 1);
 356:asctecCommIntfOnboard.c **** 				crc=aciUpdateCrc16(crc,&messageType,1);
 357:asctecCommIntfOnboard.c **** 
 358:asctecCommIntfOnboard.c **** 
 359:asctecCommIntfOnboard.c **** 				//add data size to ringbuffer
 360:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(&psize, 2);
 361:asctecCommIntfOnboard.c **** 				crc=aciUpdateCrc16(crc,&psize,2);
 362:asctecCommIntfOnboard.c **** 
 363:asctecCommIntfOnboard.c **** 
 364:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(&aciVarPacketMagicCode[i],1);
 365:asctecCommIntfOnboard.c **** 				crc=aciUpdateCrc16(crc,&aciVarPacketMagicCode[i],1);
 366:asctecCommIntfOnboard.c **** 
 367:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(aciVarPacketContentBuffer[i],aciVarPacketContentBufferLength[i]);
 368:asctecCommIntfOnboard.c **** 				crc=aciUpdateCrc16(crc,&aciVarPacketContentBuffer[i][0],aciVarPacketContentBufferLength[i]);
 369:asctecCommIntfOnboard.c **** 
 370:asctecCommIntfOnboard.c **** 				//add CRC to ringbuffer
 371:asctecCommIntfOnboard.c **** 				aciTxRingBufferAddData(&crc, 2);
 372:asctecCommIntfOnboard.c **** 
 373:asctecCommIntfOnboard.c **** 			}
 374:asctecCommIntfOnboard.c **** 		}
 375:asctecCommIntfOnboard.c **** 	 }
 376:asctecCommIntfOnboard.c **** }
 377:asctecCommIntfOnboard.c **** 
 378:asctecCommIntfOnboard.c **** void aciSyncVar(void) {
 379:asctecCommIntfOnboard.c **** 	short i = 0;
 380:asctecCommIntfOnboard.c **** 	int z = 0;
 381:asctecCommIntfOnboard.c **** 	for (i = 0; i < MAX_VAR_PACKETS; i++)
 382:asctecCommIntfOnboard.c **** 		if (aciVarPacketNumberOfVars[i]) {
 383:asctecCommIntfOnboard.c **** 			short cnt = 0;
 384:asctecCommIntfOnboard.c **** 			for (z = 0; z < aciVarPacketNumberOfVars[i]; z++) {
 385:asctecCommIntfOnboard.c **** 				memcpy(&aciVarPacketContentBuffer[i][cnt], aciVarPacketPtrList[i][z], aciVarPacketTypeList[i][z
 386:asctecCommIntfOnboard.c **** 				cnt += aciVarPacketTypeList[i][z] >> 2;
 387:asctecCommIntfOnboard.c **** 
 388:asctecCommIntfOnboard.c **** 			}
 389:asctecCommIntfOnboard.c **** 		}
 390:asctecCommIntfOnboard.c **** }
 391:asctecCommIntfOnboard.c **** 
 392:asctecCommIntfOnboard.c **** void aciSyncCmd(void) {
 393:asctecCommIntfOnboard.c **** 
 394:asctecCommIntfOnboard.c **** 	short j = 0;
 395:asctecCommIntfOnboard.c **** 	short i = 0;
 396:asctecCommIntfOnboard.c **** 	short k = 0;
 397:asctecCommIntfOnboard.c **** 	for (j = 0; j < MAX_VAR_PACKETS; j++)
 398:asctecCommIntfOnboard.c **** 		if (aciCmdPacketReceived[j]) {
 399:asctecCommIntfOnboard.c **** 			short cnt = 0;
 400:asctecCommIntfOnboard.c **** 			for (i = 0; i < aciCmdPacketSelectLength[j]; i++) {
 401:asctecCommIntfOnboard.c **** 				for (k =0; k < aciListCmdCount;k++)  {
 402:asctecCommIntfOnboard.c **** 					if (aciListCmd[k].id == aciCmdPacketSelect[j][i]) {
 403:asctecCommIntfOnboard.c **** 						memcpy(aciListCmd[k].ptrToVar, &aciCmdPacketContentBuffer[j][cnt], aciListCmd[k].varType >> 2
 404:asctecCommIntfOnboard.c **** 						cnt += aciListCmd[k].varType >> 2;
 405:asctecCommIntfOnboard.c **** 						break;
 406:asctecCommIntfOnboard.c **** 					}
 407:asctecCommIntfOnboard.c **** 				}
 408:asctecCommIntfOnboard.c **** 			}
 409:asctecCommIntfOnboard.c **** 			aciCmdPacketReceived[j]=0;
 410:asctecCommIntfOnboard.c **** 		}
 411:asctecCommIntfOnboard.c **** }
 412:asctecCommIntfOnboard.c **** 
 413:asctecCommIntfOnboard.c **** void aciSyncPar(void) {
 414:asctecCommIntfOnboard.c **** 
 415:asctecCommIntfOnboard.c **** 	short j = 0;
 416:asctecCommIntfOnboard.c **** 	short i = 0;
 417:asctecCommIntfOnboard.c **** 	short k = 0;
 418:asctecCommIntfOnboard.c **** 	for (j = 0; j < MAX_VAR_PACKETS; j++)
 419:asctecCommIntfOnboard.c **** 		if (aciParamPacketReceived[j]) {
 420:asctecCommIntfOnboard.c **** 			short cnt = 0;
 421:asctecCommIntfOnboard.c **** 			for (i = 0; i < aciParPacketSelectLength[j]; i++) {
 422:asctecCommIntfOnboard.c **** 				for (k =0; k < aciListParCount;k++)  {
 423:asctecCommIntfOnboard.c **** 					if (aciListPar[k].id == aciParPacketSelect[j][i]) {
 424:asctecCommIntfOnboard.c **** 						memcpy(aciListPar[k].ptrToVar, &aciParPacketContentBuffer[j][cnt], aciListPar[k].varType >> 2
 425:asctecCommIntfOnboard.c **** 						cnt += aciListPar[k].varType >> 2;
 426:asctecCommIntfOnboard.c **** 						break;
 427:asctecCommIntfOnboard.c **** 					}
 428:asctecCommIntfOnboard.c **** 				}
 429:asctecCommIntfOnboard.c **** 			}
 430:asctecCommIntfOnboard.c **** 			aciParamPacketReceived[j]=0;
 431:asctecCommIntfOnboard.c **** 		}
 432:asctecCommIntfOnboard.c **** 
 433:asctecCommIntfOnboard.c **** }
 434:asctecCommIntfOnboard.c **** 
 435:asctecCommIntfOnboard.c **** /** handles all data processing. Has to be called a specified number of times per second. See aciSe
 436:asctecCommIntfOnboard.c **** void aciEngine(void)
 437:asctecCommIntfOnboard.c **** {
 438:asctecCommIntfOnboard.c **** 	int i=0;
 439:asctecCommIntfOnboard.c **** 
 440:asctecCommIntfOnboard.c **** 	//handle heart beat
 441:asctecCommIntfOnboard.c **** 
 442:asctecCommIntfOnboard.c **** 	aciHeartBeatCnt++;
 443:asctecCommIntfOnboard.c **** 
 444:asctecCommIntfOnboard.c **** 
 445:asctecCommIntfOnboard.c **** 	if (aciHeartBeatCnt>=aciHeartBeatTimeout)
 446:asctecCommIntfOnboard.c **** 	{
 447:asctecCommIntfOnboard.c **** 		//stop transmitting packets
 448:asctecCommIntfOnboard.c **** 		aciHeartBeatCnt=0;
 449:asctecCommIntfOnboard.c **** 		aciInhibitPacketTransmission=1;
 450:asctecCommIntfOnboard.c **** 	}
 451:asctecCommIntfOnboard.c **** 
 452:asctecCommIntfOnboard.c **** 	if (!aciInhibitPacketTransmission)
 453:asctecCommIntfOnboard.c **** 	{
 454:asctecCommIntfOnboard.c **** 		aciSendVar();
 455:asctecCommIntfOnboard.c **** 	}
 456:asctecCommIntfOnboard.c **** 
 457:asctecCommIntfOnboard.c **** 	for(i=0;i<MAX_VAR_PACKETS;i++)
 458:asctecCommIntfOnboard.c **** 		{
 459:asctecCommIntfOnboard.c **** 		aciEngineRateCounter[i]++;
 460:asctecCommIntfOnboard.c **** 		if(aciEngineRateCounter[i]>(5*aciEngineRate)) aciEngineRateCounter[i]=0;
 461:asctecCommIntfOnboard.c **** 		}
 462:asctecCommIntfOnboard.c **** 
 463:asctecCommIntfOnboard.c **** 	if (aciParamSaveIt && (aciWriteParatoFlashCallback)) {
 464:asctecCommIntfOnboard.c **** 		short output;
 465:asctecCommIntfOnboard.c **** 		output = aciWriteParatoFlashCallback();
 466:asctecCommIntfOnboard.c **** 		aciParamSaveIt = 0;
 467:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_SAVEPARAM,&output,2);
 468:asctecCommIntfOnboard.c **** 	}
 469:asctecCommIntfOnboard.c **** 
 470:asctecCommIntfOnboard.c **** 	if(aciSendSingleCount) {
 471:asctecCommIntfOnboard.c **** //		unsigned short temp_singleCount = 0;
 472:asctecCommIntfOnboard.c **** 
 473:asctecCommIntfOnboard.c **** 		for(i=0;i<MAX_VARIABLE_LIST;i++) {
 474:asctecCommIntfOnboard.c **** 			if(aciSendSingleStatus[i]==0) continue;
 475:asctecCommIntfOnboard.c **** 			else if(aciSendSingleStatus[i]==1) {
 476:asctecCommIntfOnboard.c **** 				aciSendSingleWithAck(i);
 477:asctecCommIntfOnboard.c **** 			} else {
 478:asctecCommIntfOnboard.c **** 				if(aciSendSingleStatus[i]==(aciEngineRate+2)) {
 479:asctecCommIntfOnboard.c **** 					aciSendSingleStatus[i]=1;
 480:asctecCommIntfOnboard.c **** 				} else aciSendSingleStatus[i]++;
 481:asctecCommIntfOnboard.c **** 			}
 482:asctecCommIntfOnboard.c **** 		}
 483:asctecCommIntfOnboard.c **** 	} else aciSendSingleNextBufferCount=0;
 484:asctecCommIntfOnboard.c **** }
 485:asctecCommIntfOnboard.c **** 
 486:asctecCommIntfOnboard.c **** /*
 487:asctecCommIntfOnboard.c ****  * ACI RX Part
 488:asctecCommIntfOnboard.c ****  *
 489:asctecCommIntfOnboard.c ****  *
 490:asctecCommIntfOnboard.c ****  *
 491:asctecCommIntfOnboard.c ****  */
 492:asctecCommIntfOnboard.c **** 
 493:asctecCommIntfOnboard.c **** unsigned char aciRxDataBuffer[ACI_RX_BUFFER_SIZE];
 494:asctecCommIntfOnboard.c **** unsigned short aciRxDataCnt;
 495:asctecCommIntfOnboard.c **** 
 496:asctecCommIntfOnboard.c **** void aciRxHandleMessage(unsigned char messagetype, unsigned short length)
 497:asctecCommIntfOnboard.c **** {
 498:asctecCommIntfOnboard.c **** 	short i=0;
 499:asctecCommIntfOnboard.c **** 	int z=0;
 500:asctecCommIntfOnboard.c **** 	int k=0;
 501:asctecCommIntfOnboard.c **** 
 502:asctecCommIntfOnboard.c **** 	unsigned char packetSelect;
 503:asctecCommIntfOnboard.c **** 	short i_single ;
 504:asctecCommIntfOnboard.c **** 	struct ACI_INFO aciInfo;
 505:asctecCommIntfOnboard.c **** 	unsigned char c[2];
 506:asctecCommIntfOnboard.c **** 	unsigned char switch_type;
 507:asctecCommIntfOnboard.c **** 	short output;
 508:asctecCommIntfOnboard.c **** 	if((messagetype>ACIMT_UPDATEVARPACKET) && (messagetype<ACIMT_UPDATEVARPACKET+0x0f)) switch_type = 
 509:asctecCommIntfOnboard.c **** 	else if((messagetype>ACIMT_UPDATECMDPACKET) && (messagetype<ACIMT_UPDATECMDPACKET+0x0f)) switch_ty
 510:asctecCommIntfOnboard.c **** 	else if((messagetype>ACIMT_UPDATEPARAMPACKET) &&(messagetype<ACIMT_UPDATEPARAMPACKET+0x0f)) switch
 511:asctecCommIntfOnboard.c **** 	else if((messagetype>ACIMT_CMDPACKET) && (messagetype<ACIMT_CMDPACKET+0x0f)) switch_type = ACIMT_C
 512:asctecCommIntfOnboard.c **** 	else if((messagetype>ACIMT_PARAMPACKET) && (messagetype<ACIMT_PARAMPACKET+0x0f)) switch_type = ACI
 513:asctecCommIntfOnboard.c **** 	else switch_type=messagetype;
 514:asctecCommIntfOnboard.c **** 
 515:asctecCommIntfOnboard.c **** 	switch (switch_type)
 516:asctecCommIntfOnboard.c **** 	{
 517:asctecCommIntfOnboard.c **** 	case ACIMT_INFO_REQUEST:
 518:asctecCommIntfOnboard.c **** 		aciInfo.verMajor=ACI_VER_MAJOR;
 519:asctecCommIntfOnboard.c **** 		aciInfo.verMinor=ACI_VER_MINOR;
 520:asctecCommIntfOnboard.c **** 		aciInfo.maxDescLength=MAX_DESC_LENGTH;
 521:asctecCommIntfOnboard.c **** 		aciInfo.maxNameLength=MAX_NAME_LENGTH;
 522:asctecCommIntfOnboard.c **** 		aciInfo.maxUnitLength=MAX_UNIT_LENGTH;
 523:asctecCommIntfOnboard.c **** 		aciInfo.maxVarPackets=MAX_VAR_PACKETS;
 524:asctecCommIntfOnboard.c **** 		aciInfo.memPacketMaxVars=MEMPACKET_MAX_VARS;
 525:asctecCommIntfOnboard.c **** 		aciInfo.flags=0;
 526:asctecCommIntfOnboard.c **** 		for (i=0;i<8;i++)
 527:asctecCommIntfOnboard.c **** 			aciInfo.dummy[i]=0;
 528:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_INFO_REPLY,&aciInfo,sizeof(aciInfo));
 529:asctecCommIntfOnboard.c **** 
 530:asctecCommIntfOnboard.c **** 	break;
 531:asctecCommIntfOnboard.c **** 	case ACIMT_REQUESTVARTABLEENTRIES:
 532:asctecCommIntfOnboard.c **** 		for (i=0;i<length/2;i++)
 533:asctecCommIntfOnboard.c **** 		{
 534:asctecCommIntfOnboard.c **** 			unsigned short selectedId;
 535:asctecCommIntfOnboard.c **** 			unsigned char idFound=0;
 536:asctecCommIntfOnboard.c **** 
 537:asctecCommIntfOnboard.c **** 			selectedId=(aciRxDataBuffer[i*2+1]<<8)|aciRxDataBuffer[i*2];
 538:asctecCommIntfOnboard.c **** 			//determine no of entries in var table
 539:asctecCommIntfOnboard.c **** 			for(k=0;k<aciListVarCount;k++) {
 540:asctecCommIntfOnboard.c **** 				if (selectedId==aciListVar[k].id)
 541:asctecCommIntfOnboard.c **** 				{
 542:asctecCommIntfOnboard.c **** 					idFound=1;
 543:asctecCommIntfOnboard.c **** 					break;
 544:asctecCommIntfOnboard.c **** 				}
 545:asctecCommIntfOnboard.c **** 			}
 546:asctecCommIntfOnboard.c **** 			if ((idFound))
 547:asctecCommIntfOnboard.c **** 				{
 548:asctecCommIntfOnboard.c **** 					//before we send the data, the strings have to be copied from flash to memory
 549:asctecCommIntfOnboard.c **** 					struct ACI_MEM_TABLE_ENTRY_WITH_STRINGS tableEntry;
 550:asctecCommIntfOnboard.c **** 
 551:asctecCommIntfOnboard.c **** 					if (strlen(aciListVar[k].name)>MAX_NAME_LENGTH)
 552:asctecCommIntfOnboard.c **** 					{
 553:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.name[0]),aciListVar[k].name,MAX_NAME_LENGTH);
 554:asctecCommIntfOnboard.c **** 						tableEntry.name[MAX_NAME_LENGTH-1]=0;
 555:asctecCommIntfOnboard.c **** 					}else
 556:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.name[0]),aciListVar[k].name);
 557:asctecCommIntfOnboard.c **** 
 558:asctecCommIntfOnboard.c **** 					if (strlen(aciListVar[k].description)>MAX_DESC_LENGTH)
 559:asctecCommIntfOnboard.c **** 					{
 560:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.description[0]),aciListVar[k].description,MAX_NAME_LENGTH);
 561:asctecCommIntfOnboard.c **** 						tableEntry.description[MAX_DESC_LENGTH-1]=0;
 562:asctecCommIntfOnboard.c **** 					}else
 563:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.description[0]),aciListVar[k].description);
 564:asctecCommIntfOnboard.c **** 
 565:asctecCommIntfOnboard.c **** 					if (strlen(aciListVar[k].unit)>MAX_UNIT_LENGTH)
 566:asctecCommIntfOnboard.c **** 					{
 567:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.unit[0]),aciListVar[k].unit,MAX_UNIT_LENGTH);
 568:asctecCommIntfOnboard.c **** 						tableEntry.unit[MAX_UNIT_LENGTH-1]=0;
 569:asctecCommIntfOnboard.c **** 					}else
 570:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.unit[0]),aciListVar[k].unit);
 571:asctecCommIntfOnboard.c **** 
 572:asctecCommIntfOnboard.c **** 					tableEntry.id=aciListVar[k].id;
 573:asctecCommIntfOnboard.c **** 					tableEntry.varType=aciListVar[k].varType;
 574:asctecCommIntfOnboard.c **** 					tableEntry.ptrToVar=NULL;
 575:asctecCommIntfOnboard.c **** 					aciTxSendPacket(ACIMT_SENDVARTABLEENTRY,&tableEntry,sizeof (struct ACI_MEM_TABLE_ENTRY_WITH_ST
 576:asctecCommIntfOnboard.c **** 
 577:asctecCommIntfOnboard.c **** 				}else
 578:asctecCommIntfOnboard.c **** 					aciTxSendPacket(ACIMT_SENDVARTABLEENTRYINVALID,&selectedId,2);
 579:asctecCommIntfOnboard.c **** 
 580:asctecCommIntfOnboard.c **** 		}
 581:asctecCommIntfOnboard.c **** 
 582:asctecCommIntfOnboard.c **** 	break;
 583:asctecCommIntfOnboard.c **** 	case ACIMT_GETVARTABLEINFO:
 584:asctecCommIntfOnboard.c **** 	{
 585:asctecCommIntfOnboard.c **** 		unsigned short idList[aciListVarCount*2+2];
 586:asctecCommIntfOnboard.c **** 		unsigned short cnt=1;
 587:asctecCommIntfOnboard.c **** 
 588:asctecCommIntfOnboard.c **** 		idList[0]=(unsigned short)aciListVarCount;
 589:asctecCommIntfOnboard.c **** 
 590:asctecCommIntfOnboard.c **** 		for(k=0;k<aciListVarCount;k++)
 591:asctecCommIntfOnboard.c **** 				idList[cnt++]=aciListVar[k].id;
 592:asctecCommIntfOnboard.c **** 
 593:asctecCommIntfOnboard.c **** 		//send no of entries
 594:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_SENDVARTABLEINFO,&idList[0],aciListVarCount*2+2);
 595:asctecCommIntfOnboard.c **** 	}
 596:asctecCommIntfOnboard.c **** 	break;
 597:asctecCommIntfOnboard.c **** 	case ACIMT_UPDATEVARPACKET:
 598:asctecCommIntfOnboard.c **** 			packetSelect=messagetype-ACIMT_UPDATEVARPACKET;
 599:asctecCommIntfOnboard.c **** 			aciInhibitPacketTransmission=0;
 600:asctecCommIntfOnboard.c **** 			if (packetSelect>=MAX_VAR_PACKETS)
 601:asctecCommIntfOnboard.c **** 				break;
 602:asctecCommIntfOnboard.c **** 			if (length>MEMPACKET_MAX_VARS*2+1)
 603:asctecCommIntfOnboard.c **** 			{
 604:asctecCommIntfOnboard.c **** 				c[0]=ACIMT_UPDATEVARPACKET+packetSelect;
 605:asctecCommIntfOnboard.c **** 				c[1]=ACI_ACK_PACKET_TOO_LONG;
 606:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_ACK,&c[0],2);
 607:asctecCommIntfOnboard.c **** 				break;
 608:asctecCommIntfOnboard.c **** 			}
 609:asctecCommIntfOnboard.c **** 
 610:asctecCommIntfOnboard.c **** 			for (i=0;i<MEMPACKET_MAX_VARS;i++)
 611:asctecCommIntfOnboard.c **** 			{
 612:asctecCommIntfOnboard.c **** 				aciVarPacketSelect[packetSelect][i]=ID_NONE;
 613:asctecCommIntfOnboard.c **** 				aciVarPacketPtrList[packetSelect][i]=NULL;
 614:asctecCommIntfOnboard.c **** 				aciVarPacketTypeList[packetSelect][i]=0;
 615:asctecCommIntfOnboard.c **** 			}
 616:asctecCommIntfOnboard.c **** 			aciVarPacketMagicCode[packetSelect]=aciRxDataBuffer[0];
 617:asctecCommIntfOnboard.c **** 			memcpy(&aciVarPacketSelect[packetSelect],&aciRxDataBuffer[1],length-1);
 618:asctecCommIntfOnboard.c **** 			aciVarPacketSelectLength[packetSelect]=(length-1)/2;
 619:asctecCommIntfOnboard.c **** 			aciVarPacketContentBufferLength[packetSelect] = aciVarPacketSelectLength[packetSelect];
 620:asctecCommIntfOnboard.c **** 			aciVarPacketUpdated[packetSelect]=1;
 621:asctecCommIntfOnboard.c **** 			c[0]=ACIMT_UPDATEVARPACKET+packetSelect;
 622:asctecCommIntfOnboard.c **** 			c[1]=ACI_ACK_OK;
 623:asctecCommIntfOnboard.c **** 			aciTxSendPacket(ACIMT_ACK,&c[0],2);
 624:asctecCommIntfOnboard.c **** 
 625:asctecCommIntfOnboard.c **** 		break;
 626:asctecCommIntfOnboard.c **** 
 627:asctecCommIntfOnboard.c **** 	case ACIMT_REQUESTCMDTABLEENTRIES:
 628:asctecCommIntfOnboard.c **** 		for (i=0;i<length/2;i++)
 629:asctecCommIntfOnboard.c **** 		{
 630:asctecCommIntfOnboard.c **** 			unsigned short selectedId;
 631:asctecCommIntfOnboard.c **** 			unsigned char  idFound=0;
 632:asctecCommIntfOnboard.c **** 
 633:asctecCommIntfOnboard.c **** 			selectedId=(aciRxDataBuffer[i*2+1]<<8)|aciRxDataBuffer[i*2];
 634:asctecCommIntfOnboard.c **** 			//determine no of entries in var table
 635:asctecCommIntfOnboard.c **** 			for(k=0;k<aciListCmdCount;k++) {
 636:asctecCommIntfOnboard.c **** 					if (selectedId==aciListCmd[k].id)
 637:asctecCommIntfOnboard.c **** 					{
 638:asctecCommIntfOnboard.c **** 						idFound=1;
 639:asctecCommIntfOnboard.c **** 						break;
 640:asctecCommIntfOnboard.c **** 					}
 641:asctecCommIntfOnboard.c **** 			}
 642:asctecCommIntfOnboard.c **** 			if ((idFound))
 643:asctecCommIntfOnboard.c **** 				{
 644:asctecCommIntfOnboard.c **** 					//before we send the data, the strings have to be copied from flash to memory
 645:asctecCommIntfOnboard.c **** 					struct ACI_MEM_TABLE_ENTRY_WITH_STRINGS tableEntry;
 646:asctecCommIntfOnboard.c **** 
 647:asctecCommIntfOnboard.c **** 					if (strlen(aciListCmd[k].name)>MAX_NAME_LENGTH)
 648:asctecCommIntfOnboard.c **** 					{
 649:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.name[0]),aciListCmd[k].name,MAX_NAME_LENGTH);
 650:asctecCommIntfOnboard.c **** 						tableEntry.name[MAX_NAME_LENGTH-1]=0;
 651:asctecCommIntfOnboard.c **** 					} else
 652:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.name[0]),aciListCmd[k].name);
 653:asctecCommIntfOnboard.c **** 
 654:asctecCommIntfOnboard.c **** 					if (strlen(aciListCmd[k].description)>MAX_DESC_LENGTH)
 655:asctecCommIntfOnboard.c **** 					{
 656:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.description[0]),aciListCmd[k].description,MAX_NAME_LENGTH);
 657:asctecCommIntfOnboard.c **** 						tableEntry.description[MAX_DESC_LENGTH-1]=0;
 658:asctecCommIntfOnboard.c **** 					}else
 659:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.description[0]),aciListCmd[k].description);
 660:asctecCommIntfOnboard.c **** 
 661:asctecCommIntfOnboard.c **** 					if (strlen(aciListCmd[k].unit)>MAX_UNIT_LENGTH)
 662:asctecCommIntfOnboard.c **** 					{
 663:asctecCommIntfOnboard.c **** 						memcpy(&(tableEntry.unit[0]),aciListCmd[k].unit,MAX_UNIT_LENGTH);
 664:asctecCommIntfOnboard.c **** 						tableEntry.unit[MAX_UNIT_LENGTH-1]=0;
 665:asctecCommIntfOnboard.c **** 					}else
 666:asctecCommIntfOnboard.c **** 						strcpy(&(tableEntry.unit[0]),aciListCmd[k].unit);
 667:asctecCommIntfOnboard.c **** 
 668:asctecCommIntfOnboard.c **** 					tableEntry.id=aciListCmd[k].id;
 669:asctecCommIntfOnboard.c **** 					tableEntry.varType=aciListCmd[k].varType;
 670:asctecCommIntfOnboard.c **** 					tableEntry.ptrToVar=NULL;
 671:asctecCommIntfOnboard.c **** 					aciTxSendPacket(ACIMT_SENDCMDTABLEENTRY,&tableEntry,sizeof (struct ACI_MEM_TABLE_ENTRY_WITH_ST
 672:asctecCommIntfOnboard.c **** 
 673:asctecCommIntfOnboard.c **** 				}else
 674:asctecCommIntfOnboard.c **** 					aciTxSendPacket(ACIMT_SENDCMDTABLEENTRYINVALID,&selectedId,2);
 675:asctecCommIntfOnboard.c **** 
 676:asctecCommIntfOnboard.c **** 		}
 677:asctecCommIntfOnboard.c **** 
 678:asctecCommIntfOnboard.c **** 	break;
 679:asctecCommIntfOnboard.c **** 	case ACIMT_GETCMDTABLEINFO:
 680:asctecCommIntfOnboard.c **** 	{
 681:asctecCommIntfOnboard.c **** 		unsigned short idList[aciListCmdCount*2+2];
 682:asctecCommIntfOnboard.c **** 		unsigned short cnt=1;
 683:asctecCommIntfOnboard.c **** 
 684:asctecCommIntfOnboard.c **** 		idList[0]=aciListCmdCount;
 685:asctecCommIntfOnboard.c **** 
 686:asctecCommIntfOnboard.c **** 		for(k=0;k<aciListCmdCount;k++) {
 687:asctecCommIntfOnboard.c **** 			idList[cnt++]=aciListCmd[k].id;
 688:asctecCommIntfOnboard.c **** 		}
 689:asctecCommIntfOnboard.c **** 		//send no of entries
 690:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_SENDCMDTABLEINFO,&idList[0],aciListCmdCount*2+2);
 691:asctecCommIntfOnboard.c **** 	}
 692:asctecCommIntfOnboard.c **** 	break;
 693:asctecCommIntfOnboard.c **** 	case ACIMT_UPDATECMDPACKET:
 694:asctecCommIntfOnboard.c **** 			packetSelect=messagetype-ACIMT_UPDATECMDPACKET;
 695:asctecCommIntfOnboard.c **** 			if (packetSelect>=MAX_VAR_PACKETS)
 696:asctecCommIntfOnboard.c **** 				break;
 697:asctecCommIntfOnboard.c **** 			if (length>MEMPACKET_MAX_VARS*2+1)
 698:asctecCommIntfOnboard.c **** 			{
 699:asctecCommIntfOnboard.c **** 				c[0]=ACIMT_UPDATECMDPACKET+packetSelect;
 700:asctecCommIntfOnboard.c **** 				c[1]=ACI_ACK_PACKET_TOO_LONG;
 701:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_ACK,&c[0],2);
 702:asctecCommIntfOnboard.c **** 				break;
 703:asctecCommIntfOnboard.c **** 			}
 704:asctecCommIntfOnboard.c **** 
 705:asctecCommIntfOnboard.c **** 			aciCmdPacketMagicCode[packetSelect]=aciRxDataBuffer[0];
 706:asctecCommIntfOnboard.c **** 			aciCmdPacketWithACK[packetSelect]=aciRxDataBuffer[1];
 707:asctecCommIntfOnboard.c **** 			memcpy(&aciCmdPacketSelect[packetSelect], &aciRxDataBuffer[2],length - 2);
 708:asctecCommIntfOnboard.c **** 			short cnta = 0;
 709:asctecCommIntfOnboard.c **** 			for (i = 0; i < (length - 2) / 2; i++) {
 710:asctecCommIntfOnboard.c **** 				for(k=0;k<aciListCmdCount;k++) {
 711:asctecCommIntfOnboard.c **** 					if (aciListCmd[k].id
 712:asctecCommIntfOnboard.c **** 							== aciCmdPacketSelect[packetSelect][i]) {
 713:asctecCommIntfOnboard.c **** 						cnta += aciListCmd[k].varType >> 2;
 714:asctecCommIntfOnboard.c **** 						break;
 715:asctecCommIntfOnboard.c **** 					}
 716:asctecCommIntfOnboard.c **** 				}
 717:asctecCommIntfOnboard.c **** 
 718:asctecCommIntfOnboard.c **** 			}
 719:asctecCommIntfOnboard.c **** 	     	if(cnta==0) break;
 720:asctecCommIntfOnboard.c **** 			aciCmdPacketContentBufferLength[packetSelect] = cnta;
 721:asctecCommIntfOnboard.c **** 			aciCmdPacketSelectLength[packetSelect]=(length-2)/2;
 722:asctecCommIntfOnboard.c **** 			c[0]=ACIMT_UPDATECMDPACKET+packetSelect;
 723:asctecCommIntfOnboard.c **** 			c[1]=ACI_ACK_OK;
 724:asctecCommIntfOnboard.c **** 			aciTxSendPacket(ACIMT_ACK,&c[0],2);
 725:asctecCommIntfOnboard.c **** 
 726:asctecCommIntfOnboard.c **** 		break;
 727:asctecCommIntfOnboard.c **** 	case ACIMT_UPDATEPARAMPACKET:
 728:asctecCommIntfOnboard.c **** 
 729:asctecCommIntfOnboard.c **** 				packetSelect=messagetype-ACIMT_UPDATEPARAMPACKET;
 730:asctecCommIntfOnboard.c **** 				unsigned char temp_buffer[MEMPACKET_MAX_VARS*16];
 731:asctecCommIntfOnboard.c **** 				if (packetSelect>=MAX_VAR_PACKETS)
 732:asctecCommIntfOnboard.c **** 					break;
 733:asctecCommIntfOnboard.c **** 				if (length>MEMPACKET_MAX_VARS*2+1)
 734:asctecCommIntfOnboard.c **** 				{
 735:asctecCommIntfOnboard.c **** 					c[0]=ACIMT_UPDATEPARAMPACKET+packetSelect;
 736:asctecCommIntfOnboard.c **** 					c[1]=ACI_ACK_PACKET_TOO_LONG;
 737:asctecCommIntfOnboard.c **** 					aciTxSendPacket(ACIMT_ACK,&c[0],2);
 738:asctecCommIntfOnboard.c **** 					break;
 739:asctecCommIntfOnboard.c **** 				}
 740:asctecCommIntfOnboard.c **** 
 741:asctecCommIntfOnboard.c **** 				aciParPacketMagicCode[packetSelect]=aciRxDataBuffer[0];
 742:asctecCommIntfOnboard.c **** 				memcpy(&aciParPacketSelect[packetSelect],&aciRxDataBuffer[1],length-1);
 743:asctecCommIntfOnboard.c **** 
 744:asctecCommIntfOnboard.c **** 				temp_buffer[0]=ACIMT_UPDATEPARAMPACKET+packetSelect;
 745:asctecCommIntfOnboard.c **** 				temp_buffer[1]=ACI_ACK_OK;
 746:asctecCommIntfOnboard.c **** 				short cunt = 0;
 747:asctecCommIntfOnboard.c **** 				for (i = 0; i < (length - 1) / 2; i++) {
 748:asctecCommIntfOnboard.c **** 					for (k=0;k<aciListParCount;k++) {
 749:asctecCommIntfOnboard.c **** 						if (aciListPar[k].id == aciParPacketSelect[packetSelect][i]) {
 750:asctecCommIntfOnboard.c **** 							memcpy(&temp_buffer[cunt+2],aciListPar[k].ptrToVar,aciListPar[k].varType >> 2);
 751:asctecCommIntfOnboard.c **** 							cunt += aciListPar[k].varType >> 2;
 752:asctecCommIntfOnboard.c **** 							break;
 753:asctecCommIntfOnboard.c **** 						}
 754:asctecCommIntfOnboard.c **** 					}
 755:asctecCommIntfOnboard.c **** 				}
 756:asctecCommIntfOnboard.c **** 				aciParPacketContentBufferLength[packetSelect]=cunt;
 757:asctecCommIntfOnboard.c **** 				aciParPacketSelectLength[packetSelect]=(length-1)/2;
 758:asctecCommIntfOnboard.c **** //				c[0]=ACIMT_UPDATEPARAMPACKET+packetSelect;
 759:asctecCommIntfOnboard.c **** //				c[1]=ACI_ACK_OK;
 760:asctecCommIntfOnboard.c **** //				aciTxSendPacket(ACI_DBG,&temp_buffer[2],2);
 761:asctecCommIntfOnboard.c **** //				aciTxSendPacket(ACI_DBG,&temp_buffer[4],2);
 762:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_ACK,&temp_buffer[0],2+cunt);
 763:asctecCommIntfOnboard.c **** 
 764:asctecCommIntfOnboard.c **** 			break;
 765:asctecCommIntfOnboard.c **** 
 766:asctecCommIntfOnboard.c ****     case ACIMT_CMDPACKET:
 767:asctecCommIntfOnboard.c ****          //check magic code to see that the packet fits the desired configuration
 768:asctecCommIntfOnboard.c **** 
 769:asctecCommIntfOnboard.c ****          packetSelect=messagetype-ACIMT_CMDPACKET;
 770:asctecCommIntfOnboard.c **** //     	aciTxSendPacket(ACI_DBG, &aciCmdPacketContentBufferLength[packetSelect], 2);
 771:asctecCommIntfOnboard.c **** //     	aciTxSendPacket(ACI_DBG, &length, 2);
 772:asctecCommIntfOnboard.c ****          if (packetSelect>=MAX_VAR_PACKETS)
 773:asctecCommIntfOnboard.c ****             break;
 774:asctecCommIntfOnboard.c ****          if (((aciCmdPacketContentBufferLength[packetSelect]==length-1))) //aciCmdPacketMagicCode[p
 775:asctecCommIntfOnboard.c ****          {
 776:asctecCommIntfOnboard.c ****         	memcpy(&aciCmdPacketContentBuffer[packetSelect][0],&aciRxDataBuffer[1],length-1);
 777:asctecCommIntfOnboard.c ****         	aciCmdPacketReceived[packetSelect]=1;
 778:asctecCommIntfOnboard.c **** 			if (aciCmdPacketWithACK[packetSelect]) {
 779:asctecCommIntfOnboard.c **** 				c[0] = ACIMT_CMDACK + packetSelect;
 780:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_ACK, &c[0], 1);
 781:asctecCommIntfOnboard.c **** 			}
 782:asctecCommIntfOnboard.c **** 			aciCmdPacketContentBufferValid[packetSelect] = 1;
 783:asctecCommIntfOnboard.c **** 			aciCmdPacketContentBufferInvalidCnt[packetSelect] = 0;
 784:asctecCommIntfOnboard.c **** 
 785:asctecCommIntfOnboard.c **** 		} else {
 786:asctecCommIntfOnboard.c **** 			aciCmdPacketContentBufferValid[packetSelect] = 0;
 787:asctecCommIntfOnboard.c **** 			aciCmdPacketContentBufferInvalidCnt[packetSelect]++;
 788:asctecCommIntfOnboard.c ****          }
 789:asctecCommIntfOnboard.c ****     break;
 790:asctecCommIntfOnboard.c **** 
 791:asctecCommIntfOnboard.c ****     // Parameter
 792:asctecCommIntfOnboard.c ****     case ACIMT_REQUESTPARAMTABLEENTRIES:
 793:asctecCommIntfOnboard.c ****     		for (i=0;i<length/2;i++)
 794:asctecCommIntfOnboard.c ****     		{
 795:asctecCommIntfOnboard.c ****     			unsigned short selectedId;
 796:asctecCommIntfOnboard.c ****     			unsigned char  idFound=0;
 797:asctecCommIntfOnboard.c ****     			k=0;
 798:asctecCommIntfOnboard.c **** 
 799:asctecCommIntfOnboard.c ****     			selectedId=(aciRxDataBuffer[i*2+1]<<8)|aciRxDataBuffer[i*2];
 800:asctecCommIntfOnboard.c ****     			//determine no of entries in param table
 801:asctecCommIntfOnboard.c ****     			for(k=0;k<aciListParCount;k++) {
 802:asctecCommIntfOnboard.c ****     							if (selectedId==aciListPar[k].id)
 803:asctecCommIntfOnboard.c ****     							{
 804:asctecCommIntfOnboard.c ****     								idFound=1;
 805:asctecCommIntfOnboard.c ****     								break;
 806:asctecCommIntfOnboard.c ****     							}
 807:asctecCommIntfOnboard.c ****     						}
 808:asctecCommIntfOnboard.c ****     			if ((idFound))
 809:asctecCommIntfOnboard.c ****     				{
 810:asctecCommIntfOnboard.c ****     					//before we send the data, the strings have to be copied from flash to memory
 811:asctecCommIntfOnboard.c ****     					struct ACI_MEM_TABLE_ENTRY_WITH_STRINGS tableEntry;
 812:asctecCommIntfOnboard.c **** 
 813:asctecCommIntfOnboard.c ****     					if (strlen(aciListPar[k].name)>MAX_NAME_LENGTH)
 814:asctecCommIntfOnboard.c ****     					{
 815:asctecCommIntfOnboard.c ****     						memcpy(&(tableEntry.name[0]),aciListPar[k].name,MAX_NAME_LENGTH);
 816:asctecCommIntfOnboard.c ****     						tableEntry.name[MAX_NAME_LENGTH-1]=0;
 817:asctecCommIntfOnboard.c ****     					} else
 818:asctecCommIntfOnboard.c ****     						strcpy(&(tableEntry.name[0]),aciListPar[k].name);
 819:asctecCommIntfOnboard.c **** 
 820:asctecCommIntfOnboard.c ****     					if (strlen(aciListPar[k].description)>MAX_DESC_LENGTH)
 821:asctecCommIntfOnboard.c ****     					{
 822:asctecCommIntfOnboard.c ****     						memcpy(&(tableEntry.description[0]),aciListPar[k].description,MAX_NAME_LENGTH);
 823:asctecCommIntfOnboard.c ****     						tableEntry.description[MAX_DESC_LENGTH-1]=0;
 824:asctecCommIntfOnboard.c ****     					} else
 825:asctecCommIntfOnboard.c ****     						strcpy(&(tableEntry.description[0]),aciListPar[k].description);
 826:asctecCommIntfOnboard.c **** 
 827:asctecCommIntfOnboard.c ****     					if (strlen(aciListPar[k].unit)>MAX_UNIT_LENGTH)
 828:asctecCommIntfOnboard.c ****     					{
 829:asctecCommIntfOnboard.c ****     						memcpy(&(tableEntry.unit[0]),aciListPar[k].unit,MAX_UNIT_LENGTH);
 830:asctecCommIntfOnboard.c ****     						tableEntry.unit[MAX_UNIT_LENGTH-1]=0;
 831:asctecCommIntfOnboard.c ****     					}else
 832:asctecCommIntfOnboard.c ****     						strcpy(&(tableEntry.unit[0]),aciListPar[k].unit);
 833:asctecCommIntfOnboard.c **** 
 834:asctecCommIntfOnboard.c ****     					tableEntry.id=aciListPar[k].id;
 835:asctecCommIntfOnboard.c ****     					tableEntry.varType=aciListPar[k].varType;
 836:asctecCommIntfOnboard.c ****     					tableEntry.ptrToVar=NULL;
 837:asctecCommIntfOnboard.c ****     					aciTxSendPacket(ACIMT_SENDPARAMTABLEENTRY,&tableEntry,sizeof (struct ACI_MEM_TABLE_ENTRY_W
 838:asctecCommIntfOnboard.c **** 
 839:asctecCommIntfOnboard.c ****     				}else
 840:asctecCommIntfOnboard.c ****     					aciTxSendPacket(ACIMT_SENDPARAMTABLEENTRYINVALID,&selectedId,2);
 841:asctecCommIntfOnboard.c **** 
 842:asctecCommIntfOnboard.c ****     		}
 843:asctecCommIntfOnboard.c **** 
 844:asctecCommIntfOnboard.c ****     	break;
 845:asctecCommIntfOnboard.c ****     	case ACIMT_GETPARAMTABLEINFO:
 846:asctecCommIntfOnboard.c ****     	{
 847:asctecCommIntfOnboard.c ****     		unsigned short idList[aciListParCount*2+2];
 848:asctecCommIntfOnboard.c ****     		unsigned short cnt=1;
 849:asctecCommIntfOnboard.c ****     		k = 0;
 850:asctecCommIntfOnboard.c **** 
 851:asctecCommIntfOnboard.c ****     		//determine no of entries in cmd table
 852:asctecCommIntfOnboard.c ****     		idList[0]=aciListParCount;
 853:asctecCommIntfOnboard.c **** 
 854:asctecCommIntfOnboard.c ****     		for(k=0;k<aciListParCount;k++)  {
 855:asctecCommIntfOnboard.c ****     			idList[cnt++]=aciListPar[k].id;
 856:asctecCommIntfOnboard.c ****     		}
 857:asctecCommIntfOnboard.c **** 
 858:asctecCommIntfOnboard.c ****     		//send no of entries
 859:asctecCommIntfOnboard.c ****     		aciTxSendPacket(ACIMT_SENDPARAMTABLEINFO,&idList[0],aciListParCount*2+2);
 860:asctecCommIntfOnboard.c **** 
 861:asctecCommIntfOnboard.c ****     	}
 862:asctecCommIntfOnboard.c ****     	break;
 863:asctecCommIntfOnboard.c ****     	case ACIMT_PARAM:
 864:asctecCommIntfOnboard.c ****     		/* FOR ONLY ONE PARAMETER ID */
 865:asctecCommIntfOnboard.c **** 		if (length == 2) {
 866:asctecCommIntfOnboard.c **** 			unsigned short id;
 867:asctecCommIntfOnboard.c **** 			unsigned char sendbuffer[30];
 868:asctecCommIntfOnboard.c **** 			unsigned char newlen = 0;
 869:asctecCommIntfOnboard.c **** 			k = 0;
 870:asctecCommIntfOnboard.c **** 			id = (aciRxDataBuffer[1] << 8) | aciRxDataBuffer[0];
 871:asctecCommIntfOnboard.c **** 			//determine no of entries in cmd table
 872:asctecCommIntfOnboard.c **** 			for(k=0;k<aciListParCount;k++) {
 873:asctecCommIntfOnboard.c **** 				if(aciListPar[k].id==id)
 874:asctecCommIntfOnboard.c **** 				{
 875:asctecCommIntfOnboard.c **** 					newlen=(aciListPar[k].varType>>2)+2;
 876:asctecCommIntfOnboard.c **** 					memcpy(&sendbuffer[0], &id, 2);
 877:asctecCommIntfOnboard.c **** 					memcpy(&sendbuffer[2], aciListPar[k].ptrToVar, newlen-2);
 878:asctecCommIntfOnboard.c **** 					break;
 879:asctecCommIntfOnboard.c **** 				}
 880:asctecCommIntfOnboard.c **** 			}
 881:asctecCommIntfOnboard.c **** 
 882:asctecCommIntfOnboard.c **** 			if (newlen==0) {
 883:asctecCommIntfOnboard.c **** 				sendbuffer[0]=0x00;
 884:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_PARAM, &sendbuffer[0], 1);
 885:asctecCommIntfOnboard.c **** 				break;
 886:asctecCommIntfOnboard.c **** 			}
 887:asctecCommIntfOnboard.c **** 			aciTxSendPacket(ACIMT_PARAM, &sendbuffer[0], newlen);
 888:asctecCommIntfOnboard.c **** 		}
 889:asctecCommIntfOnboard.c **** 		break;
 890:asctecCommIntfOnboard.c **** 
 891:asctecCommIntfOnboard.c **** 
 892:asctecCommIntfOnboard.c ****     	case ACIMT_PARAMPACKET:
 893:asctecCommIntfOnboard.c ****     		//check magic code to see that the packet fits the desired configuration
 894:asctecCommIntfOnboard.c ****     		packetSelect=messagetype-ACIMT_PARAMPACKET;
 895:asctecCommIntfOnboard.c ****     		if (packetSelect>=MAX_VAR_PACKETS)
 896:asctecCommIntfOnboard.c ****     			break;
 897:asctecCommIntfOnboard.c ****     		if ((aciParPacketMagicCode[packetSelect]==aciRxDataBuffer[0])) // && (aciParPacketContentBuff
 898:asctecCommIntfOnboard.c ****     		{
 899:asctecCommIntfOnboard.c ****     			memcpy(&aciParPacketContentBuffer[packetSelect][0],&aciRxDataBuffer[1],length-1);
 900:asctecCommIntfOnboard.c ****     			aciParamPacketReceived[packetSelect]=1;
 901:asctecCommIntfOnboard.c ****     			c[0]=ACIMT_PARAMPACKET+packetSelect;
 902:asctecCommIntfOnboard.c ****     			aciTxSendPacket(ACIMT_ACK,&c[0],1);
 903:asctecCommIntfOnboard.c ****     			aciParPacketContentBufferValid[packetSelect] = 1;
 904:asctecCommIntfOnboard.c ****     			aciParPacketContentBufferInvalidCnt[packetSelect] = 0;
 905:asctecCommIntfOnboard.c ****     		}
 906:asctecCommIntfOnboard.c ****     		else {
 907:asctecCommIntfOnboard.c ****     			aciParPacketContentBufferValid[packetSelect] = 0;
 908:asctecCommIntfOnboard.c ****     			aciParPacketContentBufferInvalidCnt[packetSelect]++;
 909:asctecCommIntfOnboard.c ****     		}
 910:asctecCommIntfOnboard.c ****     		break;
 911:asctecCommIntfOnboard.c **** 
 912:asctecCommIntfOnboard.c **** 	case ACIMT_CHANGEPACKETRATE:
 913:asctecCommIntfOnboard.c **** 		aciInhibitPacketTransmission=0;
 914:asctecCommIntfOnboard.c **** 
 915:asctecCommIntfOnboard.c **** 		if (length==sizeof(aciVarPacketTransmissionRate))
 916:asctecCommIntfOnboard.c **** 		{
 917:asctecCommIntfOnboard.c **** 			for(i=0;i<(sizeof(aciVarPacketTransmissionRate)/2);i++) {
 918:asctecCommIntfOnboard.c **** 				aciVarPacketTransmissionRate[i]=(aciRxDataBuffer[i*2+1]<<8) | (aciRxDataBuffer[i*2]);
 919:asctecCommIntfOnboard.c **** 			}
 920:asctecCommIntfOnboard.c **** 		}
 921:asctecCommIntfOnboard.c **** 	break;
 922:asctecCommIntfOnboard.c **** 	case ACIMT_GETPACKETRATE:
 923:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_PACKETRATEINFO,&aciVarPacketTransmissionRate[0],sizeof(aciVarPacketTransmis
 924:asctecCommIntfOnboard.c **** 	break;
 925:asctecCommIntfOnboard.c **** 	case ACIMT_HEARBEAT:
 926:asctecCommIntfOnboard.c **** 		aciInhibitPacketTransmission=0;
 927:asctecCommIntfOnboard.c **** 		aciHeartBeatCnt=0;
 928:asctecCommIntfOnboard.c **** 	break;
 929:asctecCommIntfOnboard.c **** 	case ACIMT_GETHEARTBEATTIMEOUT:
 930:asctecCommIntfOnboard.c **** 		aciTxSendPacket(ACIMT_SENDHEARBEATTIMEOUT,&aciHeartBeatTimeout,2);
 931:asctecCommIntfOnboard.c **** 	break;
 932:asctecCommIntfOnboard.c **** 	case ACIMT_SETHEARTBEATTIMEOUT:
 933:asctecCommIntfOnboard.c **** 		if (length==2)
 934:asctecCommIntfOnboard.c **** 			memcpy(&aciHeartBeatTimeout,&aciRxDataBuffer[0],2);
 935:asctecCommIntfOnboard.c **** 	break;
 936:asctecCommIntfOnboard.c **** 	case ACIMT_MAGICCODES:
 937:asctecCommIntfOnboard.c **** 		{
 938:asctecCommIntfOnboard.c **** 			unsigned char temp_buffer[12];
 939:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[0], &aciMagicCodeVar,2);
 940:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[2], &aciMagicCodeCmd,2);
 941:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[4], &aciMagicCodePar,2);
 942:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[6], &aciListVarCount,2);
 943:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[8], &aciListCmdCount,2);
 944:asctecCommIntfOnboard.c **** 			memcpy(&temp_buffer[10], &aciListParCount,2);
 945:asctecCommIntfOnboard.c **** 			aciTxSendPacket(ACIMT_MAGICCODES,&temp_buffer[0],12);
 946:asctecCommIntfOnboard.c **** 		}
 947:asctecCommIntfOnboard.c **** 		break;
 948:asctecCommIntfOnboard.c **** 	case ACIMT_RESETREMOTE:
 949:asctecCommIntfOnboard.c **** 		//reset var packet content
 950:asctecCommIntfOnboard.c **** 		for (z=0;z<MAX_VAR_PACKETS;z++)
 951:asctecCommIntfOnboard.c **** 			{
 952:asctecCommIntfOnboard.c **** 				for (i=0;i<MEMPACKET_MAX_VARS;i++)
 953:asctecCommIntfOnboard.c **** 				{
 954:asctecCommIntfOnboard.c **** 					aciVarPacketSelect[z][i]=ID_NONE;
 955:asctecCommIntfOnboard.c **** 					aciVarPacketPtrList[z][i]=NULL;
 956:asctecCommIntfOnboard.c **** 					aciVarPacketTypeList[z][i]=0;
 957:asctecCommIntfOnboard.c **** 				}
 958:asctecCommIntfOnboard.c **** 				aciVarPacketMagicCode[z]=0;
 959:asctecCommIntfOnboard.c **** 				aciVarPacketSelectLength[z]=0;
 960:asctecCommIntfOnboard.c **** 			}
 961:asctecCommIntfOnboard.c **** 		aciInhibitPacketTransmission=0;
 962:asctecCommIntfOnboard.c **** 		aciHeartBeatCnt=0;
 963:asctecCommIntfOnboard.c **** 
 964:asctecCommIntfOnboard.c **** 	break;
 965:asctecCommIntfOnboard.c **** 	case ACIMT_SAVEPARAM:
 966:asctecCommIntfOnboard.c **** 		if (aciSaveParaCallback) {
 967:asctecCommIntfOnboard.c **** 			aciSaveParaCallback();
 968:asctecCommIntfOnboard.c **** 			aciParamSaveIt = 1;
 969:asctecCommIntfOnboard.c **** 		}
 970:asctecCommIntfOnboard.c **** 		break;
 971:asctecCommIntfOnboard.c **** 
 972:asctecCommIntfOnboard.c **** 	case ACIMT_LOADPARAM:
 973:asctecCommIntfOnboard.c **** 		if (aciReadParafromFlashCallback) {
 974:asctecCommIntfOnboard.c **** 			output = aciReadParafromFlashCallback();
 975:asctecCommIntfOnboard.c **** 			aciTxSendPacket(ACIMT_LOADPARAM, &output, 2);
 976:asctecCommIntfOnboard.c **** 		}
 977:asctecCommIntfOnboard.c **** 		break;
 978:asctecCommIntfOnboard.c **** 
 979:asctecCommIntfOnboard.c **** 	case ACIMT_SINGLESEND: // ACK
 980:asctecCommIntfOnboard.c **** 		//if(length>0) {
 981:asctecCommIntfOnboard.c **** 			i_single = (aciRxDataBuffer[1]<<8)|aciRxDataBuffer[0];
 982:asctecCommIntfOnboard.c **** 			i_single=i_single-1;
 983:asctecCommIntfOnboard.c **** 			if(i<MAX_VARIABLE_LIST) aciSendSingleStatus[i_single]=0;
 984:asctecCommIntfOnboard.c **** 		//}
 985:asctecCommIntfOnboard.c **** 		break;
 986:asctecCommIntfOnboard.c **** 
 987:asctecCommIntfOnboard.c **** 	case ACIMT_SINGLEREQ:
 988:asctecCommIntfOnboard.c **** 		if(length>1) {
 989:asctecCommIntfOnboard.c **** 			char idFound=0;
 990:asctecCommIntfOnboard.c **** 			unsigned char temp_buffer[512];
 991:asctecCommIntfOnboard.c **** 
 992:asctecCommIntfOnboard.c **** 			i_single = (aciRxDataBuffer[1]<<8)|aciRxDataBuffer[0];
 993:asctecCommIntfOnboard.c **** 			for(k=0;k<aciListVarCount;k++) {
 994:asctecCommIntfOnboard.c **** 				if (i_single==aciListVar[k].id)
 995:asctecCommIntfOnboard.c **** 				{
 996:asctecCommIntfOnboard.c **** 					idFound=1;
 997:asctecCommIntfOnboard.c **** 					break;
 998:asctecCommIntfOnboard.c **** 				}
 999:asctecCommIntfOnboard.c **** 			}
1000:asctecCommIntfOnboard.c **** //
1001:asctecCommIntfOnboard.c **** 			if (idFound)
1002:asctecCommIntfOnboard.c **** 			{
1003:asctecCommIntfOnboard.c **** 				memcpy(&temp_buffer[0],&(aciListVar[k].id),2);
1004:asctecCommIntfOnboard.c **** 				memcpy(&temp_buffer[2],&(aciListVar[k].varType),1);
1005:asctecCommIntfOnboard.c **** 				memcpy(&temp_buffer[3],aciListVar[k].ptrToVar, (aciListVar[k].varType)>>2);
1006:asctecCommIntfOnboard.c **** 				aciTxSendPacket(ACIMT_SINGLEREQ,&temp_buffer[0],3+((aciListVar[k].varType)>>2));
1007:asctecCommIntfOnboard.c **** //
1008:asctecCommIntfOnboard.c **** 			}
1009:asctecCommIntfOnboard.c **** //			else
1010:asctecCommIntfOnboard.c **** //				aciTxSendPacket(ACIMT_SENDVARTABLEENTRYINVALID,&selectedId,2);
1011:asctecCommIntfOnboard.c **** 		}
1012:asctecCommIntfOnboard.c **** 		break;
1013:asctecCommIntfOnboard.c **** 	}
1014:asctecCommIntfOnboard.c **** }
1015:asctecCommIntfOnboard.c **** 
1016:asctecCommIntfOnboard.c **** void aciReceiveHandler(unsigned char rxByte)
1017:asctecCommIntfOnboard.c **** {
1018:asctecCommIntfOnboard.c **** 	static unsigned char aciRxState=ARS_IDLE;
1019:asctecCommIntfOnboard.c **** 	static unsigned char aciRxMessageType;
1020:asctecCommIntfOnboard.c **** 	static unsigned short aciRxLength;
1021:asctecCommIntfOnboard.c **** 	static unsigned short aciRxCrc;
1022:asctecCommIntfOnboard.c **** 	static unsigned short aciRxReceivedCrc;
1023:asctecCommIntfOnboard.c **** 
1024:asctecCommIntfOnboard.c **** 
1025:asctecCommIntfOnboard.c **** 	switch (aciRxState)
1026:asctecCommIntfOnboard.c **** 	{
1027:asctecCommIntfOnboard.c **** 	case ARS_IDLE:
1028:asctecCommIntfOnboard.c **** 		if (rxByte=='!')
1029:asctecCommIntfOnboard.c **** 			aciRxState=ARS_STARTBYTE1;
1030:asctecCommIntfOnboard.c **** 		break;
1031:asctecCommIntfOnboard.c **** 	case ARS_STARTBYTE1:
1032:asctecCommIntfOnboard.c **** 		if (rxByte=='#')
1033:asctecCommIntfOnboard.c **** 			aciRxState=ARS_STARTBYTE2;
1034:asctecCommIntfOnboard.c **** 		else
1035:asctecCommIntfOnboard.c **** 			aciRxState=ARS_IDLE;
1036:asctecCommIntfOnboard.c **** 
1037:asctecCommIntfOnboard.c **** 		break;
1038:asctecCommIntfOnboard.c **** 	case ARS_STARTBYTE2:
1039:asctecCommIntfOnboard.c **** 		if (rxByte=='!')
1040:asctecCommIntfOnboard.c **** 			aciRxState=ARS_MESSAGETYPE;
1041:asctecCommIntfOnboard.c **** 		else
1042:asctecCommIntfOnboard.c **** 			aciRxState=ARS_IDLE;
1043:asctecCommIntfOnboard.c **** 		break;
1044:asctecCommIntfOnboard.c **** 	case ARS_MESSAGETYPE:
1045:asctecCommIntfOnboard.c **** 		aciRxMessageType=rxByte;
1046:asctecCommIntfOnboard.c **** 		aciRxCrc=0xff;
1047:asctecCommIntfOnboard.c **** 		aciRxCrc=aciCrcUpdate(aciRxCrc,rxByte);
1048:asctecCommIntfOnboard.c **** 		aciRxState=ARS_LENGTH1;
1049:asctecCommIntfOnboard.c **** 
1050:asctecCommIntfOnboard.c **** 		break;
1051:asctecCommIntfOnboard.c **** 	case ARS_LENGTH1:
1052:asctecCommIntfOnboard.c **** 		aciRxLength=rxByte;
1053:asctecCommIntfOnboard.c **** 		aciRxCrc=aciCrcUpdate(aciRxCrc,rxByte);
1054:asctecCommIntfOnboard.c **** 		aciRxState=ARS_LENGTH2;
1055:asctecCommIntfOnboard.c **** 		break;
1056:asctecCommIntfOnboard.c **** 	case ARS_LENGTH2:
1057:asctecCommIntfOnboard.c **** 		aciRxLength|=rxByte<<8;
1058:asctecCommIntfOnboard.c **** 		if (aciRxLength>ACI_RX_BUFFER_SIZE)
1059:asctecCommIntfOnboard.c **** 			aciRxState=ARS_IDLE;
1060:asctecCommIntfOnboard.c **** 		else
1061:asctecCommIntfOnboard.c **** 		{
1062:asctecCommIntfOnboard.c **** 			aciRxCrc=aciCrcUpdate(aciRxCrc,rxByte);
1063:asctecCommIntfOnboard.c **** 			aciRxDataCnt=0;
1064:asctecCommIntfOnboard.c **** 			if (aciRxLength)
1065:asctecCommIntfOnboard.c **** 				aciRxState=ARS_DATA;
1066:asctecCommIntfOnboard.c **** 			else
1067:asctecCommIntfOnboard.c **** 				aciRxState=ARS_CRC1;
1068:asctecCommIntfOnboard.c **** 		}
1069:asctecCommIntfOnboard.c **** 		break;
1070:asctecCommIntfOnboard.c **** 	case ARS_DATA:
1071:asctecCommIntfOnboard.c **** 		aciRxCrc=aciCrcUpdate(aciRxCrc,rxByte);
1072:asctecCommIntfOnboard.c **** 		aciRxDataBuffer[aciRxDataCnt++]=rxByte;
1073:asctecCommIntfOnboard.c **** 		if (aciRxDataCnt==aciRxLength)
1074:asctecCommIntfOnboard.c **** 			aciRxState=ARS_CRC1;
1075:asctecCommIntfOnboard.c **** 		break;
1076:asctecCommIntfOnboard.c **** 	case ARS_CRC1:
1077:asctecCommIntfOnboard.c **** 		aciRxReceivedCrc=rxByte;
1078:asctecCommIntfOnboard.c **** 		aciRxState=ARS_CRC2;
1079:asctecCommIntfOnboard.c **** 		break;
1080:asctecCommIntfOnboard.c **** 	case ARS_CRC2:
1081:asctecCommIntfOnboard.c **** 		aciRxReceivedCrc|=rxByte<<8;
1082:asctecCommIntfOnboard.c **** 		if (aciRxReceivedCrc==aciRxCrc)
1083:asctecCommIntfOnboard.c **** 		{
1084:asctecCommIntfOnboard.c **** 			aciRxHandleMessage(aciRxMessageType,aciRxLength);
1085:asctecCommIntfOnboard.c **** 		}
1086:asctecCommIntfOnboard.c **** 		aciRxState=ARS_IDLE;
1087:asctecCommIntfOnboard.c **** 
1088:asctecCommIntfOnboard.c **** 		break;
1089:asctecCommIntfOnboard.c **** 
1090:asctecCommIntfOnboard.c **** 	}
1091:asctecCommIntfOnboard.c **** 
1092:asctecCommIntfOnboard.c **** }
1093:asctecCommIntfOnboard.c **** /*
1094:asctecCommIntfOnboard.c ****  *
1095:asctecCommIntfOnboard.c ****  * ACI TX Ringbuffer
1096:asctecCommIntfOnboard.c ****  *
1097:asctecCommIntfOnboard.c ****  */
1098:asctecCommIntfOnboard.c **** 
1099:asctecCommIntfOnboard.c **** void aciSetStartTxCallback(void (*aciStartTxCallback_func)(unsigned char))
1100:asctecCommIntfOnboard.c **** {
 166              	lr needed for prologue
 167              		.loc 1 1101 0
 168              		str	r0, [r3, #0]
 169              		.loc 1 1102 0
 170              		bx	lr
 171              	.L25:
1101:asctecCommIntfOnboard.c **** 	aciStartTxCallback=aciStartTxCallback_func;
 172              	n	2
 173 0148 04309FE5 	.L24:
 174              		.word	aciStartTxCallback
 175              	.LFE15:
 177 014c 000083E5 		.align	2
1102:asctecCommIntfOnboard.c **** }
 178              	al	aciTxRingBufferReset
 180              	aciTxRingBufferReset:
 181              	.LFB17:
 182              		.loc 1 1133 0
 183 0154 00000000 		@ Function supports interworking.
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 187              		.loc 1 1134 0
 188              		ldr	r3, .L28
 189              		.loc 1 1135 0
 190              		ldr	r2, .L28+4
1103:asctecCommIntfOnboard.c **** 
1104:asctecCommIntfOnboard.c **** 
1105:asctecCommIntfOnboard.c **** void aciTxSendPacket(unsigned char aciMessageType, void * data, unsigned short cnt)
1106:asctecCommIntfOnboard.c **** {
1107:asctecCommIntfOnboard.c **** 	unsigned char startstring[3] = { '!', '#', '!' };
1108:asctecCommIntfOnboard.c **** 	unsigned short crc = 0xFF;
1109:asctecCommIntfOnboard.c **** 
1110:asctecCommIntfOnboard.c **** 	if (cnt + 10 >= aciTxRingBufferGetFreeSpace())
1111:asctecCommIntfOnboard.c **** 		return;
1112:asctecCommIntfOnboard.c **** 
1113:asctecCommIntfOnboard.c **** 	//add header to ringbuffer
1114:asctecCommIntfOnboard.c **** 	aciTxRingBufferAddData(&startstring, 3);
1115:asctecCommIntfOnboard.c **** 
1116:asctecCommIntfOnboard.c **** 	//add message type to ringbuffer
1117:asctecCommIntfOnboard.c **** 	aciTxRingBufferAddData(&aciMessageType, 1);
1118:asctecCommIntfOnboard.c **** 	crc=aciUpdateCrc16(crc,&aciMessageType,1);
1119:asctecCommIntfOnboard.c **** 
1120:asctecCommIntfOnboard.c **** 	//add data size to ringbuffer
1121:asctecCommIntfOnboard.c **** 	aciTxRingBufferAddData(&cnt, 2);
1122:asctecCommIntfOnboard.c **** 	crc=aciUpdateCrc16(crc,&cnt,2);
1123:asctecCommIntfOnboard.c **** 
1124:asctecCommIntfOnboard.c **** 	aciTxRingBufferAddData(data,cnt);
1125:asctecCommIntfOnboard.c **** 	crc=aciUpdateCrc16(crc,data,cnt);
1126:asctecCommIntfOnboard.c **** 
1127:asctecCommIntfOnboard.c **** 	//add CRC to ringbuffer
1128:asctecCommIntfOnboard.c **** 	aciTxRingBufferAddData(&crc, 2);
1129:asctecCommIntfOnboard.c **** 
1130:asctecCommIntfOnboard.c **** }
1131:asctecCommIntfOnboard.c **** 
1132:asctecCommIntfOnboard.c **** void aciTxRingBufferReset(void)
1133:asctecCommIntfOnboard.c **** {
 191              	0
 192              		mov	r1, #0
 193              		.loc 1 1133 0
 194              		@ lr needed for prologue
 195              		.loc 1 1134 0
1134:asctecCommIntfOnboard.c **** 	aciTxRingBufferWritePtr=0;
 196              		r1, [r3, #0]	@ movhi
 197 0158 10309FE5 		.loc 1 1135 0
1135:asctecCommIntfOnboard.c **** 	aciTxRingBufferReadPtr=0;
 198              	trb	r1, [r2, #0]
 199 015c 10209FE5 		.loc 1 1136 0
 200              		bx	lr
 201 0160 0010A0E3 	.L29:
 202              		.align	2
 203              	.L28:
 204              		.word	aciTxRingBufferWritePtr
 205 0164 B010C3E1 		.word	aciTxRingBufferReadPtr
 206              	.LFE17:
1136:asctecCommIntfOnboard.c **** }
 208              		.global	aciTxRingBufferGetFreeSpace
 210              	aciTxRingBufferGetFreeSpace:
 211              	.LFB18:
 212              		.loc 1 1139 0
 213 0170 00000000 		@ Function supports interworking.
 214 0174 00000000 		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              		.loc 1 1141 0
 218              		ldr	r3, .L35
 219              		ldr	r2, .L35+4
 220              		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 221              		ldrh	r1, [r2, #0]
1137:asctecCommIntfOnboard.c **** 
1138:asctecCommIntfOnboard.c **** unsigned short aciTxRingBufferGetFreeSpace(void)
1139:asctecCommIntfOnboard.c **** {
 222              	
 223              		rsb	r3, r1, r0
 224              		.loc 1 1144 0
 225              		rsb	r2, r1, r0
 226              		.loc 1 1142 0
1140:asctecCommIntfOnboard.c **** 
1141:asctecCommIntfOnboard.c **** 	if (aciTxRingBufferWritePtr>=aciTxRingBufferReadPtr)
 227              		r3, r3, #159
 228 0178 30309FE5 		.loc 1 1144 0
 229 017c 30209FE5 		sub	r2, r2, #1
 230 0180 0000D3E5 		.loc 1 1141 0
 231 0184 B010D2E1 		cmp	r0, r1
1142:asctecCommIntfOnboard.c **** 		return (ACI_TX_RINGBUFFER_SIZE-aciTxRingBufferWritePtr+aciTxRingBufferReadPtr-1);
 232              	 1 1142 0
 233 0188 003061E0 		mov	r3, r3, asl #16
1143:asctecCommIntfOnboard.c **** 	else
1144:asctecCommIntfOnboard.c **** 		return (aciTxRingBufferReadPtr-aciTxRingBufferWritePtr-1);
 234              	loc 1 1144 0
 235 018c 002061E0 		mov	r2, r2, asl #16
 236              		.loc 1 1142 0
 237 0190 9F3083E2 		mov	r0, r3, lsr #16
 238              		.loc 1 1144 0
 239 0194 012042E2 		movhi	r0, r2, lsr #16
 240              		.loc 1 1139 0
 241 0198 010050E1 		@ lr needed for prologue
 242              		.loc 1 1147 0
 243 019c 0338A0E1 		bx	lr
 244              	.L36:
 245 01a0 0228A0E1 		.align	2
 246              	.L35:
 247 01a4 2308A0E1 		.word	aciTxRingBufferReadPtr
 248              		.word	aciTxRingBufferWritePtr
 249 01a8 2208A081 	.LFE18:
 251              		.align	2
1145:asctecCommIntfOnboard.c **** 
1146:asctecCommIntfOnboard.c **** 
1147:asctecCommIntfOnboard.c **** }
 252              	BufferByteAvailable
 254              	aciTxRingBufferByteAvailable:
 255              	.LFB20:
 256              		.loc 1 1189 0
 257 01b0 00000000 		@ Function supports interworking.
 258 01b4 00000000 		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		str	lr, [sp, #-4]!
 261              	.LCFI1:
 262              		.loc 1 1190 0
 263              		bl	aciTxRingBufferGetFreeSpace
 264              		.loc 1 1194 0
 265              		subs	r0, r0, #159
1148:asctecCommIntfOnboard.c **** 
1149:asctecCommIntfOnboard.c **** void aciTxRingBufferAddData(void * ptr, unsigned short size)
1150:asctecCommIntfOnboard.c **** {
1151:asctecCommIntfOnboard.c ****         unsigned char * ptrToChr=(unsigned char *)ptr;
1152:asctecCommIntfOnboard.c ****         unsigned char triggerSend=0;
1153:asctecCommIntfOnboard.c **** 
1154:asctecCommIntfOnboard.c ****      if (!size)
1155:asctecCommIntfOnboard.c ****     	 return;
1156:asctecCommIntfOnboard.c **** 	if (aciTxRingBufferGetFreeSpace()<size)
1157:asctecCommIntfOnboard.c **** 		return;
1158:asctecCommIntfOnboard.c **** 
1159:asctecCommIntfOnboard.c **** 	if (aciTxRingBufferGetFreeSpace()==(ACI_TX_RINGBUFFER_SIZE-1))
1160:asctecCommIntfOnboard.c **** 		triggerSend=1;
1161:asctecCommIntfOnboard.c **** 
1162:asctecCommIntfOnboard.c **** 	//check if data fits in without overflow of the write pointer
1163:asctecCommIntfOnboard.c **** 	if (ACI_TX_RINGBUFFER_SIZE-aciTxRingBufferWritePtr>size)
1164:asctecCommIntfOnboard.c **** 	{
1165:asctecCommIntfOnboard.c **** 		//it does. Copy everything at ones
1166:asctecCommIntfOnboard.c **** 		memcpy(&aciTxRingBuffer[aciTxRingBufferWritePtr],ptrToChr,size);
1167:asctecCommIntfOnboard.c **** 		aciTxRingBufferWritePtr+=size;
1168:asctecCommIntfOnboard.c **** 	}  else  {
1169:asctecCommIntfOnboard.c **** 		//it does not. We need two steps
1170:asctecCommIntfOnboard.c **** 		//copy to the end of the buffer
1171:asctecCommIntfOnboard.c **** 		memcpy(&aciTxRingBuffer[aciTxRingBufferWritePtr],ptrToChr,ACI_TX_RINGBUFFER_SIZE-aciTxRingBufferW
1172:asctecCommIntfOnboard.c ****                 memcpy(&aciTxRingBuffer[0],ptrToChr+(ACI_TX_RINGBUFFER_SIZE-aciTxRingBufferWritePtr
1173:asctecCommIntfOnboard.c **** 
1174:asctecCommIntfOnboard.c **** 		//increase and overflow correctly
1175:asctecCommIntfOnboard.c **** 		aciTxRingBufferWritePtr+=size;
1176:asctecCommIntfOnboard.c **** 		aciTxRingBufferWritePtr%=ACI_TX_RINGBUFFER_SIZE;
1177:asctecCommIntfOnboard.c **** 
1178:asctecCommIntfOnboard.c **** 	}
1179:asctecCommIntfOnboard.c **** 
1180:asctecCommIntfOnboard.c **** 	if ((triggerSend) && (aciStartTxCallback))
1181:asctecCommIntfOnboard.c **** 	{
1182:asctecCommIntfOnboard.c **** 		//get one byte from ringbuffer
1183:asctecCommIntfOnboard.c **** 		unsigned char byte=aciTxRingBufferGetNextByte();
1184:asctecCommIntfOnboard.c **** 		aciStartTxCallback(byte);
1185:asctecCommIntfOnboard.c **** 	}
1186:asctecCommIntfOnboard.c **** }
1187:asctecCommIntfOnboard.c **** 
1188:asctecCommIntfOnboard.c **** unsigned char aciTxRingBufferByteAvailable(void)
1189:asctecCommIntfOnboard.c **** {
 266              		ldr	lr, [sp], #4
 267              		bx	lr
 268              	.LFE20:
 270 01b8 04E02DE5 		.align	2
 271              		.global	aciTxRingBufferGetNextByte
1190:asctecCommIntfOnboard.c **** 	if (aciTxRingBufferGetFreeSpace()==ACI_TX_RINGBUFFER_SIZE-1)
 272              		aciTxRingBufferGetNextByte, %function
 273 01bc FEFFFFEB 	aciTxRingBufferGetNextByte:
1191:asctecCommIntfOnboard.c **** 		return 0;
1192:asctecCommIntfOnboard.c **** 	else
1193:asctecCommIntfOnboard.c **** 		return 1;
1194:asctecCommIntfOnboard.c **** }
 274              	FB21:
 275 01c0 9F0050E2 		.loc 1 1197 0
 276 01c4 0100A013 		@ Function supports interworking.
 277 01c8 04E09DE4 		@ args = 0, pretend = 0, frame = 0
 278 01cc 1EFF2FE1 		@ frame_needed = 0, uses_anonymous_args = 0
 279              		str	lr, [sp, #-4]!
 280              	.LCFI2:
 281              		.loc 1 1201 0
 282              		bl	aciTxRingBufferByteAvailable
 283              		cmp	r0, #0
 284              		.loc 1 1204 0
 285              		ldr	ip, .L44
1195:asctecCommIntfOnboard.c **** 
1196:asctecCommIntfOnboard.c **** unsigned char aciTxRingBufferGetNextByte(void)
1197:asctecCommIntfOnboard.c **** {
 286              	 0
 287              		beq	.L42
 288              		.loc 1 1204 0
 289              		ldrb	r0, [ip, #0]	@ zero_extendqisi2
 290 01d0 04E02DE5 		.loc 1 1206 0
 291              		ldr	r2, .L44+4
1198:asctecCommIntfOnboard.c **** 
1199:asctecCommIntfOnboard.c **** 	unsigned char byte;
1200:asctecCommIntfOnboard.c **** 
1201:asctecCommIntfOnboard.c **** 	if (!aciTxRingBufferByteAvailable())
 292              	1, r0, #1
 293 01d4 FEFFFFEB 		and	r1, r1, #255
 294 01d8 000050E3 		umull	lr, r3, r2, r1
1202:asctecCommIntfOnboard.c **** 		return 0;
1203:asctecCommIntfOnboard.c **** 
1204:asctecCommIntfOnboard.c **** 	byte=aciTxRingBuffer[aciTxRingBufferReadPtr];
 295              	v	r3, r3, lsr #7
 296 01dc 38C09FE5 		add	r3, r3, r3, asl #2
 297              		sub	r1, r1, r3, asl #5
 298 01e0 0B00000A 		.loc 1 1204 0
 299              		ldr	r3, .L44+8
 300 01e4 0000DCE5 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
1205:asctecCommIntfOnboard.c **** 	aciTxRingBufferReadPtr++;
1206:asctecCommIntfOnboard.c **** 	aciTxRingBufferReadPtr%=ACI_TX_RINGBUFFER_SIZE;
 301              	:
 302 01e8 30209FE5 		.loc 1 1206 0
 303 01ec 011080E2 		strb	r1, [ip, #0]
 304 01f0 FF1001E2 		.loc 1 1208 0
 305 01f4 92E183E0 		mov	r0, r2
 306 01f8 A333A0E1 	.L42:
 307 01fc 033183E0 		.loc 1 1209 0
 308 0200 831241E0 		ldr	lr, [sp], #4
 309              		bx	lr
 310 0204 18309FE5 	.L45:
 311 0208 0020D3E7 		.align	2
 312              	.L44:
 313              		.word	aciTxRingBufferReadPtr
 314 020c 0010CCE5 		.word	-858993459
1207:asctecCommIntfOnboard.c **** 
1208:asctecCommIntfOnboard.c **** 	return byte;
 315              	ngBuffer
 316 0210 0200A0E1 	.LFE21:
1209:asctecCommIntfOnboard.c **** }
 318              	lign	2
 319 0214 04E09DE4 		.global	aciCrcUpdate
 321              	aciCrcUpdate:
 322              	.LFB22:
 323              		.loc 1 1219 0
 324 021c 00000000 		@ Function supports interworking.
 325 0220 CDCCCCCC 		@ args = 0, pretend = 0, frame = 0
 326 0224 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL12:
 329              		mov	r0, r0, asl #16
 330              	.LVL13:
 331              		.loc 1 1220 0
 332              		eor	r1, r1, r0, lsr #16
 333              	.LVL14:
1210:asctecCommIntfOnboard.c **** 
1211:asctecCommIntfOnboard.c **** /*
1212:asctecCommIntfOnboard.c ****  *
1213:asctecCommIntfOnboard.c ****  * ACI Helper functions
1214:asctecCommIntfOnboard.c ****  *
1215:asctecCommIntfOnboard.c ****  *
1216:asctecCommIntfOnboard.c ****  */
1217:asctecCommIntfOnboard.c **** 
1218:asctecCommIntfOnboard.c **** unsigned short aciCrcUpdate (unsigned short crc, unsigned char data)
1219:asctecCommIntfOnboard.c ****      {
 334              	5
 335              	.LVL15:
 336              		.loc 1 1221 0
 337              		eor	r1, r1, r1, asl #4
 338              	.LVL16:
 339              		and	r1, r1, #255
 340 0228 0008A0E1 	.LVL17:
 341              		.loc 1 1223 0
1220:asctecCommIntfOnboard.c ****          data ^= (crc & 0xff);
 342              	 r1, asl #3
 343 022c 201821E0 		mov	r0, r0, lsr #24
 344              		eor	r3, r3, r1, lsr #4
 345 0230 FF1001E2 		orr	r0, r0, r1, asl #8
 346              		.loc 1 1225 0
1221:asctecCommIntfOnboard.c ****          data ^= data << 4;
 347              	r0, r0, r3
 348 0234 011221E0 		.loc 1 1219 0
 349              		@ lr needed for prologue
 350 0238 FF1001E2 		.loc 1 1225 0
 351              		bx	lr
1222:asctecCommIntfOnboard.c **** 
1223:asctecCommIntfOnboard.c ****          return ((((unsigned short )data << 8) | ((crc>>8)&0xff)) ^ (unsigned char )(data >> 4)
 352              	2:
 354 0240 200CA0E1 		.align	2
 355 0244 213223E0 		.global	aciUpdateCrc16
1224:asctecCommIntfOnboard.c ****                  ^ ((unsigned short )data << 3));
1225:asctecCommIntfOnboard.c ****      }
 357              	dateCrc16:
 358 024c 030020E0 	.LFB23:
 359              		.loc 1 1228 0
 360              		@ Function supports interworking.
 361              		@ args = 0, pretend = 0, frame = 0
 362 0250 1EFF2FE1 		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL18:
 364              		mov	r2, r2, asl #16
 365              	.LVL19:
 366              		stmfd	sp!, {r4, r5, r6, lr}
 367              	.LCFI3:
 368              		.loc 1 1228 0
 369              		mov	r6, r2, lsr #16
1226:asctecCommIntfOnboard.c **** 
1227:asctecCommIntfOnboard.c **** unsigned short aciUpdateCrc16(unsigned short crc, void * data, unsigned short cnt)
1228:asctecCommIntfOnboard.c **** {
 370              	r0, r0, asl #16
 371              	.LVL21:
 372              		.loc 1 1233 0
 373              		cmp	r6, #0
 374              		.loc 1 1228 0
 375 0254 0228A0E1 		mov	r5, r1
 376              		mov	r0, r0, lsr #16
 377 0258 70402DE9 	.LVL22:
 378              		.loc 1 1233 0
 379              		ble	.L51
 380 025c 2268A0E1 	.LVL23:
 381              		mov	r4, #0
 382 0260 0008A0E1 	.LVL24:
 383              	.L52:
1229:asctecCommIntfOnboard.c **** 	int i=0;
1230:asctecCommIntfOnboard.c **** 	unsigned short crcNew=crc;
1231:asctecCommIntfOnboard.c **** 	unsigned char * chrData=(unsigned char *)data;
1232:asctecCommIntfOnboard.c **** 
1233:asctecCommIntfOnboard.c **** 	for (i=0;i<cnt;i++)
 384              	
 385 0264 000056E3 		ldrb	r1, [r4, r5]	@ zero_extendqisi2
 386              		.loc 1 1233 0
 387 0268 0150A0E1 		add	r4, r4, #1
 388 026c 2008A0E1 		.loc 1 1234 0
 389              		bl	aciCrcUpdate
 390              	.LVL25:
 391 0270 050000DA 		.loc 1 1233 0
 392              		cmp	r6, r4
 393 0274 0040A0E3 		bne	.L52
 394              	.LVL26:
 395              	.L51:
1234:asctecCommIntfOnboard.c **** 		crcNew=aciCrcUpdate(crcNew,chrData[i]);
 396              	oc 1 1237 0
 397 0278 0510D4E7 		ldmfd	sp!, {r4, r5, r6, lr}
 398              		bx	lr
 399 027c 014084E2 	.LFE23:
 401 0280 FEFFFFEB 		.align	2
 402              		.global	aciPublishParameterInt
 404 0284 040056E1 	aciPublishParameterInt:
 405 0288 FAFFFF1A 	.LFB7:
 406              		.loc 1 268 0
 407              		@ Function supports interworking.
 408              		@ args = 8, pretend = 0, frame = 72
1235:asctecCommIntfOnboard.c **** 
1236:asctecCommIntfOnboard.c **** 	return crcNew;
1237:asctecCommIntfOnboard.c **** }
 409              	ed = 0, uses_anonymous_args = 0
 410 028c 7040BDE8 	.LVL28:
 411 0290 1EFF2FE1 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 412              	.LCFI4:
 413              		.loc 1 269 0
 414              		ldr	r5, .L59
 415              		ldr	lr, [r5, #0]
 416              		.loc 1 271 0
 417              		ldr	r5, .L59+4
 418              		add	ip, lr, lr, asl #3
 419              		.loc 1 268 0
 420              		sub	sp, sp, #72
 421              	.LCFI5:
 422              		.loc 1 271 0
 423              		add	ip, lr, ip, asl #1
 424 0294 F04F2DE9 		add	r4, ip, r5
 425              		.loc 1 268 0
 426              		ldr	r7, [sp, #108]
 427 0298 94519FE5 		.loc 1 271 0
 428 029c 00E095E5 		str	ip, [sp, #60]
 429              		.loc 1 269 0
 430 02a0 90519FE5 		cmp	lr, #50
 431 02a4 8EC18EE0 		.loc 1 273 0
 432              		mov	ip, r3, lsr #24
 433 02a8 48D04DE2 		mov	lr, r3, lsr #8
 434              		.loc 1 268 0
 435              		mov	r5, r3
 436 02ac 8CC08EE0 		.loc 1 273 0
 437 02b0 05408CE0 		mov	r3, r3, lsr #16
 438              	.LVL29:
 439 02b4 6C709DE5 		.loc 1 268 0
 440              		ldr	r8, [sp, #112]
 441 02b8 3CC08DE5 		.loc 1 273 0
 442              		str	ip, [sp, #48]
 443 02bc 32005EE3 		str	lr, [sp, #56]
 444              		.loc 1 276 0
 445 02c0 23CCA0E1 		mov	ip, r0, lsr #24
 446 02c4 23E4A0E1 		mov	lr, r0, lsr #8
 447              		.loc 1 273 0
 448 02c8 0350A0E1 		str	r3, [sp, #52]
 449              		.loc 1 276 0
 450 02cc 2338A0E1 		mov	r3, r0, lsr #16
 451              		str	ip, [sp, #12]
 452              		str	lr, [sp, #20]
 453 02d0 70809DE5 		.loc 1 274 0
 454              		mov	ip, r7, lsr #24
 455 02d4 30C08DE5 		mov	lr, r7, lsr #8
 456 02d8 38E08DE5 		.loc 1 276 0
 457              		str	r3, [sp, #16]
 458 02dc 20CCA0E1 		.loc 1 274 0
 459 02e0 20E4A0E1 		mov	r3, r7, lsr #16
 460              		str	ip, [sp, #36]
 461 02e4 34308DE5 		str	lr, [sp, #44]
 462              		str	r3, [sp, #40]
 463 02e8 2038A0E1 		.loc 1 275 0
 464 02ec 0CC08DE5 		mov	ip, r8, lsr #24
 465 02f0 14E08DE5 		mov	lr, r8, lsr #8
 466              		mov	r3, r8, lsr #16
 467 02f4 27CCA0E1 		.loc 1 268 0
 468 02f8 27E4A0E1 		strh	r2, [sp, #64]	@ movhi
 469              		strb	r1, [sp, #68]
 470 02fc 10308DE5 		.loc 1 276 0
 471              		add	fp, r4, #12
 472 0300 2738A0E1 		.loc 1 274 0
 473 0304 24C08DE5 		add	sl, r4, #4
 474 0308 2CE08DE5 		.loc 1 275 0
 475 030c 28308DE5 		add	r9, r4, #8
 476              		.loc 1 278 0
 477 0310 28CCA0E1 		mov	r2, #2
 478 0314 28E4A0E1 	.LVL30:
 479 0318 2838A0E1 		add	r1, sp, #64
 480              	.LVL31:
 481 031c B024CDE1 		.loc 1 268 0
 482 0320 4410CDE5 		mov	r6, r0
 483              		.loc 1 275 0
 484 0324 0CB084E2 		str	ip, [sp, #24]
 485              		str	lr, [sp, #32]
 486 0328 04A084E2 		str	r3, [sp, #28]
 487              		.loc 1 269 0
 488 032c 089084E2 		beq	.L58
 489              	.LVL32:
 490 0330 0220A0E3 		.loc 1 271 0
 491              		ldrb	ip, [sp, #64]	@ zero_extendqisi2
 492 0334 40108DE2 	.LVL33:
 493              		ldrb	lr, [sp, #65]	@ zero_extendqisi2
 494              		str	ip, [sp, #8]
 495 0338 0060A0E1 		.loc 1 272 0
 496              		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 497 033c 18C08DE5 		.loc 1 278 0
 498 0340 20E08DE5 		ldr	ip, .L59+8
 499 0344 1C308DE5 		.loc 1 271 0
 500              		stmia	sp, {r3, lr}	@ phole stm
 501 0348 3600000A 		.loc 1 278 0
 502              		ldrh	r0, [ip, #0]
 503              		.loc 1 271 0
 504 034c 40C0DDE5 		ldr	lr, [sp, #60]
 505              		ldr	ip, [sp, #8]
 506 0350 41E0DDE5 		ldr	r3, .L59+4
 507 0354 08C08DE5 		strb	ip, [lr, r3]
 508              		ldr	lr, [sp, #4]
 509 0358 4430DDE5 		strb	lr, [r4, #1]
 510              		.loc 1 272 0
 511 035c D8C09FE5 		ldr	r3, [sp, #0]
 512              		strb	r3, [r4, #14]
 513 0360 08408DE8 		.loc 1 273 0
 514              		ldr	ip, [sp, #56]
 515 0364 B000DCE1 		strb	ip, [r4, #3]
 516              		ldr	lr, [sp, #52]
 517 0368 3CE09DE5 		strb	lr, [r4, #4]
 518 036c 08C09DE5 		ldr	r3, [sp, #48]
 519 0370 C0309FE5 		strb	r5, [r4, #2]
 520 0374 03C0CEE7 		strb	r3, [r4, #5]
 521 0378 04E09DE5 		.loc 1 274 0
 522 037c 01E0C4E5 		ldr	r5, [sp, #36]
 523              	.LVL34:
 524 0380 00309DE5 		strb	r5, [sl, #5]
 525 0384 0E30C4E5 		ldr	ip, [sp, #44]
 526              		strb	ip, [sl, #3]
 527 0388 38C09DE5 		ldr	lr, [sp, #40]
 528 038c 03C0C4E5 		strb	r7, [sl, #2]
 529 0390 34E09DE5 		strb	lr, [sl, #4]
 530 0394 04E0C4E5 		.loc 1 275 0
 531 0398 30309DE5 		ldr	r3, [sp, #24]
 532 039c 0250C4E5 		strb	r3, [r9, #5]
 533 03a0 0530C4E5 		ldr	r5, [sp, #32]
 534              		strb	r5, [r9, #3]
 535 03a4 24509DE5 		ldr	ip, [sp, #28]
 536              		strb	ip, [r9, #4]
 537 03a8 0550CAE5 		strb	r8, [r9, #2]
 538 03ac 2CC09DE5 		.loc 1 276 0
 539 03b0 03C0CAE5 		ldr	lr, [sp, #12]
 540 03b4 28E09DE5 		strb	lr, [fp, #6]
 541 03b8 0270CAE5 		ldr	r3, [sp, #20]
 542 03bc 04E0CAE5 		strb	r3, [fp, #4]
 543              		ldr	r5, [sp, #16]
 544 03c0 18309DE5 		strb	r6, [fp, #3]
 545 03c4 0530C9E5 		strb	r5, [fp, #5]
 546 03c8 20509DE5 		.loc 1 278 0
 547 03cc 0350C9E5 		bl	aciUpdateCrc16
 548 03d0 1CC09DE5 		ldr	ip, .L59+8
 549 03d4 04C0C9E5 		.loc 1 279 0
 550 03d8 0280C9E5 		mov	r2, #1
 551              		add	r1, sp, #68
 552 03dc 0CE09DE5 		.loc 1 278 0
 553 03e0 06E0CBE5 		strh	r0, [ip, #0]	@ movhi
 554 03e4 14309DE5 		.loc 1 279 0
 555 03e8 0430CBE5 		bl	aciUpdateCrc16
 556 03ec 10509DE5 		.loc 1 281 0
 557 03f0 0360CBE5 		ldr	lr, .L59
 558 03f4 0550CBE5 		ldr	r3, [lr, #0]
 559              		.loc 1 279 0
 560 03f8 FEFFFFEB 		ldr	r2, .L59+8
 561 03fc 38C09FE5 		.loc 1 281 0
 562              		add	r3, r3, #1
 563 0400 0120A0E3 		.loc 1 279 0
 564 0404 44108DE2 		strh	r0, [r2, #0]	@ movhi
 565              		.loc 1 281 0
 566 0408 B000CCE1 		str	r3, [lr, #0]
 567              	.LVL35:
 568 040c FEFFFFEB 	.L58:
 569              		.loc 1 282 0
 570 0410 1CE09FE5 		add	sp, sp, #72
 571 0414 00309EE5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 572              		bx	lr
 573 0418 1C209FE5 	.L60:
 574              		.align	2
 575 041c 013083E2 	.L59:
 576              		.word	aciListParCount
 577 0420 B000C2E1 		.word	aciListPar
 578              		.word	aciMagicCodePar
 579 0424 00308EE5 	.LFE7:
 581              		.align	2
 582              		.global	aciPublishCommandInt
 584 042c F04FBDE8 	aciPublishCommandInt:
 585 0430 1EFF2FE1 	.LFB6:
 586              		.loc 1 250 0
 587              		@ Function supports interworking.
 588              		@ args = 8, pretend = 0, frame = 72
 589 0434 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 590 0438 00000000 	.LVL36:
 591 043c 00000000 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 592              	.LCFI6:
 593              		.loc 1 251 0
 594              		ldr	r5, .L65
 595              		ldr	lr, [r5, #0]
 596              		.loc 1 253 0
 597              		ldr	r5, .L65+4
 598              		add	ip, lr, lr, asl #3
 599              		.loc 1 250 0
 600              		sub	sp, sp, #72
 601              	.LCFI7:
 602              		.loc 1 253 0
 603              		add	ip, lr, ip, asl #1
 604 0440 F04F2DE9 		add	r4, ip, r5
 605              		.loc 1 250 0
 606              		ldr	r7, [sp, #108]
 607 0444 94519FE5 		.loc 1 253 0
 608 0448 00E095E5 		str	ip, [sp, #60]
 609              		.loc 1 251 0
 610 044c 90519FE5 		cmp	lr, #50
 611 0450 8EC18EE0 		.loc 1 255 0
 612              		mov	ip, r3, lsr #24
 613 0454 48D04DE2 		mov	lr, r3, lsr #8
 614              		.loc 1 250 0
 615              		mov	r5, r3
 616 0458 8CC08EE0 		.loc 1 255 0
 617 045c 05408CE0 		mov	r3, r3, lsr #16
 618              	.LVL37:
 619 0460 6C709DE5 		.loc 1 250 0
 620              		ldr	r8, [sp, #112]
 621 0464 3CC08DE5 		.loc 1 255 0
 622              		str	ip, [sp, #48]
 623 0468 32005EE3 		str	lr, [sp, #56]
 624              		.loc 1 258 0
 625 046c 23CCA0E1 		mov	ip, r0, lsr #24
 626 0470 23E4A0E1 		mov	lr, r0, lsr #8
 627              		.loc 1 255 0
 628 0474 0350A0E1 		str	r3, [sp, #52]
 629              		.loc 1 258 0
 630 0478 2338A0E1 		mov	r3, r0, lsr #16
 631              		str	ip, [sp, #12]
 632              		str	lr, [sp, #20]
 633 047c 70809DE5 		.loc 1 256 0
 634              		mov	ip, r7, lsr #24
 635 0480 30C08DE5 		mov	lr, r7, lsr #8
 636 0484 38E08DE5 		.loc 1 258 0
 637              		str	r3, [sp, #16]
 638 0488 20CCA0E1 		.loc 1 256 0
 639 048c 20E4A0E1 		mov	r3, r7, lsr #16
 640              		str	ip, [sp, #36]
 641 0490 34308DE5 		str	lr, [sp, #44]
 642              		str	r3, [sp, #40]
 643 0494 2038A0E1 		.loc 1 257 0
 644 0498 0CC08DE5 		mov	ip, r8, lsr #24
 645 049c 14E08DE5 		mov	lr, r8, lsr #8
 646              		mov	r3, r8, lsr #16
 647 04a0 27CCA0E1 		.loc 1 250 0
 648 04a4 27E4A0E1 		strh	r2, [sp, #64]	@ movhi
 649              		strb	r1, [sp, #68]
 650 04a8 10308DE5 		.loc 1 258 0
 651              		add	fp, r4, #12
 652 04ac 2738A0E1 		.loc 1 256 0
 653 04b0 24C08DE5 		add	sl, r4, #4
 654 04b4 2CE08DE5 		.loc 1 257 0
 655 04b8 28308DE5 		add	r9, r4, #8
 656              		.loc 1 260 0
 657 04bc 28CCA0E1 		mov	r2, #2
 658 04c0 28E4A0E1 	.LVL38:
 659 04c4 2838A0E1 		add	r1, sp, #64
 660              	.LVL39:
 661 04c8 B024CDE1 		.loc 1 250 0
 662 04cc 4410CDE5 		mov	r6, r0
 663              		.loc 1 257 0
 664 04d0 0CB084E2 		str	ip, [sp, #24]
 665              		str	lr, [sp, #32]
 666 04d4 04A084E2 		str	r3, [sp, #28]
 667              		.loc 1 251 0
 668 04d8 089084E2 		beq	.L64
 669              	.LVL40:
 670 04dc 0220A0E3 		.loc 1 253 0
 671              		ldrb	ip, [sp, #64]	@ zero_extendqisi2
 672 04e0 40108DE2 	.LVL41:
 673              		ldrb	lr, [sp, #65]	@ zero_extendqisi2
 674              		str	ip, [sp, #8]
 675 04e4 0060A0E1 		.loc 1 254 0
 676              		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 677 04e8 18C08DE5 		.loc 1 260 0
 678 04ec 20E08DE5 		ldr	ip, .L65+8
 679 04f0 1C308DE5 		.loc 1 253 0
 680              		stmia	sp, {r3, lr}	@ phole stm
 681 04f4 3600000A 		.loc 1 260 0
 682              		ldrh	r0, [ip, #0]
 683              		.loc 1 253 0
 684 04f8 40C0DDE5 		ldr	lr, [sp, #60]
 685              		ldr	ip, [sp, #8]
 686 04fc 41E0DDE5 		ldr	r3, .L65+4
 687 0500 08C08DE5 		strb	ip, [lr, r3]
 688              		ldr	lr, [sp, #4]
 689 0504 4430DDE5 		strb	lr, [r4, #1]
 690              		.loc 1 254 0
 691 0508 D8C09FE5 		ldr	r3, [sp, #0]
 692              		strb	r3, [r4, #14]
 693 050c 08408DE8 		.loc 1 255 0
 694              		ldr	ip, [sp, #56]
 695 0510 B000DCE1 		strb	ip, [r4, #3]
 696              		ldr	lr, [sp, #52]
 697 0514 3CE09DE5 		strb	lr, [r4, #4]
 698 0518 08C09DE5 		ldr	r3, [sp, #48]
 699 051c C0309FE5 		strb	r5, [r4, #2]
 700 0520 03C0CEE7 		strb	r3, [r4, #5]
 701 0524 04E09DE5 		.loc 1 256 0
 702 0528 01E0C4E5 		ldr	r5, [sp, #36]
 703              	.LVL42:
 704 052c 00309DE5 		strb	r5, [sl, #5]
 705 0530 0E30C4E5 		ldr	ip, [sp, #44]
 706              		strb	ip, [sl, #3]
 707 0534 38C09DE5 		ldr	lr, [sp, #40]
 708 0538 03C0C4E5 		strb	r7, [sl, #2]
 709 053c 34E09DE5 		strb	lr, [sl, #4]
 710 0540 04E0C4E5 		.loc 1 257 0
 711 0544 30309DE5 		ldr	r3, [sp, #24]
 712 0548 0250C4E5 		strb	r3, [r9, #5]
 713 054c 0530C4E5 		ldr	r5, [sp, #32]
 714              		strb	r5, [r9, #3]
 715 0550 24509DE5 		ldr	ip, [sp, #28]
 716              		strb	ip, [r9, #4]
 717 0554 0550CAE5 		strb	r8, [r9, #2]
 718 0558 2CC09DE5 		.loc 1 258 0
 719 055c 03C0CAE5 		ldr	lr, [sp, #12]
 720 0560 28E09DE5 		strb	lr, [fp, #6]
 721 0564 0270CAE5 		ldr	r3, [sp, #20]
 722 0568 04E0CAE5 		strb	r3, [fp, #4]
 723              		ldr	r5, [sp, #16]
 724 056c 18309DE5 		strb	r6, [fp, #3]
 725 0570 0530C9E5 		strb	r5, [fp, #5]
 726 0574 20509DE5 		.loc 1 260 0
 727 0578 0350C9E5 		bl	aciUpdateCrc16
 728 057c 1CC09DE5 		ldr	ip, .L65+8
 729 0580 04C0C9E5 		.loc 1 261 0
 730 0584 0280C9E5 		mov	r2, #1
 731              		add	r1, sp, #68
 732 0588 0CE09DE5 		.loc 1 260 0
 733 058c 06E0CBE5 		strh	r0, [ip, #0]	@ movhi
 734 0590 14309DE5 		.loc 1 261 0
 735 0594 0430CBE5 		bl	aciUpdateCrc16
 736 0598 10509DE5 		.loc 1 263 0
 737 059c 0360CBE5 		ldr	lr, .L65
 738 05a0 0550CBE5 		ldr	r3, [lr, #0]
 739              		.loc 1 261 0
 740 05a4 FEFFFFEB 		ldr	r2, .L65+8
 741 05a8 38C09FE5 		.loc 1 263 0
 742              		add	r3, r3, #1
 743 05ac 0120A0E3 		.loc 1 261 0
 744 05b0 44108DE2 		strh	r0, [r2, #0]	@ movhi
 745              		.loc 1 263 0
 746 05b4 B000CCE1 		str	r3, [lr, #0]
 747              	.LVL43:
 748 05b8 FEFFFFEB 	.L64:
 749              		.loc 1 264 0
 750 05bc 1CE09FE5 		add	sp, sp, #72
 751 05c0 00309EE5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 752              		bx	lr
 753 05c4 1C209FE5 	.L66:
 754              		.align	2
 755 05c8 013083E2 	.L65:
 756              		.word	aciListCmdCount
 757 05cc B000C2E1 		.word	aciListCmd
 758              		.word	aciMagicCodeCmd
 759 05d0 00308EE5 	.LFE6:
 761              		.align	2
 762              		.global	aciPublishVariableInt
 764 05d8 F04FBDE8 	aciPublishVariableInt:
 765 05dc 1EFF2FE1 	.LFB5:
 766              		.loc 1 231 0
 767              		@ Function supports interworking.
 768              		@ args = 8, pretend = 0, frame = 72
 769 05e0 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 770 05e4 00000000 	.LVL44:
 771 05e8 00000000 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 772              	.LCFI8:
 773              		.loc 1 232 0
 774              		ldr	r5, .L71
 775              		ldr	lr, [r5, #0]
 776              		.loc 1 234 0
 777              		ldr	r5, .L71+4
 778              		add	ip, lr, lr, asl #3
 779              		.loc 1 231 0
 780              		sub	sp, sp, #72
 781              	.LCFI9:
 782              		.loc 1 234 0
 783              		add	ip, lr, ip, asl #1
 784 05ec F04F2DE9 		add	r4, ip, r5
 785              		.loc 1 231 0
 786              		ldr	r7, [sp, #108]
 787 05f0 94519FE5 		.loc 1 234 0
 788 05f4 00E095E5 		str	ip, [sp, #60]
 789              		.loc 1 232 0
 790 05f8 90519FE5 		cmp	lr, #70
 791 05fc 8EC18EE0 		.loc 1 236 0
 792              		mov	ip, r3, lsr #24
 793 0600 48D04DE2 		mov	lr, r3, lsr #8
 794              		.loc 1 231 0
 795              		mov	r5, r3
 796 0604 8CC08EE0 		.loc 1 236 0
 797 0608 05408CE0 		mov	r3, r3, lsr #16
 798              	.LVL45:
 799 060c 6C709DE5 		.loc 1 231 0
 800              		ldr	r8, [sp, #112]
 801 0610 3CC08DE5 		.loc 1 236 0
 802              		str	ip, [sp, #48]
 803 0614 46005EE3 		str	lr, [sp, #56]
 804              		.loc 1 239 0
 805 0618 23CCA0E1 		mov	ip, r0, lsr #24
 806 061c 23E4A0E1 		mov	lr, r0, lsr #8
 807              		.loc 1 236 0
 808 0620 0350A0E1 		str	r3, [sp, #52]
 809              		.loc 1 239 0
 810 0624 2338A0E1 		mov	r3, r0, lsr #16
 811              		str	ip, [sp, #12]
 812              		str	lr, [sp, #20]
 813 0628 70809DE5 		.loc 1 237 0
 814              		mov	ip, r7, lsr #24
 815 062c 30C08DE5 		mov	lr, r7, lsr #8
 816 0630 38E08DE5 		.loc 1 239 0
 817              		str	r3, [sp, #16]
 818 0634 20CCA0E1 		.loc 1 237 0
 819 0638 20E4A0E1 		mov	r3, r7, lsr #16
 820              		str	ip, [sp, #36]
 821 063c 34308DE5 		str	lr, [sp, #44]
 822              		str	r3, [sp, #40]
 823 0640 2038A0E1 		.loc 1 238 0
 824 0644 0CC08DE5 		mov	ip, r8, lsr #24
 825 0648 14E08DE5 		mov	lr, r8, lsr #8
 826              		mov	r3, r8, lsr #16
 827 064c 27CCA0E1 		.loc 1 231 0
 828 0650 27E4A0E1 		strh	r2, [sp, #64]	@ movhi
 829              		strb	r1, [sp, #68]
 830 0654 10308DE5 		.loc 1 239 0
 831              		add	fp, r4, #12
 832 0658 2738A0E1 		.loc 1 237 0
 833 065c 24C08DE5 		add	sl, r4, #4
 834 0660 2CE08DE5 		.loc 1 238 0
 835 0664 28308DE5 		add	r9, r4, #8
 836              		.loc 1 241 0
 837 0668 28CCA0E1 		mov	r2, #2
 838 066c 28E4A0E1 	.LVL46:
 839 0670 2838A0E1 		add	r1, sp, #64
 840              	.LVL47:
 841 0674 B024CDE1 		.loc 1 231 0
 842 0678 4410CDE5 		mov	r6, r0
 843              		.loc 1 238 0
 844 067c 0CB084E2 		str	ip, [sp, #24]
 845              		str	lr, [sp, #32]
 846 0680 04A084E2 		str	r3, [sp, #28]
 847              		.loc 1 232 0
 848 0684 089084E2 		beq	.L70
 849              	.LVL48:
 850 0688 0220A0E3 		.loc 1 234 0
 851              		ldrb	ip, [sp, #64]	@ zero_extendqisi2
 852 068c 40108DE2 	.LVL49:
 853              		ldrb	lr, [sp, #65]	@ zero_extendqisi2
 854              		str	ip, [sp, #8]
 855 0690 0060A0E1 		.loc 1 235 0
 856              		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 857 0694 18C08DE5 		.loc 1 241 0
 858 0698 20E08DE5 		ldr	ip, .L71+8
 859 069c 1C308DE5 		.loc 1 234 0
 860              		stmia	sp, {r3, lr}	@ phole stm
 861 06a0 3600000A 		.loc 1 241 0
 862              		ldrh	r0, [ip, #0]
 863              		.loc 1 234 0
 864 06a4 40C0DDE5 		ldr	lr, [sp, #60]
 865              		ldr	ip, [sp, #8]
 866 06a8 41E0DDE5 		ldr	r3, .L71+4
 867 06ac 08C08DE5 		strb	ip, [lr, r3]
 868              		ldr	lr, [sp, #4]
 869 06b0 4430DDE5 		strb	lr, [r4, #1]
 870              		.loc 1 235 0
 871 06b4 D8C09FE5 		ldr	r3, [sp, #0]
 872              		strb	r3, [r4, #14]
 873 06b8 08408DE8 		.loc 1 236 0
 874              		ldr	ip, [sp, #56]
 875 06bc B000DCE1 		strb	ip, [r4, #3]
 876              		ldr	lr, [sp, #52]
 877 06c0 3CE09DE5 		strb	lr, [r4, #4]
 878 06c4 08C09DE5 		ldr	r3, [sp, #48]
 879 06c8 C0309FE5 		strb	r5, [r4, #2]
 880 06cc 03C0CEE7 		strb	r3, [r4, #5]
 881 06d0 04E09DE5 		.loc 1 237 0
 882 06d4 01E0C4E5 		ldr	r5, [sp, #36]
 883              	.LVL50:
 884 06d8 00309DE5 		strb	r5, [sl, #5]
 885 06dc 0E30C4E5 		ldr	ip, [sp, #44]
 886              		strb	ip, [sl, #3]
 887 06e0 38C09DE5 		ldr	lr, [sp, #40]
 888 06e4 03C0C4E5 		strb	r7, [sl, #2]
 889 06e8 34E09DE5 		strb	lr, [sl, #4]
 890 06ec 04E0C4E5 		.loc 1 238 0
 891 06f0 30309DE5 		ldr	r3, [sp, #24]
 892 06f4 0250C4E5 		strb	r3, [r9, #5]
 893 06f8 0530C4E5 		ldr	r5, [sp, #32]
 894              		strb	r5, [r9, #3]
 895 06fc 24509DE5 		ldr	ip, [sp, #28]
 896              		strb	ip, [r9, #4]
 897 0700 0550CAE5 		strb	r8, [r9, #2]
 898 0704 2CC09DE5 		.loc 1 239 0
 899 0708 03C0CAE5 		ldr	lr, [sp, #12]
 900 070c 28E09DE5 		strb	lr, [fp, #6]
 901 0710 0270CAE5 		ldr	r3, [sp, #20]
 902 0714 04E0CAE5 		strb	r3, [fp, #4]
 903              		ldr	r5, [sp, #16]
 904 0718 18309DE5 		strb	r6, [fp, #3]
 905 071c 0530C9E5 		strb	r5, [fp, #5]
 906 0720 20509DE5 		.loc 1 241 0
 907 0724 0350C9E5 		bl	aciUpdateCrc16
 908 0728 1CC09DE5 		ldr	ip, .L71+8
 909 072c 04C0C9E5 		.loc 1 242 0
 910 0730 0280C9E5 		mov	r2, #1
 911              		add	r1, sp, #68
 912 0734 0CE09DE5 		.loc 1 241 0
 913 0738 06E0CBE5 		strh	r0, [ip, #0]	@ movhi
 914 073c 14309DE5 		.loc 1 242 0
 915 0740 0430CBE5 		bl	aciUpdateCrc16
 916 0744 10509DE5 		.loc 1 244 0
 917 0748 0360CBE5 		ldr	lr, .L71
 918 074c 0550CBE5 		ldr	r3, [lr, #0]
 919              		.loc 1 242 0
 920 0750 FEFFFFEB 		ldr	r2, .L71+8
 921 0754 38C09FE5 		.loc 1 244 0
 922              		add	r3, r3, #1
 923 0758 0120A0E3 		.loc 1 242 0
 924 075c 44108DE2 		strh	r0, [r2, #0]	@ movhi
 925              		.loc 1 244 0
 926 0760 B000CCE1 		str	r3, [lr, #0]
 927              	.LVL51:
 928 0764 FEFFFFEB 	.L70:
 929              		.loc 1 245 0
 930 0768 1CE09FE5 		add	sp, sp, #72
 931 076c 00309EE5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 932              		bx	lr
 933 0770 1C209FE5 	.L72:
 934              		.align	2
 935 0774 013083E2 	.L71:
 936              		.word	aciListVarCount
 937 0778 B000C2E1 		.word	aciListVar
 938              		.word	aciMagicCodeVar
 939 077c 00308EE5 	.LFE5:
 941              		.align	2
 942              		.global	aciSetReadParafromFlashCallback
 944 0784 F04FBDE8 	aciSetReadParafromFlashCallback:
 945 0788 1EFF2FE1 	.LFB24:
 946              		.loc 1 1240 0
 947              		@ Function supports interworking.
 948              		@ args = 0, pretend = 0, frame = 0
 949 078c 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 950 0790 00000000 		@ link register save eliminated.
 951 0794 00000000 	.LVL52:
 952              		.loc 1 1241 0
 953              		ldr	r3, .L75
 954              		.loc 1 1240 0
 955              		@ lr needed for prologue
 956              		.loc 1 1241 0
 957              		str	r0, [r3, #0]
 958              		.loc 1 1242 0
1238:asctecCommIntfOnboard.c **** 
1239:asctecCommIntfOnboard.c **** void aciSetReadParafromFlashCallback(short (*aciReadParafromFlashCallback_func)(void))
1240:asctecCommIntfOnboard.c **** {
 959              	adParafromFlashCallback, .-aciSetReadParafromFlashCallback
 960              		.align	2
 961              		.global	aciSetSaveParaCallback
 963              	aciSetSaveParaCallback:
 964              	.LFB25:
1241:asctecCommIntfOnboard.c **** 	aciReadParafromFlashCallback = aciReadParafromFlashCallback_func;
 965              	1 1245 0
 966 0798 04309FE5 		@ Function supports interworking.
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970 079c 000083E5 	.LVL53:
1242:asctecCommIntfOnboard.c **** }
 971              	1 1246 0
 972 07a0 1EFF2FE1 		ldr	r3, .L79
 973              		.loc 1 1245 0
 974              		@ lr needed for prologue
 975              		.loc 1 1246 0
 976 07a4 00000000 		str	r0, [r3, #0]
 977              		.loc 1 1247 0
 978              		bx	lr
 979              	.L80:
 980              		.align	2
 981              	.L79:
 982              		.word	aciSaveParaCallback
 983              	.LFE25:
1243:asctecCommIntfOnboard.c **** 
1244:asctecCommIntfOnboard.c **** void aciSetSaveParaCallback(void (*aciSaveParaCallback_func)(void))
1245:asctecCommIntfOnboard.c **** {
 984              	SaveParaCallback, .-aciSetSaveParaCallback
 985              		.align	2
 986              		.global	aciSetWriteParatoFlashCallback
 988              	aciSetWriteParatoFlashCallback:
 989              	.LFB26:
1246:asctecCommIntfOnboard.c **** 	aciSaveParaCallback=aciSaveParaCallback_func;
 990              	1 1250 0
 991 07a8 04309FE5 		@ Function supports interworking.
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		@ link register save eliminated.
 995 07ac 000083E5 	.LVL54:
1247:asctecCommIntfOnboard.c **** }
 996              	1 1251 0
 997 07b0 1EFF2FE1 		ldr	r3, .L83
 998              		.loc 1 1250 0
 999              		@ lr needed for prologue
 1000              		.loc 1 1251 0
 1001 07b4 00000000 		str	r0, [r3, #0]
 1002              		.loc 1 1252 0
 1003              		bx	lr
 1004              	.L84:
 1005              		.align	2
 1006              	.L83:
 1007              		.word	aciWriteParatoFlashCallback
 1008              	.LFE26:
1248:asctecCommIntfOnboard.c **** 
1249:asctecCommIntfOnboard.c **** void aciSetWriteParatoFlashCallback(short (*aciWriteParatoFlashCallback_func)(void))
1250:asctecCommIntfOnboard.c **** {
 1009              	WriteParatoFlashCallback, .-aciSetWriteParatoFlashCallback
 1010              		.align	2
 1011              		.global	aciTxRingBufferAddData
 1013              	aciTxRingBufferAddData:
 1014              	.LFB19:
1251:asctecCommIntfOnboard.c **** 	aciWriteParatoFlashCallback=aciWriteParatoFlashCallback_func;
 1015              	1 1150 0
 1016 07b8 04309FE5 		@ Function supports interworking.
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              	.LVL55:
 1020 07bc 000083E5 		mov	r1, r1, asl #16
1252:asctecCommIntfOnboard.c **** }
 1021              	:
 1022 07c0 1EFF2FE1 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 1023              	.LCFI10:
 1024              		.loc 1 1154 0
 1025              		movs	r4, r1, lsr #16
 1026 07c4 00000000 	.LVL57:
 1027              		.loc 1 1150 0
 1028              		mov	r5, r0
 1029              		.loc 1 1154 0
 1030              		bne	.L95
 1031              	.LVL58:
 1032              	.L94:
 1033              		.loc 1 1186 0
 1034              		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 1035              		bx	lr
 1036              	.L95:
 1037              		.loc 1 1156 0
 1038              		bl	aciTxRingBufferGetFreeSpace
 1039 07c8 0118A0E1 		cmp	r4, r0
 1040              		.loc 1 1163 0
 1041 07cc F0412DE9 		ldr	r6, .L96
 1042              		.loc 1 1156 0
 1043              		mov	r7, r0
 1044 07d0 2148B0E1 		bhi	.L94
 1045              		.loc 1 1163 0
 1046              		ldrh	r3, [r6, #0]
 1047 07d4 0050A0E1 		.loc 1 1171 0
 1048              		ldr	r8, .L96+4
 1049 07d8 0100001A 		.loc 1 1163 0
 1050              		rsb	ip, r3, #160
 1051              		cmp	ip, r4
 1052              		.loc 1 1166 0
 1053 07dc F041BDE8 		mov	r1, r5
 1054 07e0 1EFF2FE1 	.LVL59:
 1055              		mov	r2, r4
 1056              		add	r0, r3, r8
 1057 07e4 FEFFFFEB 		.loc 1 1163 0
 1058 07e8 000054E1 		ble	.L89
 1059              	.LVL60:
 1060 07ec B8609FE5 		.loc 1 1166 0
 1061              		bl	memcpy
 1062 07f0 0070A0E1 	.LVL61:
 1063 07f4 F8FFFF8A 		.loc 1 1167 0
 1064              		ldrh	r3, [r6, #0]
 1065 07f8 B030D6E1 		add	r3, r4, r3
 1066              		strh	r3, [r6, #0]	@ movhi
 1067 07fc AC809FE5 	.L91:
 1068              		.loc 1 1180 0
 1069 0800 A0C063E2 		cmp	r7, #159
 1070 0804 04005CE1 		ldr	r4, .L96+8
 1071              	.LVL62:
 1072 0808 0510A0E1 		bne	.L94
 1073              		ldr	r3, [r4, #0]
 1074 080c 0420A0E1 		cmp	r3, #0
 1075 0810 080083E0 		beq	.L94
 1076              	.LBB2:
 1077 0814 0E0000DA 		.loc 1 1183 0
 1078              		bl	aciTxRingBufferGetNextByte
 1079              		.loc 1 1184 0
 1080 0818 FEFFFFEB 		ldr	ip, [r4, #0]
 1081              		mov	lr, pc
 1082              		bx	ip
 1083 081c B030D6E1 		b	.L94
 1084 0820 033084E0 	.LVL63:
 1085 0824 B030C6E1 	.L89:
 1086              	.LBE2:
 1087              		.loc 1 1171 0
 1088 0828 9F0057E3 		mov	r2, ip
 1089 082c 80409FE5 	.LVL64:
 1090              		add	r0, r3, r8
 1091 0830 E9FFFF1A 		mov	r1, r5
 1092 0834 003094E5 		bl	memcpy
 1093 0838 000053E3 	.LVL65:
 1094 083c E6FFFF0A 		.loc 1 1172 0
 1095              		ldrh	r2, [r6, #0]
 1096              		rsb	r1, r2, r5
 1097 0840 FEFFFFEB 		add	r2, r4, r2
 1098              		add	r1, r1, #160
 1099 0844 00C094E5 		sub	r2, r2, #160
 1100 0848 0FE0A0E1 		mov	r0, r8
 1101 084c 1CFF2FE1 		bl	memcpy
 1102 0850 E1FFFFEA 		.loc 1 1175 0
 1103              		ldrh	r2, [r6, #0]
 1104              		add	r2, r4, r2
 1105              		mov	r2, r2, asl #16
 1106              		.loc 1 1176 0
 1107 0854 0C20A0E1 		ldr	r1, .L96+12
 1108              		.loc 1 1175 0
 1109 0858 080083E0 		mov	r2, r2, lsr #16
 1110 085c 0510A0E1 		.loc 1 1176 0
 1111 0860 FEFFFFEB 		umull	r0, r3, r1, r2
 1112              		mov	r3, r3, lsr #7
 1113              		add	r3, r3, r3, asl #2
 1114 0864 B020D6E1 		sub	r2, r2, r3, asl #5
 1115 0868 051062E0 		strh	r2, [r6, #0]	@ movhi
 1116 086c 022084E0 		b	.L91
 1117 0870 A01081E2 	.L97:
 1118 0874 A02042E2 		.align	2
 1119 0878 0800A0E1 	.L96:
 1120 087c FEFFFFEB 		.word	aciTxRingBufferWritePtr
 1121              		.word	aciTxRingBuffer
 1122 0880 B020D6E1 		.word	aciStartTxCallback
 1123 0884 022084E0 		.word	-858993459
 1124 0888 0228A0E1 	.LFE19:
 1126 088c 24109FE5 		.align	2
 1127              		.global	aciTxSendPacket
 1129              	aciTxSendPacket:
 1130 0894 910283E0 	.LFB16:
 1131 0898 A333A0E1 		.loc 1 1106 0
 1132 089c 033183E0 		@ Function supports interworking.
 1133 08a0 832242E0 		@ args = 0, pretend = 0, frame = 16
 1134 08a4 B020C6E1 		@ frame_needed = 0, uses_anonymous_args = 0
 1135 08a8 DEFFFFEA 	.LVL66:
 1136              		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 1137              	.LCFI11:
 1138              		sub	sp, sp, #16
 1139 08ac 00000000 	.LCFI12:
 1140 08b0 00000000 		.loc 1 1107 0
 1141 08b4 00000000 		add	r5, sp, #11
 1142 08b8 CDCCCCCC 		.loc 1 1106 0
 1143              		strb	r0, [sp, #4]
 1144              		strh	r2, [sp, #0]	@ movhi
 1145              		mov	r6, r1
 1146              		.loc 1 1107 0
 1147              		mov	r2, #3
 1148              	.LVL67:
 1149              		ldr	r1, .L102
 1150              	.LVL68:
 1151              		mov	r0, r5
 1152              	.LVL69:
 1153              		bl	memcpy
 1154              		.loc 1 1108 0
 1155 08bc F0412DE9 		mov	r3, #255	@ movhi
 1156              		strh	r3, [sp, #14]	@ movhi
 1157 08c0 10D04DE2 	.LVL70:
 1158              		.loc 1 1110 0
 1159              		bl	aciTxRingBufferGetFreeSpace
 1160 08c4 0B508DE2 		ldrh	r4, [sp, #0]
 1161              		add	r4, r4, #10
 1162 08c8 0400CDE5 		cmp	r4, r0
 1163 08cc B020CDE1 		.loc 1 1117 0
 1164 08d0 0160A0E1 		add	r7, sp, #4
 1165              		.loc 1 1121 0
 1166 08d4 0320A0E3 		mov	r8, sp
 1167              		.loc 1 1114 0
 1168 08d8 B0109FE5 		mov	r1, #3
 1169              		mov	r0, r5
 1170 08dc 0500A0E1 		.loc 1 1110 0
 1171              		bge	.L101
 1172 08e0 FEFFFFEB 		.loc 1 1114 0
 1173              		bl	aciTxRingBufferAddData
 1174 08e4 FF30A0E3 		.loc 1 1117 0
 1175 08e8 BE30CDE1 		mov	r0, r7
 1176              		mov	r1, #1
 1177              		bl	aciTxRingBufferAddData
 1178 08ec FEFFFFEB 		.loc 1 1118 0
 1179 08f0 B040DDE1 		mov	r2, #1
 1180 08f4 0A4084E2 		mov	r1, r7
 1181 08f8 000054E1 		ldrh	r0, [sp, #14]
 1182              		bl	aciUpdateCrc16
 1183 08fc 04708DE2 		.loc 1 1121 0
 1184              		mov	r1, #2
 1185 0900 0D80A0E1 		.loc 1 1118 0
 1186              		strh	r0, [sp, #14]	@ movhi
 1187 0904 0310A0E3 		.loc 1 1121 0
 1188 0908 0500A0E1 		mov	r0, sp
 1189              		bl	aciTxRingBufferAddData
 1190 090c 1C0000AA 		.loc 1 1122 0
 1191              		mov	r2, #2
 1192 0910 FEFFFFEB 		mov	r1, sp
 1193              		ldrh	r0, [sp, #14]
 1194 0914 0700A0E1 		bl	aciUpdateCrc16
 1195 0918 0110A0E3 		.loc 1 1124 0
 1196 091c FEFFFFEB 		ldrh	r1, [sp, #0]
 1197              		.loc 1 1122 0
 1198 0920 0120A0E3 		strh	r0, [sp, #14]	@ movhi
 1199 0924 0710A0E1 		.loc 1 1124 0
 1200 0928 BE00DDE1 		mov	r0, r6
 1201 092c FEFFFFEB 		bl	aciTxRingBufferAddData
 1202              		.loc 1 1125 0
 1203 0930 0210A0E3 		mov	r1, r6
 1204              		ldrh	r0, [sp, #14]
 1205 0934 BE00CDE1 		ldrh	r2, [sp, #0]
 1206              		bl	aciUpdateCrc16
 1207 0938 0D00A0E1 		add	r3, sp, #16
 1208 093c FEFFFFEB 		strh	r0, [r3, #-2]!	@ movhi
 1209              		.loc 1 1128 0
 1210 0940 0220A0E3 		mov	r1, #2
 1211 0944 0D10A0E1 		mov	r0, r3
 1212 0948 BE00DDE1 		bl	aciTxRingBufferAddData
 1213 094c FEFFFFEB 	.L101:
 1214              		.loc 1 1130 0
 1215 0950 B010DDE1 		add	sp, sp, #16
 1216              		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 1217 0954 BE00CDE1 		bx	lr
 1218              	.L103:
 1219 0958 0600A0E1 		.align	2
 1220 095c FEFFFFEB 	.L102:
 1221              		.word	C.81.2813
 1222 0960 0610A0E1 	.LFE16:
 1224 0968 B020DDE1 		.align	2
 1225 096c FEFFFFEB 		.global	aciSendVar
 1227 0974 B20063E1 	aciSendVar:
 1228              	.LFB8:
 1229 0978 0210A0E3 		.loc 1 285 0
 1230 097c 0300A0E1 		@ Function supports interworking.
 1231 0980 FEFFFFEB 		@ args = 0, pretend = 0, frame = 52
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1234 0984 10D08DE2 	.LCFI13:
 1235 0988 F041BDE8 		ldr	r0, .L136
 1236 098c 1EFF2FE1 		ldr	r1, .L136+4
 1237              		ldr	r2, .L136+8
 1238              		sub	sp, sp, #52
 1239              	.LCFI14:
 1240 0990 00000000 		.loc 1 285 0
 1241              		ldr	r3, .L136+12
 1242              		str	r0, [sp, #12]
 1243              		str	r1, [sp, #16]
 1244              		str	r2, [sp, #20]
 1245              		ldr	ip, .L136+16
 1246              		ldr	r0, .L136+20
 1247              		ldr	r1, .L136+24
 1248              		ldr	r2, .L136+28
 1249              		str	r3, [sp, #24]
 1250              		mov	r3, #0
 1251              		str	ip, [sp, #28]
 1252 0994 F04F2DE9 		str	r0, [sp, #32]
 1253              		str	r1, [sp, #36]
 1254 0998 BC039FE5 		str	r2, [sp, #0]
 1255 099c BC139FE5 		str	r3, [sp, #8]
 1256 09a0 BC239FE5 	.LVL71:
 1257 09a4 34D04DE2 	.L105:
 1258              		.loc 1 295 0
 1259              		ldr	ip, [sp, #12]
 1260 09a8 B8339FE5 		ldrh	r4, [ip, #0]
 1261 09ac 0C008DE5 		cmp	r4, #0
 1262 09b0 10108DE5 		beq	.L106
 1263 09b4 14208DE5 	.LBB3:
 1264 09b8 ACC39FE5 		.loc 1 304 0
 1265 09bc AC039FE5 		ldr	r0, [sp, #36]
 1266 09c0 AC139FE5 		ldrh	r3, [r0, #0]
 1267 09c4 AC239FE5 		cmp	r3, #0
 1268 09c8 18308DE5 		beq	.L108
 1269 09cc 0030A0E3 	.LBB4:
 1270 09d0 1CC08DE5 		.loc 1 311 0
 1271 09d4 20008DE5 		ldr	r3, .L136+32
 1272 09d8 24108DE5 		ldr	r1, [sp, #8]
 1273 09dc 00208DE5 		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 1274 09e0 08308DE5 		.loc 1 309 0
 1275              		ldr	r2, [sp, #36]
 1276              		.loc 1 311 0
 1277              		cmp	r0, #0
 1278 09e4 0CC09DE5 		.loc 1 309 0
 1279 09e8 B040DCE1 		mov	r3, #0	@ movhi
 1280 09ec 000054E3 		strh	r3, [r2, #0]	@ movhi
 1281 09f0 5400000A 		.loc 1 311 0
 1282              		movle	sl, #0
 1283              		movle	r8, r1, asl #6
 1284 09f4 24009DE5 		ble	.L112
 1285 09f8 B030D0E1 		ldr	ip, [sp, #8]
 1286 09fc 000053E3 	.LBB5:
 1287 0a00 8900000A 		.loc 1 319 0
 1288              		ldr	r5, .L136+36
 1289              		add	r9, r0, #1
 1290 0a04 70339FE5 		ldr	r0, .L136+40
 1291 0a08 08109DE5 		mov	r8, ip, asl #6
 1292 0a0c 0300D1E7 		ldrb	r1, [r5, #0]	@ zero_extendqisi2
 1293              		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1294 0a10 24209DE5 		.loc 1 318 0
 1295              		ldr	r3, .L136+44
 1296 0a14 000050E3 		add	r0, r8, r0
 1297              		.loc 1 319 0
 1298 0a18 0030A0E3 		mov	sl, #0
 1299 0a1c B030C2E1 		str	r0, [sp, #4]
 1300              		.loc 1 318 0
 1301 0a20 00A0A0D3 		ldr	r6, [r3, #0]
 1302 0a24 0183A0D1 		.loc 1 319 0
 1303 0a28 2B0000DA 		orr	fp, r1, r2, asl #8
 1304 0a2c 08C09DE5 		mov	r3, sl
 1305              		mov	r7, #1
 1306              	.LVL72:
 1307 0a30 48539FE5 	.L113:
 1308 0a34 019080E2 		.loc 1 316 0
 1309 0a38 44039FE5 		add	r3, r8, r3
 1310 0a3c 0C83A0E1 		ldr	r1, .L136+48
 1311 0a40 0010D5E5 		mov	r3, r3, asl #1
 1312 0a44 0120D5E5 		.loc 1 318 0
 1313              		cmp	r6, #0
 1314 0a48 38339FE5 		.loc 1 316 0
 1315 0a4c 000088E0 		ldrh	lr, [r3, r1]
 1316              	.LVL73:
 1317 0a50 00A0A0E3 		.loc 1 318 0
 1318 0a54 04008DE5 		ble	.L114
 1319              		.loc 1 319 0
 1320 0a58 006093E5 		cmp	fp, lr
 1321              		moveq	r0, #0
 1322 0a5c 02B481E1 		moveq	r1, r0
 1323 0a60 0A30A0E1 		beq	.L118
 1324 0a64 0170A0E3 		.loc 1 323 0
 1325              		mov	ip, #1
 1326              		b	.L120
 1327              	.L119:
 1328 0a68 033088E0 		.loc 1 319 0
 1329 0a6c 18139FE5 		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1330 0a70 8330A0E1 		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1331              		orr	r3, r3, r2, asl #8
 1332 0a74 000056E3 		cmp	lr, r3
 1333              		beq	.L118
 1334 0a78 B1E093E1 	.L120:
 1335              		mov	r1, ip, asl #3
 1336              		add	r3, r1, ip
 1337 0a7c 120000DA 		add	r3, ip, r3, asl #1
 1338              		.loc 1 318 0
 1339 0a80 0E005BE1 		cmp	ip, r6
 1340 0a84 0000A003 		.loc 1 323 0
 1341 0a88 0010A001 		mov	r0, ip
 1342 0a8c 4D00000A 		.loc 1 319 0
 1343              		add	r2, r3, r5
 1344 0a90 01C0A0E3 		add	ip, ip, #1
 1345 0a94 040000EA 		.loc 1 318 0
 1346              		bne	.L119
 1347              	.L114:
 1348 0a98 0530D3E7 		mov	r3, r7
 1349 0a9c 0120D2E5 		add	r7, r7, #1
 1350 0aa0 023483E1 	.LBE5:
 1351 0aa4 03005EE1 		.loc 1 311 0
 1352 0aa8 4600000A 		cmp	r7, r9
 1353              		bne	.L113
 1354 0aac 8C11A0E1 	.LVL74:
 1355 0ab0 0C3081E0 	.L112:
 1356 0ab4 83308CE0 		.loc 1 327 0
 1357              		ldr	r0, [sp, #24]
 1358 0ab8 06005CE1 		ldr	r1, .L136+40
 1359              		strh	sl, [r0, #0]	@ movhi
 1360 0abc 0C00A0E1 		ldr	r3, .L136+52
 1361              		ldr	r0, [sp, #8]
 1362 0ac0 052083E0 		mov	ip, #0
 1363 0ac4 01C08CE2 	.LVL75:
 1364              		add	r2, r8, r1
 1365 0ac8 F2FFFF1A 		mov	lr, ip
 1366              	.LVL76:
 1367 0acc 0730A0E1 		add	r1, r3, r0, asl #8
 1368 0ad0 017087E2 		b	.L121
 1369              	.L135:
 1370              		.loc 1 335 0
 1371 0ad4 090057E1 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1372 0ad8 E2FFFF1A 		add	r3, ip, r3, lsr #2
 1373              		mov	r3, r3, asl #16
 1374              		.loc 1 331 0
 1375              		cmp	r0, #4194304
 1376 0adc 18009DE5 		.loc 1 335 0
 1377 0ae0 9C129FE5 		mov	ip, r3, lsr #16
 1378 0ae4 B0A0C0E1 		.loc 1 331 0
 1379 0ae8 A0329FE5 		beq	.L122
 1380 0aec 08009DE5 	.L121:
 1381 0af0 00C0A0E3 		add	r3, lr, #1
 1382              		mov	r0, r3, asl #16
 1383 0af4 012088E0 		.loc 1 332 0
 1384 0af8 0CE0A0E1 		ldr	r3, [r1, #0]
 1385              		cmp	r3, #0
 1386 0afc 001483E0 		.loc 1 331 0
 1387 0b00 050000EA 		mov	lr, r0, lsr #16
 1388              		add	r1, r1, #4
 1389              		.loc 1 332 0
 1390 0b04 0130D2E4 		bne	.L135
 1391 0b08 23318CE0 	.L122:
 1392 0b0c 0338A0E1 		.loc 1 338 0
 1393              		ldr	r1, [sp, #20]
 1394 0b10 010550E3 		.loc 1 337 0
 1395              		ldr	r2, [sp, #16]
 1396 0b14 23C8A0E1 		.loc 1 338 0
 1397              		strh	ip, [r1, #0]	@ movhi
 1398 0b18 0600000A 		.loc 1 337 0
 1399              		strh	ip, [r2, #0]	@ movhi
 1400 0b1c 01308EE2 	.L106:
 1401 0b20 0308A0E1 	.LBE4:
 1402              	.LBB6:
 1403 0b24 003091E5 		.loc 1 371 0
 1404 0b28 000053E3 		ldr	ip, [sp, #8]
 1405              	.LVL77:
 1406 0b2c 20E8A0E1 		ldr	r0, [sp, #0]
 1407 0b30 041081E2 		add	r1, sp, #12
 1408              		ldmia	r1, {r1, r2}	@ phole ldm
 1409 0b34 F2FFFF1A 		add	ip, ip, #1
 1410              		add	r0, r0, #1
 1411              		add	r1, r1, #2
 1412 0b38 14109DE5 		add	r2, r2, #2
 1413              		ldr	r3, [sp, #20]
 1414 0b3c 10209DE5 		str	ip, [sp, #8]
 1415              	.LBE6:
 1416 0b40 B0C0C1E1 	.LBE3:
 1417              		.loc 1 290 0
 1418 0b44 B0C0C2E1 		cmp	ip, #3
 1419              	.LBB7:
 1420              	.LBB8:
 1421              		.loc 1 371 0
 1422              		str	r0, [sp, #0]
 1423 0b48 08C09DE5 		ldr	ip, [sp, #24]
 1424              		ldr	r0, [sp, #28]
 1425 0b4c 00009DE5 		str	r1, [sp, #12]
 1426 0b50 0C108DE2 		str	r2, [sp, #16]
 1427 0b54 060091E8 		add	r1, sp, #32
 1428 0b58 01C08CE2 		ldmia	r1, {r1, r2}	@ phole ldm
 1429 0b5c 010080E2 		add	r3, r3, #2
 1430 0b60 021081E2 		add	ip, ip, #2
 1431 0b64 022082E2 		add	r0, r0, #4
 1432 0b68 14309DE5 		add	r1, r1, #560
 1433 0b6c 08C08DE5 		add	r2, r2, #2
 1434              		str	r3, [sp, #20]
 1435              		str	ip, [sp, #24]
 1436              		str	r0, [sp, #28]
 1437 0b70 03005CE3 		str	r1, [sp, #32]
 1438              		str	r2, [sp, #36]
 1439              	.LBE8:
 1440              	.LBE7:
 1441 0b74 00008DE5 		.loc 1 290 0
 1442 0b78 18C09DE5 		bne	.L105
 1443 0b7c 1C009DE5 		.loc 1 376 0
 1444 0b80 0C108DE5 		add	sp, sp, #52
 1445 0b84 10208DE5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1446 0b88 20108DE2 		bx	lr
 1447 0b8c 060091E8 	.LVL78:
 1448 0b90 023083E2 	.L118:
 1449 0b94 02C08CE2 	.LBB9:
 1450 0b98 040080E2 	.LBB10:
 1451 0b9c 231E81E2 	.LBB11:
 1452 0ba0 022082E2 		.loc 1 321 0
 1453 0ba4 14308DE5 		add	r1, r1, r0
 1454 0ba8 18C08DE5 		add	r1, r0, r1, asl #1
 1455 0bac 1C008DE5 		add	r1, r1, r5
 1456 0bb0 20108DE5 		add	r2, r1, #12
 1457 0bb4 24208DE5 		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1458              		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 1459              		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 1460              		orr	r3, r3, r0, asl #8
 1461 0bb8 89FFFF1A 		.loc 1 322 0
 1462              		add	ip, sl, #1
 1463 0bbc 34D08DE2 		.loc 1 321 0
 1464 0bc0 F04FBDE8 		ldrb	r0, [r2, #6]	@ zero_extendqisi2
 1465 0bc4 1EFF2FE1 		.loc 1 322 0
 1466              		ldrb	lr, [r1, #14]	@ zero_extendqisi2
 1467              	.LVL79:
 1468              		ldr	r2, [sp, #4]
 1469              		mov	ip, ip, asl #16
 1470              		strb	lr, [r2, sl]
 1471              		.loc 1 321 0
 1472 0bc8 001081E0 		orr	r3, r3, r4, asl #16
 1473 0bcc 811080E0 		add	r2, r8, sl
 1474 0bd0 051081E0 		.loc 1 322 0
 1475 0bd4 0C2081E2 		mov	sl, ip, lsr #16
 1476 0bd8 0400D2E5 		.loc 1 321 0
 1477 0bdc 0330D2E5 		ldr	ip, .L136+52
 1478 0be0 0540D2E5 		orr	r3, r3, r0, asl #24
 1479 0be4 003483E1 		str	r3, [ip, r2, asl #2]
 1480              		.loc 1 318 0
 1481 0be8 01C08AE2 		mov	r3, r7
 1482              		add	r7, r7, #1
 1483 0bec 0600D2E5 	.LBE11:
 1484              		.loc 1 311 0
 1485 0bf0 0EE0D1E5 		cmp	r7, r9
 1486              		bne	.L113
 1487 0bf4 04209DE5 		b	.L112
 1488 0bf8 0CC8A0E1 	.LVL80:
 1489 0bfc 0AE0C2E7 	.L108:
 1490              	.LBE10:
 1491 0c00 043883E1 		.loc 1 342 0
 1492 0c04 0A2088E0 		ldr	ip, [sp, #24]
 1493              		ldrh	r3, [ip, #0]
 1494 0c08 2CA8A0E1 		cmp	r3, #0
 1495              		beq	.L106
 1496 0c0c 7CC19FE5 		bl	aciTxRingBufferGetFreeSpace
 1497 0c10 003C83E1 	.LVL81:
 1498 0c14 02318CE7 		ldr	r1, [sp, #16]
 1499              		ldrh	r5, [r1, #0]
 1500 0c18 0730A0E1 		add	r3, r5, #10
 1501 0c1c 017087E2 		cmp	r3, r0
 1502              		bge	.L106
 1503              		ldr	r3, .L136+56
 1504 0c20 090057E1 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1505 0c24 8FFFFF1A 		cmp	r2, #0
 1506 0c28 ABFFFFEA 		bne	.L106
 1507              		ldr	r2, [sp, #28]
 1508              		ldr	r3, [r2, #0]
 1509              		cmp	r4, r3
 1510              		bcs	.L106
 1511 0c2c 18C09DE5 	.LBB12:
 1512 0c30 B030DCE1 		.loc 1 344 0
 1513 0c34 000053E3 		add	r4, sp, #43
 1514 0c38 C2FFFF0A 		mov	r2, #3
 1515 0c3c FEFFFFEB 		ldr	r1, .L136+60
 1516              		mov	r0, r4
 1517 0c40 10109DE5 		bl	memcpy
 1518 0c44 B050D1E1 		.loc 1 345 0
 1519 0c48 0A3085E2 		ldr	ip, [sp, #8]
 1520 0c4c 000053E1 		sub	r3, ip, #112
 1521 0c50 BCFFFFAA 		strb	r3, [sp, #51]
 1522 0c54 38319FE5 		.loc 1 349 0
 1523 0c58 0020D3E5 		ldr	r3, [sp, #28]
 1524 0c5c 000052E3 		mov	ip, #1
 1525 0c60 B8FFFF1A 		.loc 1 347 0
 1526 0c64 1C209DE5 		add	r2, r5, #1
 1527 0c68 003092E5 		.loc 1 349 0
 1528 0c6c 030054E1 		str	ip, [r3, #0]
 1529 0c70 B4FFFF2A 		.loc 1 352 0
 1530              		mov	r0, r4
 1531              		.loc 1 347 0
 1532 0c74 2B408DE2 		strh	r2, [sp, #46]	@ movhi
 1533 0c78 0320A0E3 		.loc 1 355 0
 1534 0c7c 14119FE5 		add	r4, sp, #51
 1535 0c80 0400A0E1 		.loc 1 346 0
 1536 0c84 FEFFFFEB 		mov	r2, #255	@ movhi
 1537              		.loc 1 352 0
 1538 0c88 08C09DE5 		mov	r1, #3
 1539 0c8c 70304CE2 		.loc 1 346 0
 1540 0c90 3330CDE5 		strh	r2, [sp, #48]	@ movhi
 1541              		.loc 1 352 0
 1542 0c94 1C309DE5 		bl	aciTxRingBufferAddData
 1543 0c98 01C0A0E3 		.loc 1 355 0
 1544              		mov	r0, r4
 1545 0c9c 012085E2 		mov	r1, #1
 1546              		bl	aciTxRingBufferAddData
 1547 0ca0 00C083E5 		.loc 1 356 0
 1548              		mov	r1, r4
 1549 0ca4 0400A0E1 		mov	r2, #1
 1550              		ldrh	r0, [sp, #48]
 1551 0ca8 BE22CDE1 		bl	aciUpdateCrc16
 1552              		.loc 1 360 0
 1553 0cac 33408DE2 		add	r4, sp, #46
 1554              		.loc 1 356 0
 1555 0cb0 FF20A0E3 		strh	r0, [sp, #48]	@ movhi
 1556              		.loc 1 360 0
 1557 0cb4 0310A0E3 		mov	r1, #2
 1558              		mov	r0, r4
 1559 0cb8 B023CDE1 		bl	aciTxRingBufferAddData
 1560              		.loc 1 361 0
 1561 0cbc FEFFFFEB 		mov	r1, r4
 1562              		mov	r2, #2
 1563 0cc0 0400A0E1 		ldrh	r0, [sp, #48]
 1564 0cc4 0110A0E3 		bl	aciUpdateCrc16
 1565 0cc8 FEFFFFEB 		.loc 1 364 0
 1566              		mov	r1, #1
 1567 0ccc 0410A0E1 		.loc 1 361 0
 1568 0cd0 0120A0E3 		strh	r0, [sp, #48]	@ movhi
 1569 0cd4 B003DDE1 		.loc 1 364 0
 1570 0cd8 FEFFFFEB 		ldr	r0, [sp, #0]
 1571              		bl	aciTxRingBufferAddData
 1572 0cdc 2E408DE2 		.loc 1 365 0
 1573              		mov	r2, #1
 1574 0ce0 B003CDE1 		ldr	r1, [sp, #0]
 1575              		ldrh	r0, [sp, #48]
 1576 0ce4 0210A0E3 		bl	aciUpdateCrc16
 1577 0ce8 0400A0E1 		strh	r0, [sp, #48]	@ movhi
 1578 0cec FEFFFFEB 		.loc 1 367 0
 1579              		ldr	r0, [sp, #20]
 1580 0cf0 0410A0E1 		ldrh	r1, [r0, #0]
 1581 0cf4 0220A0E3 		ldr	r0, [sp, #32]
 1582 0cf8 B003DDE1 		bl	aciTxRingBufferAddData
 1583 0cfc FEFFFFEB 		.loc 1 368 0
 1584              		ldr	r3, [sp, #20]
 1585 0d00 0110A0E3 		ldr	r1, [sp, #32]
 1586              		ldrh	r0, [sp, #48]
 1587 0d04 B003CDE1 		ldrh	r2, [r3, #0]
 1588              		bl	aciUpdateCrc16
 1589 0d08 00009DE5 		.loc 1 371 0
 1590 0d0c FEFFFFEB 		mov	r1, #2
 1591              		.loc 1 368 0
 1592 0d10 0120A0E3 		strh	r0, [sp, #48]	@ movhi
 1593 0d14 00109DE5 		.loc 1 371 0
 1594 0d18 B003DDE1 		add	r0, sp, #48
 1595 0d1c FEFFFFEB 		bl	aciTxRingBufferAddData
 1596 0d20 B003CDE1 		b	.L106
 1597              	.L137:
 1598 0d24 14009DE5 		.align	2
 1599 0d28 B010D0E1 	.L136:
 1600 0d2c 20009DE5 		.word	aciVarPacketTransmissionRate
 1601 0d30 FEFFFFEB 		.word	aciVarPacketCurrentSize
 1602              		.word	aciVarPacketContentBufferLength
 1603 0d34 14309DE5 		.word	aciVarPacketNumberOfVars
 1604 0d38 20109DE5 		.word	aciEngineRateCounter
 1605 0d3c B003DDE1 		.word	aciVarPacketContentBuffer
 1606 0d40 B020D3E1 		.word	aciVarPacketUpdated
 1607 0d44 FEFFFFEB 		.word	aciVarPacketMagicCode
 1608              		.word	aciVarPacketSelectLength
 1609 0d48 0210A0E3 		.word	aciListVar
 1610              		.word	aciVarPacketTypeList
 1611 0d4c B003CDE1 		.word	aciListVarCount
 1612              		.word	aciVarPacketSelect
 1613 0d50 30008DE2 		.word	aciVarPacketPtrList
 1614 0d54 FEFFFFEB 		.word	aciInhibitPacketTransmission
 1615 0d58 7AFFFFEA 		.word	C.30.2276
 1616              	.LBE12:
 1617              	.LBE9:
 1618              	.LFE8:
 1620 0d60 00000000 		.align	2
 1621 0d64 00000000 		.global	aciSyncPar
 1623 0d6c 00000000 	aciSyncPar:
 1624 0d70 00000000 	.LFB11:
 1625 0d74 00000000 		.loc 1 413 0
 1626 0d78 00000000 		@ Function supports interworking.
 1627 0d7c 00000000 		@ args = 0, pretend = 0, frame = 4
 1628 0d80 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 1629 0d84 00000000 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1630 0d88 00000000 	.LCFI15:
 1631 0d8c 00000000 		ldr	r2, .L157
 1632 0d90 00000000 		sub	sp, sp, #4
 1633 0d94 00000000 	.LCFI16:
 1634 0d98 03000000 		.loc 1 413 0
 1635              		mov	r8, #0
 1636              		str	r2, [sp, #0]
 1637              		ldr	r9, .L157+4
 1638              		mov	fp, r8
 1639              	.LVL82:
 1640              	.L139:
 1641              		.loc 1 419 0
 1642              		ldr	r2, [sp, #0]
 1643              		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 1644              		cmp	r3, #0
 1645              		beq	.L140
 1646              	.LBB13:
 1647              		.loc 1 421 0
 1648 0d9c F04F2DE9 		ldrb	r6, [r9, #0]	@ zero_extendqisi2
 1649              		cmp	r6, #0
 1650 0da0 6C219FE5 		movgt	r3, #0
 1651 0da4 04D04DE2 		movgt	r7, r3
 1652              		movgt	sl, #1
 1653              		ble	.L142
 1654 0da8 0080A0E3 	.L144:
 1655 0dac 00208DE5 		.loc 1 422 0
 1656 0db0 60919FE5 		ldr	r2, .L157+8
 1657 0db4 08B0A0E1 		ldr	r5, [r2, #0]
 1658              		cmp	r5, #0
 1659              		ble	.L148
 1660              		.loc 1 423 0
 1661 0db8 00209DE5 		ldr	ip, .L157+12
 1662 0dbc 0030D2E5 		add	r2, r3, r8, asl #6
 1663 0dc0 000053E3 		ldr	r3, .L157+16
 1664 0dc4 2B00000A 		mov	r2, r2, asl #1
 1665              		ldrb	r1, [ip, #0]	@ zero_extendqisi2
 1666              		ldrb	r0, [ip, #1]	@ zero_extendqisi2
 1667 0dc8 0060D9E5 		ldrh	lr, [r2, r3]
 1668 0dcc 000056E3 		orr	r1, r1, r0, asl #8
 1669 0dd0 0030A0C3 		cmp	r1, lr
 1670 0dd4 0370A0C1 		moveq	r1, #0
 1671 0dd8 01A0A0C3 		moveq	r4, r1
 1672 0ddc 220000DA 		beq	.L147
 1673              		.loc 1 426 0
 1674              		mov	r0, #1
 1675 0de0 34219FE5 		b	.L146
 1676 0de4 005092E5 	.L145:
 1677 0de8 000055E3 		.loc 1 423 0
 1678 0dec 1A0000DA 		ldrb	r3, [r3, ip]	@ zero_extendqisi2
 1679              		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1680 0df0 28C19FE5 		orr	r3, r3, r2, asl #8
 1681 0df4 082383E0 		cmp	r3, lr
 1682 0df8 24319FE5 		beq	.L147
 1683 0dfc 8220A0E1 	.L146:
 1684 0e00 0010DCE5 		mov	r4, r0, asl #3
 1685 0e04 0100DCE5 		.loc 1 426 0
 1686 0e08 B3E092E1 		mov	r1, r0
 1687 0e0c 001481E1 		.loc 1 423 0
 1688 0e10 0E0051E1 		add	r3, r4, r0
 1689 0e14 0010A003 		add	r3, r0, r3, asl #1
 1690 0e18 0140A001 		.loc 1 422 0
 1691 0e1c 2000000A 		cmp	r5, r1
 1692              		.loc 1 423 0
 1693 0e20 0100A0E3 		add	r2, r3, ip
 1694 0e24 040000EA 		.loc 1 421 0
 1695              		add	r0, r0, #1
 1696              		.loc 1 422 0
 1697 0e28 0C30D3E7 		bne	.L145
 1698 0e2c 0120D2E5 	.L148:
 1699 0e30 023483E1 		.loc 1 421 0
 1700 0e34 0E0053E1 		cmp	sl, r6
 1701 0e38 1900000A 		.loc 1 422 0
 1702              		mov	r3, sl
 1703 0e3c 8041A0E1 		add	sl, sl, #1
 1704              		.loc 1 421 0
 1705 0e40 0010A0E1 		blt	.L144
 1706              	.L142:
 1707 0e44 003084E0 		.loc 1 430 0
 1708 0e48 833080E0 		ldr	r2, [sp, #0]
 1709              		mov	r3, #0
 1710 0e4c 010055E1 		strb	r3, [r2, #0]
 1711              	.L140:
 1712 0e50 0C2083E0 		ldr	r3, [sp, #0]
 1713              		add	r8, r8, #1
 1714 0e54 010080E2 		add	r3, r3, #1
 1715              	.LBE13:
 1716 0e58 F2FFFF1A 		.loc 1 418 0
 1717              		cmp	r8, #3
 1718              	.LBB14:
 1719 0e5c 06005AE1 		.loc 1 430 0
 1720              		str	r3, [sp, #0]
 1721 0e60 0A30A0E1 		add	r9, r9, #1
 1722 0e64 01A08AE2 		add	fp, fp, #400
 1723              	.LBE14:
 1724 0e68 DCFFFFBA 		.loc 1 418 0
 1725              		bne	.L139
 1726              		.loc 1 433 0
 1727 0e6c 00209DE5 		add	sp, sp, #4
 1728 0e70 0030A0E3 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1729 0e74 0030C2E5 		bx	lr
 1730              	.L147:
 1731 0e78 00309DE5 	.LBB15:
 1732 0e7c 018088E2 		.loc 1 424 0
 1733 0e80 013083E2 		add	r4, r4, r1
 1734              		add	r4, r1, r4, asl #1
 1735              		add	r4, r4, ip
 1736 0e84 030058E3 		add	r3, r4, #12
 1737              		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1738              		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 1739 0e88 00308DE5 		ldrb	ip, [r3, #5]	@ zero_extendqisi2
 1740 0e8c 019089E2 		ldrb	lr, [r3, #6]	@ zero_extendqisi2
 1741 0e90 19BE8BE2 		orr	r0, r0, r2, asl #8
 1742              		ldr	r3, .L157+20
 1743              		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1744 0e94 C7FFFF1A 		mov	r1, r7, asl #16
 1745              		orr	r0, r0, ip, asl #16
 1746 0e98 04D08DE2 		add	r1, fp, r1, asr #16
 1747 0e9c F04FBDE8 		add	r1, r1, r3
 1748 0ea0 1EFF2FE1 		orr	r0, r0, lr, asl #24
 1749              		mov	r2, r2, lsr #2
 1750              		bl	memcpy
 1751              		.loc 1 425 0
 1752 0ea4 014084E0 		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 1753 0ea8 844081E0 		ldrb	r6, [r9, #0]	@ zero_extendqisi2
 1754 0eac 0C4084E0 		add	r3, r7, r3, lsr #2
 1755 0eb0 0C3084E2 		mov	r3, r3, asl #16
 1756 0eb4 0420D3E5 		.loc 1 421 0
 1757 0eb8 0300D3E5 		cmp	sl, r6
 1758 0ebc 05C0D3E5 		.loc 1 425 0
 1759 0ec0 06E0D3E5 		mov	r7, r3, lsr #16
 1760 0ec4 020480E1 		.loc 1 422 0
 1761 0ec8 58309FE5 		mov	r3, sl
 1762 0ecc 0E20D4E5 		add	sl, sl, #1
 1763 0ed0 0718A0E1 		.loc 1 421 0
 1764 0ed4 0C0880E1 		blt	.L144
 1765 0ed8 41188BE0 		b	.L142
 1766 0edc 031081E0 	.L158:
 1767 0ee0 0E0C80E1 		.align	2
 1768 0ee4 2221A0E1 	.L157:
 1769 0ee8 FEFFFFEB 		.word	aciParamPacketReceived
 1770              		.word	aciParPacketSelectLength
 1771 0eec 0E30D4E5 		.word	aciListParCount
 1772 0ef0 0060D9E5 		.word	aciListPar
 1773 0ef4 233187E0 		.word	aciParPacketSelect
 1774 0ef8 0338A0E1 		.word	aciParPacketContentBuffer
 1775              	.LBE15:
 1776 0efc 06005AE1 	.LFE11:
 1778 0f00 2378A0E1 		.align	2
 1779              		.global	aciSyncCmd
 1781 0f08 01A08AE2 	aciSyncCmd:
 1782              	.LFB10:
 1783 0f0c B3FFFFBA 		.loc 1 392 0
 1784 0f10 D5FFFFEA 		@ Function supports interworking.
 1785              		@ args = 0, pretend = 0, frame = 4
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1788 0f14 00000000 	.LCFI17:
 1789 0f18 00000000 		ldr	r2, .L178
 1790 0f1c 00000000 		sub	sp, sp, #4
 1791 0f20 00000000 	.LCFI18:
 1792 0f24 00000000 		.loc 1 392 0
 1793 0f28 00000000 		mov	r8, #0
 1794              		str	r2, [sp, #0]
 1795              		ldr	r9, .L178+4
 1796              		mov	fp, r8
 1797              	.LVL83:
 1798              	.L160:
 1799              		.loc 1 398 0
 1800              		ldr	r2, [sp, #0]
 1801              		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 1802              		cmp	r3, #0
 1803              		beq	.L161
 1804              	.LBB16:
 1805              		.loc 1 400 0
 1806 0f2c F04F2DE9 		ldrb	r6, [r9, #0]	@ zero_extendqisi2
 1807              		cmp	r6, #0
 1808 0f30 6C219FE5 		movgt	r3, #0
 1809 0f34 04D04DE2 		movgt	r7, r3
 1810              		movgt	sl, #1
 1811              		ble	.L163
 1812 0f38 0080A0E3 	.L165:
 1813 0f3c 00208DE5 		.loc 1 401 0
 1814 0f40 60919FE5 		ldr	r2, .L178+8
 1815 0f44 08B0A0E1 		ldr	r5, [r2, #0]
 1816              		cmp	r5, #0
 1817              		ble	.L169
 1818              		.loc 1 402 0
 1819 0f48 00209DE5 		ldr	ip, .L178+12
 1820 0f4c 0030D2E5 		add	r2, r3, r8, asl #6
 1821 0f50 000053E3 		ldr	r3, .L178+16
 1822 0f54 2B00000A 		mov	r2, r2, asl #1
 1823              		ldrb	r1, [ip, #0]	@ zero_extendqisi2
 1824              		ldrb	r0, [ip, #1]	@ zero_extendqisi2
 1825 0f58 0060D9E5 		ldrh	lr, [r2, r3]
 1826 0f5c 000056E3 		orr	r1, r1, r0, asl #8
 1827 0f60 0030A0C3 		cmp	r1, lr
 1828 0f64 0370A0C1 		moveq	r1, #0
 1829 0f68 01A0A0C3 		moveq	r4, r1
 1830 0f6c 220000DA 		beq	.L168
 1831              		.loc 1 405 0
 1832              		mov	r0, #1
 1833 0f70 34219FE5 		b	.L167
 1834 0f74 005092E5 	.L166:
 1835 0f78 000055E3 		.loc 1 402 0
 1836 0f7c 1A0000DA 		ldrb	r3, [r3, ip]	@ zero_extendqisi2
 1837              		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1838 0f80 28C19FE5 		orr	r3, r3, r2, asl #8
 1839 0f84 082383E0 		cmp	r3, lr
 1840 0f88 24319FE5 		beq	.L168
 1841 0f8c 8220A0E1 	.L167:
 1842 0f90 0010DCE5 		mov	r4, r0, asl #3
 1843 0f94 0100DCE5 		.loc 1 405 0
 1844 0f98 B3E092E1 		mov	r1, r0
 1845 0f9c 001481E1 		.loc 1 402 0
 1846 0fa0 0E0051E1 		add	r3, r4, r0
 1847 0fa4 0010A003 		add	r3, r0, r3, asl #1
 1848 0fa8 0140A001 		.loc 1 401 0
 1849 0fac 2000000A 		cmp	r5, r1
 1850              		.loc 1 402 0
 1851 0fb0 0100A0E3 		add	r2, r3, ip
 1852 0fb4 040000EA 		.loc 1 400 0
 1853              		add	r0, r0, #1
 1854              		.loc 1 401 0
 1855 0fb8 0C30D3E7 		bne	.L166
 1856 0fbc 0120D2E5 	.L169:
 1857 0fc0 023483E1 		.loc 1 400 0
 1858 0fc4 0E0053E1 		cmp	sl, r6
 1859 0fc8 1900000A 		.loc 1 401 0
 1860              		mov	r3, sl
 1861 0fcc 8041A0E1 		add	sl, sl, #1
 1862              		.loc 1 400 0
 1863 0fd0 0010A0E1 		blt	.L165
 1864              	.L163:
 1865 0fd4 003084E0 		.loc 1 409 0
 1866 0fd8 833080E0 		ldr	r2, [sp, #0]
 1867              		mov	r3, #0
 1868 0fdc 010055E1 		strb	r3, [r2, #0]
 1869              	.L161:
 1870 0fe0 0C2083E0 		ldr	r3, [sp, #0]
 1871              		add	r8, r8, #1
 1872 0fe4 010080E2 		add	r3, r3, #1
 1873              	.LBE16:
 1874 0fe8 F2FFFF1A 		.loc 1 397 0
 1875              		cmp	r8, #3
 1876              	.LBB17:
 1877 0fec 06005AE1 		.loc 1 409 0
 1878              		str	r3, [sp, #0]
 1879 0ff0 0A30A0E1 		add	r9, r9, #1
 1880 0ff4 01A08AE2 		add	fp, fp, #400
 1881              	.LBE17:
 1882 0ff8 DCFFFFBA 		.loc 1 397 0
 1883              		bne	.L160
 1884              		.loc 1 411 0
 1885 0ffc 00209DE5 		add	sp, sp, #4
 1886 1000 0030A0E3 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1887 1004 0030C2E5 		bx	lr
 1888              	.L168:
 1889 1008 00309DE5 	.LBB18:
 1890 100c 018088E2 		.loc 1 403 0
 1891 1010 013083E2 		add	r4, r4, r1
 1892              		add	r4, r1, r4, asl #1
 1893              		add	r4, r4, ip
 1894 1014 030058E3 		add	r3, r4, #12
 1895              		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1896              		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 1897 1018 00308DE5 		ldrb	ip, [r3, #5]	@ zero_extendqisi2
 1898 101c 019089E2 		ldrb	lr, [r3, #6]	@ zero_extendqisi2
 1899 1020 19BE8BE2 		orr	r0, r0, r2, asl #8
 1900              		ldr	r3, .L178+20
 1901              		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1902 1024 C7FFFF1A 		mov	r1, r7, asl #16
 1903              		orr	r0, r0, ip, asl #16
 1904 1028 04D08DE2 		add	r1, fp, r1, asr #16
 1905 102c F04FBDE8 		add	r1, r1, r3
 1906 1030 1EFF2FE1 		orr	r0, r0, lr, asl #24
 1907              		mov	r2, r2, lsr #2
 1908              		bl	memcpy
 1909              		.loc 1 404 0
 1910 1034 014084E0 		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 1911 1038 844081E0 		ldrb	r6, [r9, #0]	@ zero_extendqisi2
 1912 103c 0C4084E0 		add	r3, r7, r3, lsr #2
 1913 1040 0C3084E2 		mov	r3, r3, asl #16
 1914 1044 0420D3E5 		.loc 1 400 0
 1915 1048 0300D3E5 		cmp	sl, r6
 1916 104c 05C0D3E5 		.loc 1 404 0
 1917 1050 06E0D3E5 		mov	r7, r3, lsr #16
 1918 1054 020480E1 		.loc 1 401 0
 1919 1058 58309FE5 		mov	r3, sl
 1920 105c 0E20D4E5 		add	sl, sl, #1
 1921 1060 0718A0E1 		.loc 1 400 0
 1922 1064 0C0880E1 		blt	.L165
 1923 1068 41188BE0 		b	.L163
 1924 106c 031081E0 	.L179:
 1925 1070 0E0C80E1 		.align	2
 1926 1074 2221A0E1 	.L178:
 1927 1078 FEFFFFEB 		.word	aciCmdPacketReceived
 1928              		.word	aciCmdPacketSelectLength
 1929 107c 0E30D4E5 		.word	aciListCmdCount
 1930 1080 0060D9E5 		.word	aciListCmd
 1931 1084 233187E0 		.word	aciCmdPacketSelect
 1932 1088 0338A0E1 		.word	aciCmdPacketContentBuffer
 1933              	.LBE18:
 1934 108c 06005AE1 	.LFE10:
 1936 1090 2378A0E1 		.align	2
 1937              		.global	aciSyncVar
 1939 1098 01A08AE2 	aciSyncVar:
 1940              	.LFB9:
 1941 109c B3FFFFBA 		.loc 1 378 0
 1942 10a0 D5FFFFEA 		@ Function supports interworking.
 1943              		@ args = 0, pretend = 0, frame = 0
 1944              		@ frame_needed = 0, uses_anonymous_args = 0
 1945              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1946 10a4 00000000 	.LCFI19:
 1947 10a8 00000000 		.loc 1 378 0
 1948 10ac 00000000 		mov	r9, #0
 1949 10b0 00000000 		ldr	r8, .L191
 1950 10b4 00000000 		mov	sl, r9
 1951 10b8 00000000 	.LVL84:
 1952              	.L181:
 1953              		.loc 1 382 0
 1954              		ldrh	r3, [r8, #0]
 1955              		cmp	r3, #0
 1956              		beq	.L182
 1957              	.LBB19:
 1958              		.loc 1 384 0
 1959              		ble	.L182
 1960              		ldr	r3, .L191+4
 1961              		ldr	r2, .L191+8
 1962              		mov	r6, #0
 1963              		ldr	fp, .L191+12
 1964 10bc F04F2DE9 		add	r7, r3, r9, asl #8
 1965              		add	r4, r2, r9, asl #6
 1966              		mov	r5, r6
 1967 10c0 0090A0E3 	.L185:
 1968 10c4 84809FE5 		.loc 1 385 0
 1969 10c8 09A0A0E1 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1970              		mov	r0, r5, asl #16
 1971              		add	r0, sl, r0, asr #16
 1972              		mov	r2, r2, lsr #2
 1973 10cc B030D8E1 		add	r0, fp, r0
 1974 10d0 000053E3 		ldr	r1, [r7], #4
 1975 10d4 1600000A 		bl	memcpy
 1976              		.loc 1 386 0
 1977              		ldrb	r3, [r4], #1	@ zero_extendqisi2
 1978 10d8 150000DA 		.loc 1 384 0
 1979 10dc 70309FE5 		ldrh	r2, [r8, #0]
 1980 10e0 70209FE5 		.loc 1 386 0
 1981 10e4 0060A0E3 		add	r3, r5, r3, lsr #2
 1982 10e8 6CB09FE5 		.loc 1 384 0
 1983 10ec 097483E0 		add	r6, r6, #1
 1984 10f0 094382E0 		.loc 1 386 0
 1985 10f4 0650A0E1 		mov	r3, r3, asl #16
 1986              		.loc 1 384 0
 1987              		cmp	r2, r6
 1988 10f8 0020D4E5 		.loc 1 386 0
 1989 10fc 0508A0E1 		mov	r5, r3, lsr #16
 1990 1100 40088AE0 		.loc 1 384 0
 1991 1104 2221A0E1 		bgt	.L185
 1992 1108 00008BE0 	.L182:
 1993 110c 041097E4 		add	r9, r9, #1
 1994 1110 FEFFFFEB 	.LBE19:
 1995              		.loc 1 381 0
 1996 1114 0130D4E4 		cmp	r9, #3
 1997              	.LBB20:
 1998 1118 B020D8E1 		.loc 1 384 0
 1999              		add	r8, r8, #2
 2000 111c 233185E0 		add	sl, sl, #560
 2001              	.LBE20:
 2002 1120 016086E2 		.loc 1 381 0
 2003              		bne	.L181
 2004 1124 0338A0E1 		.loc 1 390 0
 2005              		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2006 1128 060052E1 		bx	lr
 2007              	.L192:
 2008 112c 2358A0E1 		.align	2
 2009              	.L191:
 2010 1130 F0FFFFCA 		.word	aciVarPacketNumberOfVars
 2011              		.word	aciVarPacketPtrList
 2012 1134 019089E2 		.word	aciVarPacketTypeList
 2013              		.word	aciVarPacketContentBuffer
 2014              	.LFE9:
 2016              		.align	2
 2017              		.global	aciRxHandleMessage
 2019 1140 23AE8AE2 	aciRxHandleMessage:
 2020              	.LFB13:
 2021              		.loc 1 497 0
 2022 1144 E0FFFF1A 		@ Function supports interworking.
 2023              		@ args = 0, pretend = 0, frame = 1752
 2024 1148 F04FBDE8 		@ frame_needed = 1, uses_anonymous_args = 0
 2025 114c 1EFF2FE1 	.LVL85:
 2026              		mov	ip, sp
 2027              	.LCFI20:
 2028              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 2029 1150 00000000 	.LCFI21:
 2030 1154 00000000 		and	r5, r0, #255
 2031 1158 00000000 		sub	sp, sp, #1744
 2032 115c 00000000 	.LCFI22:
 2033              		.loc 1 508 0
 2034              		sub	r3, r5, #17
 2035              		.loc 1 497 0
 2036              		sub	fp, ip, #4
 2037              	.LCFI23:
 2038              		sub	sp, sp, #8
 2039              	.LCFI24:
 2040              		mov	r1, r1, asl #16
 2041              	.LVL86:
 2042              		.loc 1 508 0
 2043              		cmp	r3, #13
 2044              		.loc 1 497 0
 2045 1160 0DC0A0E1 		.loc 1 497 0
 2046              		mov	r4, r1, lsr #16
 2047 1164 F0DF2DE9 	.LVL87:
 2048              		.loc 1 508 0
 2049 1168 FF5000E2 		bls	.L194
 2050 116c 6DDE4DE2 	.LVL88:
 2051              		.loc 1 509 0
 2052              		sub	r3, r5, #49
 2053 1170 113045E2 		cmp	r3, #13
 2054              		bhi	.L395
 2055 1174 04B04CE2 	.L196:
 2056              	.LBB21:
 2057 1178 08D04DE2 		.loc 1 694 0
 2058              		sub	r3, r5, #48
 2059 117c 0118A0E1 		and	r6, r3, #255
 2060              	.LVL89:
 2061              		.loc 1 695 0
 2062 1180 0D0053E3 		cmp	r6, #2
 2063              		bhi	.L366
 2064              		.loc 1 697 0
 2065 1184 2148A0E1 		cmp	r4, #129
 2066              		.loc 1 699 0
 2067              		addhi	ip, r6, #48
 2068 1188 5000009A 		.loc 1 697 0
 2069              		bhi	.L394
 2070              		.loc 1 705 0
 2071 118c 313045E2 		ldr	r1, .L408
 2072 1190 0D0053E3 		.loc 1 707 0
 2073 1194 8100008A 		sub	r4, r4, #2
 2074              	.LVL90:
 2075              		.loc 1 706 0
 2076              		ldrb	r5, [r1, #1]	@ zero_extendqisi2
 2077 1198 303045E2 	.LVL91:
 2078 119c FF6003E2 		.loc 1 705 0
 2079              		ldrb	lr, [r1, #0]	@ zero_extendqisi2
 2080              		ldr	r3, .L408+4
 2081 11a0 020056E3 		.loc 1 706 0
 2082 11a4 4600008A 		ldr	ip, .L408+8
 2083              		.loc 1 707 0
 2084 11a8 810054E3 		ldr	r9, .L408+12
 2085              		mov	r2, r4
 2086 11ac 30C08682 		.loc 1 709 0
 2087              		add	r4, r4, r4, lsr #31
 2088 11b0 0E01008A 		.loc 1 706 0
 2089              		strb	r5, [ip, r6]
 2090 11b4 981F9FE5 		.loc 1 707 0
 2091              		add	r1, r1, #2
 2092 11b8 024044E2 		add	r0, r9, r6, asl #7
 2093              	.LVL92:
 2094              		.loc 1 705 0
 2095 11bc 0150D1E5 		strb	lr, [r3, r6]
 2096              		.loc 1 709 0
 2097              		mov	r5, r4, asr #1
 2098 11c0 00E0D1E5 		.loc 1 707 0
 2099 11c4 8C3F9FE5 		bl	memcpy
 2100              		.loc 1 709 0
 2101 11c8 8CCF9FE5 		cmp	r5, #0
 2102              		ble	.L366
 2103 11cc 8C9F9FE5 		.loc 1 711 0
 2104 11d0 0420A0E1 		ldr	r4, .L408+16
 2105              		.loc 1 710 0
 2106 11d4 A44F84E0 		ldr	r3, .L408+20
 2107              		.loc 1 711 0
 2108 11d8 0650CCE7 		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 2109              		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2110 11dc 021081E2 		mov	r8, #0
 2111 11e0 860389E0 	.LVL93:
 2112              		.loc 1 710 0
 2113              		ldr	lr, [r3, #0]
 2114 11e4 06E0C3E7 		.loc 1 711 0
 2115              		orr	sl, r1, r2, asl #8
 2116 11e8 C450A0E1 		mov	r3, r8
 2117              		mov	r7, r8
 2118 11ec FEFFFFEB 	.LVL94:
 2119              	.L287:
 2120 11f0 000055E3 		.loc 1 710 0
 2121 11f4 320000DA 		cmp	lr, #0
 2122              		ble	.L291
 2123 11f8 644F9FE5 		.loc 1 711 0
 2124              		add	r3, r3, r6, asl #6
 2125 11fc 643F9FE5 		mov	r3, r3, asl #1
 2126              		ldrh	ip, [r3, r9]
 2127 1200 0010D4E5 		cmp	sl, ip
 2128 1204 0120D4E5 		moveq	r1, #0
 2129 1208 0080A0E3 		moveq	r0, r1
 2130              		beq	.L290
 2131              	.LVL95:
 2132 120c 00E093E5 		.loc 1 714 0
 2133              		mov	r1, #0
 2134 1210 02A481E1 		b	.L289
 2135 1214 0830A0E1 	.LVL96:
 2136 1218 0870A0E1 	.L288:
 2137              		.loc 1 711 0
 2138              		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 2139              		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2140 121c 00005EE3 		orr	r3, r3, r2, asl #8
 2141 1220 140000DA 		cmp	r3, ip
 2142              		beq	.L290
 2143 1224 063383E0 	.L289:
 2144 1228 8330A0E1 		.loc 1 710 0
 2145 122c B9C093E1 		add	r1, r1, #1
 2146 1230 0C005AE1 		.loc 1 711 0
 2147 1234 0010A003 		mov	r0, r1, asl #3
 2148 1238 0100A001 		add	r3, r0, r1
 2149 123c F300000A 		add	r3, r1, r3, asl #1
 2150              		.loc 1 710 0
 2151              		cmp	r1, lr
 2152 1240 0010A0E3 		.loc 1 711 0
 2153 1244 040000EA 		add	r2, r3, r4
 2154              		.loc 1 710 0
 2155              		bne	.L288
 2156              	.L291:
 2157 1248 0430D3E7 		.loc 1 497 0
 2158 124c 0120D2E5 		add	r3, r7, #1
 2159 1250 023483E1 		.loc 1 709 0
 2160 1254 0C0053E1 		cmp	r5, r3
 2161 1258 EC00000A 		.loc 1 497 0
 2162              		mov	r7, r3
 2163              		.loc 1 709 0
 2164 125c 011081E2 		bne	.L287
 2165              		.loc 1 719 0
 2166 1260 8101A0E1 		cmp	r8, #0
 2167 1264 013080E0 		beq	.L366
 2168 1268 833081E0 		.loc 1 720 0
 2169              		ldr	r3, .L408+24
 2170 126c 0E0051E1 		.loc 1 721 0
 2171              		ldr	ip, .L408+28
 2172 1270 042083E0 		.loc 1 720 0
 2173              		mov	lr, r6, asl #1
 2174 1274 F3FFFF1A 		.loc 1 722 0
 2175              		add	r4, r6, #48
 2176              		.loc 1 720 0
 2177 1278 013087E2 		strh	r8, [lr, r3]	@ movhi
 2178              		.loc 1 724 0
 2179 127c 030055E1 		mov	r0, #160
 2180              		.loc 1 723 0
 2181 1280 0370A0E1 		mov	r3, #1
 2182              		.loc 1 724 0
 2183 1284 E4FFFF1A 		sub	r1, fp, #42
 2184              	.LVL97:
 2185 1288 000058E3 		mov	r2, #2
 2186 128c 0C00000A 		.loc 1 721 0
 2187              		strb	r5, [ip, r6]
 2188 1290 D43E9FE5 		.loc 1 722 0
 2189              		strb	r4, [fp, #-42]
 2190 1294 D4CE9FE5 		.loc 1 723 0
 2191              		strb	r3, [fp, #-41]
 2192 1298 86E0A0E1 		.loc 1 724 0
 2193              		bl	aciTxSendPacket
 2194 129c 304086E2 	.LVL98:
 2195              	.L366:
 2196 12a0 B3808EE1 	.LBE21:
 2197              		.loc 1 1014 0
 2198 12a4 A000A0E3 		sub	sp, fp, #40
 2199              		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2200 12a8 0130A0E3 		bx	lr
 2201              	.LVL99:
 2202 12ac 2A104BE2 	.L194:
 2203              	.LBB22:
 2204 12b0 0220A0E3 		.loc 1 598 0
 2205              		sub	r3, r5, #16
 2206 12b4 0650CCE7 		and	r7, r3, #255
 2207              	.LVL100:
 2208 12b8 2A404BE5 		.loc 1 599 0
 2209              		ldr	r3, .L408+168
 2210 12bc 29304BE5 		mov	r2, #0
 2211              		.loc 1 600 0
 2212 12c0 FEFFFFEB 		cmp	r7, #2
 2213              		.loc 1 599 0
 2214              		strb	r2, [r3, #0]
 2215              		.loc 1 600 0
 2216              		bhi	.L366
 2217 12c4 28D04BE2 		.loc 1 602 0
 2218 12c8 F06F9DE8 		cmp	r4, #129
 2219 12cc 1EFF2FE1 		bhi	.L368
 2220              		ldr	r5, .L408+164
 2221              	.LVL101:
 2222              		.loc 1 607 0
 2223              		ldr	r3, .L408+152
 2224 12d0 103045E2 		ldr	r6, .L408+148
 2225 12d4 FF7003E2 		mov	r0, r7, asl #7
 2226              	.LVL102:
 2227              		add	r1, r3, r7, asl #8
 2228 12d8 1C3F9FE5 		add	ip, r5, r7, asl #6
 2229 12dc 0020A0E3 		add	r3, r0, r6
 2230              		mov	r5, r2
 2231 12e0 020057E3 		mov	lr, r2	@ movhi
 2232              	.L260:
 2233 12e4 0020C3E5 		.loc 1 614 0
 2234              		strb	lr, [r2, ip]
 2235 12e8 F5FFFF8A 		add	r2, r2, #1
 2236              		.loc 1 612 0
 2237 12ec 810054E3 		mov	r8, #0	@ movhi
 2238 12f0 BD00008A 		.loc 1 610 0
 2239 12f4 FC5E9FE5 		cmp	r2, #64
 2240              		.loc 1 612 0
 2241              		strh	r8, [r3], #2	@ movhi
 2242 12f8 EC3E9FE5 		.loc 1 613 0
 2243 12fc E46E9FE5 		str	r5, [r1], #4
 2244 1300 8703A0E1 		.loc 1 610 0
 2245              		bne	.L260
 2246 1304 071483E0 		.loc 1 616 0
 2247 1308 07C385E0 		ldr	r1, .L408
 2248 130c 063080E0 		ldr	r3, .L408+160
 2249 1310 0250A0E1 		ldrb	ip, [r1], #1	@ zero_extendqisi2
 2250 1314 02E0A0E1 		.loc 1 617 0
 2251              		sub	r4, r4, #1
 2252              	.LVL103:
 2253 1318 0CE0C2E7 		.loc 1 616 0
 2254 131c 012082E2 		strb	ip, [r3, r7]
 2255              		.loc 1 617 0
 2256 1320 0080A0E3 		mov	r2, r4
 2257              		add	r0, r0, r6
 2258 1324 400052E3 		.loc 1 618 0
 2259              		add	r4, r4, r4, lsr #31
 2260 1328 B280C3E0 		.loc 1 617 0
 2261              		bl	memcpy
 2262 132c 045081E4 		.loc 1 618 0
 2263              		mov	r4, r4, asr #1
 2264 1330 F8FFFF1A 		.loc 1 619 0
 2265              		ldr	r3, .L408+32
 2266 1334 181E9FE5 		.loc 1 618 0
 2267 1338 B43E9FE5 		and	r4, r4, #255
 2268 133c 01C0D1E4 		.loc 1 619 0
 2269              		mov	lr, r7, asl #1
 2270 1340 014044E2 		strh	r4, [lr, r3]	@ movhi
 2271              		.loc 1 620 0
 2272              		ldr	ip, .L408+36
 2273 1344 07C0C3E7 		.loc 1 618 0
 2274              		ldr	r3, .L408+156
 2275 1348 0420A0E1 		.loc 1 620 0
 2276 134c 060080E0 		mov	r5, #1	@ movhi
 2277              		.loc 1 621 0
 2278 1350 A44F84E0 		add	r6, r7, #16
 2279              		.loc 1 623 0
 2280 1354 FEFFFFEB 		mov	r0, #160
 2281              		sub	r1, fp, #42
 2282 1358 C440A0E1 		mov	r2, #2
 2283              		.loc 1 620 0
 2284 135c 103E9FE5 		strh	r5, [lr, ip]	@ movhi
 2285              		.loc 1 618 0
 2286 1360 FF4004E2 		strb	r4, [r3, r7]
 2287              		.loc 1 621 0
 2288 1364 87E0A0E1 		strb	r6, [fp, #-42]
 2289 1368 B3408EE1 		.loc 1 622 0
 2290              		strb	r5, [fp, #-41]
 2291 136c 04CE9FE5 		.loc 1 623 0
 2292              		bl	aciTxSendPacket
 2293 1370 783E9FE5 		b	.L366
 2294              	.LVL104:
 2295 1374 0150A0E3 	.L395:
 2296              	.LBE22:
 2297 1378 106087E2 		.loc 1 510 0
 2298              		sub	r3, r5, #97
 2299 137c A000A0E3 		cmp	r3, #13
 2300 1380 2A104BE2 		bhi	.L396
 2301 1384 0220A0E3 	.L198:
 2302              	.LBB23:
 2303 1388 BC508EE1 		.loc 1 729 0
 2304              		sub	r3, r5, #96
 2305 138c 0740C3E7 		and	r5, r3, #255
 2306              	.LVL105:
 2307 1390 2A604BE5 		.loc 1 731 0
 2308              		cmp	r5, #2
 2309 1394 29504BE5 		bhi	.L366
 2310              		.loc 1 733 0
 2311 1398 FEFFFFEB 		cmp	r4, #129
 2312 139c C8FFFFEA 		.loc 1 735 0
 2313              		addhi	ip, r5, #96
 2314              		.loc 1 733 0
 2315              		bhi	.L394
 2316              		.loc 1 741 0
 2317 13a0 613045E2 		ldr	r1, .L408
 2318 13a4 0D0053E3 		.loc 1 742 0
 2319 13a8 4C00008A 		ldr	r2, .L408+40
 2320              		.loc 1 741 0
 2321              		ldr	r3, .L408+44
 2322              		ldrb	ip, [r1], #1	@ zero_extendqisi2
 2323 13ac 603045E2 		.loc 1 742 0
 2324 13b0 FF5003E2 		sub	r4, r4, #1
 2325              	.LVL106:
 2326              		add	r0, r2, r5, asl #7
 2327 13b4 020055E3 	.LVL107:
 2328 13b8 C1FFFF8A 		mov	r2, r4
 2329              		.loc 1 747 0
 2330 13bc 810054E3 		add	r4, r4, r4, lsr #31
 2331              		.loc 1 741 0
 2332 13c0 60C08582 		strb	ip, [r3, r5]
 2333              		.loc 1 747 0
 2334 13c4 8900008A 		mov	sl, r4, asr #1
 2335              		.loc 1 742 0
 2336 13c8 841D9FE5 		bl	memcpy
 2337              		.loc 1 747 0
 2338 13cc A82D9FE5 		cmp	sl, #0
 2339              		.loc 1 744 0
 2340 13d0 A83D9FE5 		add	r3, r5, #96
 2341 13d4 01C0D1E4 		strb	r3, [fp, #-1784]
 2342              		.loc 1 745 0
 2343 13d8 014044E2 		mov	r2, #1
 2344              		.loc 1 747 0
 2345 13dc 850382E0 		movgt	r3, #0
 2346              		subgt	r9, fp, #1776
 2347 13e0 0420A0E1 		.loc 1 745 0
 2348              		strb	r2, [fp, #-1783]
 2349 13e4 A44F84E0 		.loc 1 747 0
 2350              		movgt	r6, r3
 2351 13e8 05C0C3E7 	.LVL108:
 2352              		movgt	r7, r3
 2353 13ec C4A0A0E1 		subgt	r9, r9, #8
 2354              		ble	.L397
 2355 13f0 FEFFFFEB 	.LVL109:
 2356              	.L307:
 2357 13f4 00005AE3 		.loc 1 748 0
 2358              		ldr	r8, .L408+48
 2359 13f8 603085E2 		ldr	ip, [r8, #0]
 2360 13fc F8364BE5 		cmp	ip, #0
 2361              		ble	.L305
 2362 1400 0120A0E3 		.loc 1 749 0
 2363              		ldr	r8, .L408+52
 2364 1404 0030A0C3 		add	r3, r3, r5, asl #6
 2365 1408 6F9E4BC2 		ldr	lr, .L408+40
 2366              		ldrb	r1, [r8, #1]	@ zero_extendqisi2
 2367 140c F7264BE5 	.LVL110:
 2368              		mov	r3, r3, asl #1
 2369 1410 0360A0C1 		ldrb	r2, [r8, #0]	@ zero_extendqisi2
 2370              		ldrh	r0, [r3, lr]
 2371 1414 0370A0C1 		orr	r2, r2, r1, asl #8
 2372 1418 089049C2 		cmp	r2, r0
 2373 141c E40000DA 		moveq	r1, #0
 2374              		moveq	r4, r1
 2375              		beq	.L304
 2376              		.loc 1 752 0
 2377 1420 5C8D9FE5 		mov	r1, #0
 2378 1424 00C098E5 		b	.L303
 2379 1428 00005CE3 	.LVL111:
 2380 142c 190000DA 	.L302:
 2381              		.loc 1 749 0
 2382 1430 508D9FE5 		ldrb	r3, [r3, r8]	@ zero_extendqisi2
 2383 1434 053383E0 		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2384 1438 3CED9FE5 		orr	r3, r3, r2, asl #8
 2385 143c 0110D8E5 		cmp	r3, r0
 2386              		beq	.L304
 2387 1440 8330A0E1 	.L303:
 2388 1444 0020D8E5 		.loc 1 748 0
 2389 1448 BE0093E1 		add	r1, r1, #1
 2390 144c 012482E1 		.loc 1 749 0
 2391 1450 000052E1 		mov	r4, r1, asl #3
 2392 1454 0010A003 		add	r3, r4, r1
 2393 1458 0140A001 		add	r3, r1, r3, asl #1
 2394 145c 9B00000A 		.loc 1 748 0
 2395              		cmp	r1, ip
 2396 1460 0010A0E3 		.loc 1 749 0
 2397 1464 040000EA 		add	r2, r3, r8
 2398              		.loc 1 748 0
 2399              		bne	.L302
 2400              	.L305:
 2401 1468 0830D3E7 		.loc 1 497 0
 2402 146c 0120D2E5 		add	r3, r7, #1
 2403 1470 023483E1 		.loc 1 747 0
 2404 1474 000053E1 		cmp	sl, r3
 2405 1478 9400000A 		.loc 1 497 0
 2406              		mov	r7, r3
 2407              		.loc 1 747 0
 2408 147c 011081E2 		bne	.L307
 2409              		mov	r2, r6, asl #16
 2410 1480 8141A0E1 		add	r3, r2, #131072
 2411 1484 013084E0 		mov	r3, r3, lsr #16
 2412 1488 833081E0 		mov	r4, r2, lsr #16
 2413              	.L309:
 2414 148c 0C0051E1 		.loc 1 756 0
 2415              		ldr	ip, .L408+56
 2416 1490 082083E0 		.loc 1 762 0
 2417              		mov	r2, r3
 2418 1494 F3FFFF1A 		.loc 1 756 0
 2419              		mov	r3, r5, asl #1
 2420              		strh	r4, [r3, ip]	@ movhi
 2421 1498 013087E2 		.loc 1 757 0
 2422              		ldr	r4, .L408+60
 2423 149c 03005AE1 		.loc 1 762 0
 2424              		mov	r1, r9
 2425 14a0 0370A0E1 	.LVL112:
 2426              		mov	r0, #160
 2427 14a4 DDFFFF1A 		.loc 1 757 0
 2428 14a8 0628A0E1 		strb	sl, [r4, r5]
 2429 14ac 023882E2 		.loc 1 762 0
 2430 14b0 2338A0E1 		bl	aciTxSendPacket
 2431 14b4 2248A0E1 		b	.L366
 2432              	.LVL113:
 2433              	.L396:
 2434 14b8 CCCC9FE5 	.LBE23:
 2435              		.loc 1 511 0
 2436 14bc 0320A0E1 		sub	r3, r5, #65
 2437              		cmp	r3, #13
 2438 14c0 8530A0E1 		bls	.L200
 2439 14c4 BC4083E1 		.loc 1 512 0
 2440              		sub	r3, r5, #113
 2441 14c8 C04C9FE5 		cmp	r3, #13
 2442              		bls	.L202
 2443 14cc 0910A0E1 		.loc 1 515 0
 2444              		cmp	r5, #36
 2445 14d0 A000A0E3 		beq	.L215
 2446              		bhi	.L224
 2447 14d4 05A0C4E7 		cmp	r5, #7
 2448              		beq	.L210
 2449 14d8 FEFFFFEB 		bhi	.L225
 2450 14dc 78FFFFEA 		cmp	r5, #3
 2451              		beq	.L207
 2452              		bhi	.L226
 2453              		cmp	r5, #1
 2454              		beq	.L205
 2455 14e0 413045E2 		cmp	r5, #2
 2456 14e4 0D0053E3 		bne	.L366
 2457 14e8 5000009A 	.LBB24:
 2458              		.loc 1 628 0
 2459 14ec 713045E2 		mov	r1, r1, lsr #17
 2460 14f0 0D0053E3 		cmp	r1, #0
 2461 14f4 6300009A 		ble	.L366
 2462              		add	r1, r1, #1
 2463 14f8 240055E3 		ldr	sl, .L408
 2464 14fc 9400000A 		ldr	r9, .L408+20
 2465 1500 8800008A 		str	r1, [fp, #-1792]
 2466 1504 070055E3 		.loc 1 625 0
 2467 1508 4201000A 		mov	r2, #0
 2468 150c F100008A 		mov	r8, #1
 2469 1510 030055E3 	.LVL114:
 2470 1514 8E02000A 	.L262:
 2471 1518 0802008A 	.LBB25:
 2472 151c 010055E3 		.loc 1 633 0
 2473 1520 DB02000A 		mov	r2, r2, asl #1
 2474 1524 020055E3 		add	r3, r2, sl
 2475 1528 65FFFF1A 		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 2476              		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 2477              		.loc 1 635 0
 2478 152c A118A0E1 		ldr	ip, [r9, #0]
 2479 1530 000051E3 		.loc 1 633 0
 2480 1534 62FFFFDA 		orr	r1, r1, r0, asl #8
 2481 1538 011081E2 		.loc 1 635 0
 2482 153c 10AC9FE5 		cmp	ip, #0
 2483 1540 209C9FE5 		.loc 1 633 0
 2484 1544 00170BE5 		strh	r1, [fp, #-46]	@ movhi
 2485              		.loc 1 635 0
 2486 1548 0020A0E3 		ble	.L263
 2487 154c 0180A0E3 		.loc 1 636 0
 2488              		ldr	r4, .L408+16
 2489              	.LVL115:
 2490              		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 2491              		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2492 1550 8220A0E1 		orr	r3, r3, r2, asl #8
 2493 1554 0A3082E0 		cmp	r1, r3
 2494 1558 0100D3E5 		movne	r6, #0
 2495 155c 0210DAE7 		movne	r0, r6
 2496              		bne	.L267
 2497 1560 00C099E5 	.LVL116:
 2498              		b	.L405
 2499 1564 001481E1 	.L268:
 2500              		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2501 1568 00005CE3 		ldrb	r3, [r0, r4]	@ zero_extendqisi2
 2502              		orr	r3, r3, r2, asl #8
 2503 156c BE124BE1 		cmp	r1, r3
 2504              		beq	.L269
 2505 1570 130000DA 	.L267:
 2506              		.loc 1 635 0
 2507 1574 E84B9FE5 		add	r6, r6, #1
 2508              		add	r0, r0, #19
 2509 1578 0030D4E5 		cmp	r6, ip
 2510 157c 0120D4E5 		.loc 1 636 0
 2511 1580 023483E1 		mov	r7, r6, asl #3
 2512 1584 030051E1 		add	r3, r0, r4
 2513 1588 0060A013 		.loc 1 635 0
 2514 158c 0600A011 		bne	.L268
 2515 1590 0500001A 	.LVL117:
 2516              	.L263:
 2517 1594 960100EA 		.loc 1 674 0
 2518              		mov	r0, #133
 2519 1598 0120D3E5 		sub	r1, fp, #46
 2520 159c 0430D0E7 		mov	r2, #2
 2521 15a0 023483E1 		bl	aciTxSendPacket
 2522 15a4 030051E1 	.L279:
 2523 15a8 9301000A 	.LBE25:
 2524              		.loc 1 628 0
 2525              		ldr	lr, [fp, #-1792]
 2526 15ac 016086E2 	.LBB26:
 2527 15b0 130080E2 	.LBB27:
 2528 15b4 0C0056E1 		.loc 1 671 0
 2529              		mov	r2, r8
 2530 15b8 8671A0E1 		add	r8, r8, #1
 2531 15bc 043080E0 	.LBE27:
 2532              	.LBE26:
 2533 15c0 F4FFFF1A 		.loc 1 628 0
 2534              		cmp	lr, r8
 2535              		bne	.L262
 2536              		b	.L366
 2537 15c4 8500A0E3 	.LVL118:
 2538 15c8 2E104BE2 	.L368:
 2539 15cc 0220A0E3 		.loc 1 604 0
 2540 15d0 FEFFFFEB 		add	ip, r7, #16
 2541              	.LVL119:
 2542              	.L394:
 2543              		.loc 1 605 0
 2544 15d4 00E71BE5 		mvn	r3, #14
 2545              		.loc 1 606 0
 2546              		mov	r0, #160
 2547              	.LVL120:
 2548 15d8 0820A0E1 		sub	r1, fp, #42
 2549 15dc 018088E2 		mov	r2, #2
 2550              		.loc 1 604 0
 2551              		strb	ip, [fp, #-42]
 2552              		.loc 1 605 0
 2553 15e0 08005EE1 		strb	r3, [fp, #-41]
 2554 15e4 D9FFFF1A 		.loc 1 606 0
 2555 15e8 35FFFFEA 		bl	aciTxSendPacket
 2556              		b	.L366
 2557              	.LVL121:
 2558              	.L290:
 2559 15ec 10C087E2 		.loc 1 713 0
 2560              		add	r3, r0, r1
 2561              		add	r3, r1, r3, asl #1
 2562              		add	r3, r3, r4
 2563 15f0 0E30E0E3 		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 2564              		add	r2, r8, r2, lsr #2
 2565 15f4 A000A0E3 		mov	r2, r2, asl #16
 2566              		mov	r8, r2, lsr #16
 2567 15f8 2A104BE2 		b	.L291
 2568 15fc 0220A0E3 	.LVL122:
 2569              	.L200:
 2570 1600 2AC04BE5 		.loc 1 769 0
 2571              		sub	r3, r5, #64
 2572 1604 29304BE5 		and	r5, r3, #255
 2573              	.LVL123:
 2574 1608 FEFFFFEB 		.loc 1 772 0
 2575 160c 2CFFFFEA 		cmp	r5, #2
 2576              		bhi	.L366
 2577              		.loc 1 774 0
 2578              		ldr	r2, .L408+24
 2579 1610 013080E0 		mov	r3, r5, asl #1
 2580 1614 833081E0 		ldrh	r2, [r3, r2]
 2581 1618 043083E0 		sub	r1, r4, #1
 2582 161c 0E20D3E5 		cmp	r2, r1
 2583 1620 222188E0 		beq	.L399
 2584 1624 0228A0E1 		.loc 1 787 0
 2585 1628 2288A0E1 		ldr	r2, .L408+64
 2586 162c 11FFFFEA 		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 2587              		add	r3, r3, #1
 2588              		strb	r3, [r2, r5]
 2589              		.loc 1 786 0
 2590 1630 403045E2 		ldr	r3, .L408+68
 2591 1634 FF5003E2 		mov	r1, #0
 2592              		strb	r1, [r3, r5]
 2593              		b	.L366
 2594 1638 020055E3 	.LVL124:
 2595 163c 20FFFF8A 	.L229:
 2596              	.LBE24:
 2597 1640 242B9FE5 		.loc 1 515 0
 2598 1644 8530A0E1 		cmp	r5, #96
 2599 1648 B22093E1 		beq	.L198
 2600 164c 011044E2 		cmp	r5, #112
 2601 1650 010052E1 		bne	.L366
 2602 1654 4300000A 	.L202:
 2603              	.LBB28:
 2604 1658 342B9FE5 		.loc 1 894 0
 2605 165c 0530D2E7 		sub	r3, r5, #112
 2606 1660 013083E2 		and	r5, r3, #255
 2607 1664 0530C2E7 	.LVL125:
 2608              		.loc 1 895 0
 2609 1668 283B9FE5 		cmp	r5, #2
 2610 166c 0010A0E3 		bhi	.L366
 2611 1670 0510C3E7 		.loc 1 897 0
 2612 1674 12FFFFEA 		ldr	ip, .L408
 2613              		ldr	r3, .L408+44
 2614              		ldrb	r2, [ip, #0]	@ zero_extendqisi2
 2615              		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2616              		cmp	r1, r2
 2617 1678 600055E3 		beq	.L371
 2618 167c 4AFFFF0A 		.loc 1 908 0
 2619 1680 700055E3 		ldr	r2, .L408+72
 2620 1684 0EFFFF1A 		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 2621              		add	r3, r3, #1
 2622              		strb	r3, [r2, r5]
 2623              		.loc 1 907 0
 2624 1688 703045E2 		ldr	r3, .L408+76
 2625 168c FF5003E2 		mov	r1, #0
 2626              		strb	r1, [r3, r5]
 2627              		b	.L366
 2628 1690 020055E3 	.LVL126:
 2629 1694 0AFFFF8A 	.L304:
 2630              		.loc 1 750 0
 2631 1698 B4CA9FE5 		add	r4, r4, r1
 2632 169c DC3A9FE5 	.LVL127:
 2633 16a0 0020DCE5 		add	r4, r1, r4, asl #1
 2634 16a4 0510D3E7 		add	r4, r4, r8
 2635 16a8 020051E1 		add	r3, r4, #12
 2636 16ac C300000A 		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 2637              		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 2638 16b0 E42A9FE5 	.LVL128:
 2639 16b4 0530D2E7 		ldrb	ip, [r3, #5]	@ zero_extendqisi2
 2640 16b8 013083E2 		ldrb	lr, [r3, #6]	@ zero_extendqisi2
 2641 16bc 0530C2E7 		orr	r1, r1, r2, asl #8
 2642              		mov	r0, r6, asl #16
 2643 16c0 D83A9FE5 		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 2644 16c4 0010A0E3 		orr	r1, r1, ip, asl #16
 2645 16c8 0510C3E7 		add	r0, r9, r0, asr #16
 2646 16cc FCFEFFEA 		orr	r1, r1, lr, asl #24
 2647              		add	r0, r0, #2
 2648              		mov	r2, r2, lsr #2
 2649              		bl	memcpy
 2650 16d0 014084E0 		.loc 1 751 0
 2651              		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 2652 16d4 844081E0 		add	r3, r6, r3, lsr #2
 2653 16d8 084084E0 		mov	r3, r3, asl #16
 2654 16dc 0C3084E2 		mov	r6, r3, lsr #16
 2655 16e0 0420D3E5 		b	.L305
 2656 16e4 0310D3E5 	.LVL129:
 2657              	.L224:
 2658 16e8 05C0D3E5 	.LBE28:
 2659 16ec 06E0D3E5 		.loc 1 515 0
 2660 16f0 021481E1 		cmp	r5, #137
 2661 16f4 0608A0E1 		beq	.L217
 2662 16f8 0E20D4E5 		bhi	.L228
 2663 16fc 0C1881E1 		cmp	r5, #64
 2664 1700 400889E0 		beq	.L200
 2665 1704 0E1C81E1 		bhi	.L229
 2666 1708 020080E2 		cmp	r5, #37
 2667 170c 2221A0E1 		beq	.L216
 2668 1710 FEFFFFEB 		cmp	r5, #48
 2669              		bne	.L366
 2670 1714 0E30D4E5 		b	.L196
 2671 1718 233186E0 	.L215:
 2672 171c 0338A0E1 	.LBB29:
 2673 1720 2368A0E1 		.loc 1 930 0
 2674 1724 5BFFFFEA 		mov	r0, #162
 2675              		ldr	r1, .L408+80
 2676              		mov	r2, #2
 2677              		bl	aciTxSendPacket
 2678              		b	.L366
 2679 1728 890055E3 	.LVL130:
 2680 172c 8000000A 	.L399:
 2681 1730 2400008A 		.loc 1 776 0
 2682 1734 400055E3 		ldr	r3, .L408+84
 2683 1738 BCFFFF0A 		add	r0, r5, r5, asl #2
 2684 173c CDFFFF8A 	.LVL131:
 2685 1740 250055E3 		add	r0, r0, r0, asl #2
 2686 1744 3703000A 		add	r0, r3, r0, asl #4
 2687 1748 300055E3 		ldr	r1, .L408+88
 2688 174c DCFEFF1A 		bl	memcpy
 2689 1750 90FEFFEA 		.loc 1 778 0
 2690              		ldr	r3, .L408+8
 2691              		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 2692              		.loc 1 777 0
 2693 1754 A200A0E3 		ldr	r3, .L408+92
 2694 1758 441A9FE5 		mov	r4, #1
 2695 175c 0220A0E3 	.LVL132:
 2696 1760 FEFFFFEB 		.loc 1 778 0
 2697 1764 D6FEFFEA 		cmp	r2, #0
 2698              		.loc 1 777 0
 2699              		strb	r4, [r3, r5]
 2700              		.loc 1 778 0
 2701 1768 383A9FE5 		bne	.L400
 2702 176c 050185E0 	.L315:
 2703              		.loc 1 783 0
 2704 1770 000180E0 		ldr	r2, .L408+64
 2705 1774 000283E0 		.loc 1 782 0
 2706 1778 2C1A9FE5 		ldr	r1, .L408+68
 2707 177c FEFFFFEB 		.loc 1 783 0
 2708              		mov	r3, #0
 2709 1780 D4399FE5 		strb	r3, [r2, r5]
 2710 1784 0520D3E7 		.loc 1 782 0
 2711              		strb	r4, [r1, r5]
 2712 1788 203A9FE5 		b	.L366
 2713 178c 0140A0E3 	.LVL133:
 2714              	.L397:
 2715              		sub	r9, fp, #1776
 2716 1790 000052E3 		.loc 1 749 0
 2717              		mov	r4, #0
 2718 1794 0540C3E7 		mov	r3, #2
 2719              		sub	r9, r9, #8
 2720 1798 C200001A 		b	.L309
 2721              	.LVL134:
 2722              	.L228:
 2723 179c F0299FE5 	.LBE29:
 2724              		.loc 1 515 0
 2725 17a0 F0199FE5 		cmp	r5, #165
 2726              		beq	.L220
 2727 17a4 0030A0E3 		bhi	.L230
 2728 17a8 0530C2E7 		cmp	r5, #163
 2729              		beq	.L218
 2730 17ac 0540C1E7 		cmp	r5, #164
 2731 17b0 C3FEFFEA 		bne	.L366
 2732              	.LBB30:
 2733              		.loc 1 988 0
 2734 17b4 6F9E4BE2 		cmp	r4, #1
 2735              		bls	.L366
 2736 17b8 0040A0E3 	.LBB31:
 2737 17bc 0230A0E3 		.loc 1 993 0
 2738 17c0 089049E2 		ldr	r3, .L408+96
 2739 17c4 3BFFFFEA 		ldr	lr, [r3, #0]
 2740              		.loc 1 992 0
 2741              		ldr	r2, .L408
 2742              		.loc 1 993 0
 2743              		cmp	lr, #0
 2744 17c8 A50055E3 		.loc 1 992 0
 2745 17cc EC00000A 		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 2746 17d0 CB00008A 		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 2747 17d4 A30055E3 		.loc 1 993 0
 2748 17d8 EB02000A 		ble	.L366
 2749 17dc A40055E3 		.loc 1 994 0
 2750 17e0 B7FEFF1A 		ldr	r9, .L408+100
 2751              		orr	r3, r1, r3, asl #8
 2752              		ldrb	r2, [r9, #0]	@ zero_extendqisi2
 2753 17e4 010054E3 		ldrb	r1, [r9, #1]	@ zero_extendqisi2
 2754 17e8 B5FEFF9A 		mov	r3, r3, asl #16
 2755              		orr	r2, r2, r1, asl #8
 2756              		mov	ip, r3, asr #16
 2757 17ec C0399FE5 		cmp	r2, ip
 2758 17f0 00E093E5 		movne	r1, #0
 2759              	.LVL135:
 2760 17f4 58299FE5 		movne	r0, r1
 2761              		beq	.L401
 2762 17f8 00005EE3 	.LVL136:
 2763              	.L363:
 2764 17fc 0010D2E5 		.loc 1 993 0
 2765 1800 0130D2E5 		add	r1, r1, #1
 2766              		add	r0, r0, #19
 2767 1804 AEFEFFDA 		cmp	lr, r1
 2768              		.loc 1 994 0
 2769 1808 A8999FE5 		mov	r4, r1, asl #3
 2770 180c 033481E1 	.LVL137:
 2771 1810 0020D9E5 		add	r3, r0, r9
 2772 1814 0110D9E5 		.loc 1 993 0
 2773 1818 0338A0E1 		beq	.L366
 2774 181c 012482E1 		.loc 1 994 0
 2775 1820 43C8A0E1 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2776 1824 0C0052E1 		ldrb	r3, [r0, r9]	@ zero_extendqisi2
 2777 1828 0010A013 		orr	r3, r3, r2, asl #8
 2778              		cmp	ip, r3
 2779 182c 0100A011 		bne	.L363
 2780 1830 D202000A 	.LVL138:
 2781              	.L365:
 2782              		.loc 1 1003 0
 2783              		add	r4, r4, r1
 2784 1834 011081E2 	.LVL139:
 2785 1838 130080E2 		add	r4, r1, r4, asl #1
 2786 183c 01005EE1 		add	r5, r4, r9
 2787              	.LVL140:
 2788 1840 8141A0E1 		sub	r6, fp, #760
 2789              		mov	r1, r5
 2790 1844 093080E0 	.LVL141:
 2791              		mov	r0, r6
 2792 1848 9DFEFF0A 	.LVL142:
 2793              		mov	r2, #2
 2794 184c 0120D3E5 		bl	memcpy
 2795 1850 0930D0E7 		.loc 1 1005 0
 2796 1854 023483E1 		add	r3, r5, #12
 2797 1858 03005CE1 		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 2798 185c F4FFFF1A 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 2799              		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 2800              		ldrb	ip, [r3, #6]	@ zero_extendqisi2
 2801              		orr	r1, r1, r2, asl #8
 2802 1860 014084E0 		ldrb	r2, [r5, #14]	@ zero_extendqisi2
 2803              		orr	r1, r1, r0, asl #16
 2804 1864 844081E0 		.loc 1 1004 0
 2805 1868 095084E0 		mov	r3, r2
 2806              		.loc 1 1005 0
 2807 186c BE6F4BE2 		orr	r1, r1, ip, asl #24
 2808 1870 0510A0E1 		mov	r2, r2, lsr #2
 2809              		add	r0, r6, #3
 2810 1874 0600A0E1 		.loc 1 1004 0
 2811              		strb	r3, [fp, #-758]
 2812 1878 0220A0E3 		.loc 1 1005 0
 2813 187c FEFFFFEB 		bl	memcpy
 2814              		.loc 1 1006 0
 2815 1880 0C3085E2 		ldrb	r2, [r5, #14]	@ zero_extendqisi2
 2816 1884 0420D3E5 		mov	r2, r2, lsr #2
 2817 1888 0310D3E5 		mov	r1, r6
 2818 188c 0500D3E5 		add	r2, r2, #3
 2819 1890 06C0D3E5 		mov	r0, #164
 2820 1894 021481E1 		.loc 1 1004 0
 2821 1898 0E20D5E5 		add	r4, r4, r9
 2822 189c 001881E1 		.loc 1 1006 0
 2823              		bl	aciTxSendPacket
 2824 18a0 0230A0E1 		b	.L366
 2825              	.LVL143:
 2826 18a4 0C1C81E1 	.L225:
 2827 18a8 2221A0E1 	.LBE31:
 2828 18ac 030086E2 	.LBE30:
 2829              		.loc 1 515 0
 2830 18b0 F6324BE5 		cmp	r5, #33
 2831              		beq	.L212
 2832 18b4 FEFFFFEB 		bhi	.L227
 2833              		cmp	r5, #16
 2834 18b8 0E20D5E5 		beq	.L194
 2835 18bc 2221A0E1 		cmp	r5, #32
 2836 18c0 0610A0E1 		bne	.L366
 2837 18c4 032082E2 	.LBB32:
 2838 18c8 A400A0E3 		.loc 1 913 0
 2839              		ldr	r3, .L408+168
 2840 18cc 094084E0 		mov	r2, #0
 2841              		.loc 1 915 0
 2842 18d0 FEFFFFEB 		cmp	r4, #6
 2843 18d4 7AFEFFEA 		.loc 1 913 0
 2844              		strb	r2, [r3, #0]
 2845              		.loc 1 915 0
 2846              		bne	.L366
 2847              		ldr	r1, .L408+88
 2848              		ldr	r0, .L408+104
 2849 18d8 210055E3 		add	ip, r1, #6
 2850 18dc 8300000A 	.L351:
 2851 18e0 7700008A 		.loc 1 918 0
 2852 18e4 100055E3 		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 2853 18e8 78FEFF0A 		ldrb	r3, [r1, #-1]	@ zero_extendqisi2
 2854 18ec 200055E3 		add	r1, r1, #2
 2855 18f0 73FEFF1A 		orr	r3, r3, r2, asl #8
 2856              		.loc 1 917 0
 2857              		cmp	r1, ip
 2858 18f4 00399FE5 		.loc 1 918 0
 2859 18f8 0020A0E3 		strh	r3, [r0], #2	@ movhi
 2860              		.loc 1 917 0
 2861 18fc 060054E3 		bne	.L351
 2862              		b	.L366
 2863 1900 0020C3E5 	.LVL144:
 2864              	.L217:
 2865 1904 6EFEFF1A 		.loc 1 865 0
 2866 1908 9C189FE5 		cmp	r4, #2
 2867 190c A8089FE5 		bne	.L366
 2868 1910 06C081E2 	.LBB33:
 2869              		.loc 1 870 0
 2870              		ldr	r1, .L408
 2871 1914 0020D1E5 		.loc 1 872 0
 2872 1918 013051E5 		ldr	r3, .L408+48
 2873 191c 021081E2 		.loc 1 870 0
 2874 1920 023483E1 		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 2875              		.loc 1 872 0
 2876 1924 0C0051E1 		ldr	ip, [r3, #0]
 2877              		.loc 1 870 0
 2878 1928 B230C0E0 		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2879              		.loc 1 872 0
 2880 192c F8FFFF1A 		cmp	ip, #0
 2881 1930 63FEFFEA 		.loc 1 870 0
 2882              		orr	r0, r0, r2, asl #8
 2883              		strh	r0, [fp, #-46]	@ movhi
 2884              	.LVL145:
 2885 1934 020054E3 		.loc 1 872 0
 2886 1938 61FEFF1A 		ble	.L367
 2887              		.loc 1 873 0
 2888              		ldr	r8, .L408+52
 2889 193c 10189FE5 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 2890              		ldrb	r2, [r8, #1]	@ zero_extendqisi2
 2891 1940 3C389FE5 		orr	r3, r3, r2, asl #8
 2892              		cmp	r3, r0
 2893 1944 0000D1E5 		moveq	r1, #0
 2894              	.LVL146:
 2895 1948 00C093E5 		moveq	r4, r1
 2896              	.LVL147:
 2897 194c 0120D1E5 		beq	.L343
 2898              	.LVL148:
 2899 1950 00005CE3 		.loc 1 882 0
 2900              		mov	r1, #0
 2901 1954 020480E1 		b	.L345
 2902 1958 BE024BE1 	.LVL149:
 2903              	.L344:
 2904              		.loc 1 873 0
 2905 195c 150000DA 		ldrb	r3, [r3, r8]	@ zero_extendqisi2
 2906              		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2907 1960 20889FE5 		orr	r3, r3, r2, asl #8
 2908 1964 0030D8E5 		cmp	r0, r3
 2909 1968 0120D8E5 		beq	.L343
 2910 196c 023483E1 	.L345:
 2911 1970 000053E1 		.loc 1 872 0
 2912 1974 0010A003 		add	r1, r1, #1
 2913              		.loc 1 873 0
 2914 1978 0140A001 		mov	r4, r1, asl #3
 2915              		add	r3, r4, r1
 2916 197c C602000A 		add	r3, r1, r3, asl #1
 2917              		.loc 1 872 0
 2918              		cmp	ip, r1
 2919 1980 0010A0E3 		.loc 1 873 0
 2920 1984 040000EA 		add	r2, r3, r8
 2921              		.loc 1 872 0
 2922              		bne	.L344
 2923              	.LVL150:
 2924 1988 0830D3E7 	.L367:
 2925 198c 0120D2E5 		sub	r6, fp, #113
 2926 1990 023483E1 		b	.L339
 2927 1994 030050E1 	.LVL151:
 2928 1998 BF02000A 	.L371:
 2929              	.LBE33:
 2930              		.loc 1 899 0
 2931 199c 011081E2 		ldr	r3, .L408+108
 2932              		add	r0, r5, r5, asl #2
 2933 19a0 8141A0E1 	.LVL152:
 2934 19a4 013084E0 		add	r0, r0, r0, asl #2
 2935 19a8 833081E0 		add	r1, ip, #1
 2936              		sub	r2, r4, #1
 2937 19ac 01005CE1 		add	r0, r3, r0, asl #4
 2938              		bl	memcpy
 2939 19b0 082083E0 		.loc 1 900 0
 2940              		ldr	r3, .L408+112
 2941 19b4 F3FFFF1A 		mov	r4, #1
 2942              	.LVL153:
 2943              		.loc 1 901 0
 2944 19b8 71604BE2 		add	ip, r5, #112
 2945 19bc CE0200EA 		.loc 1 902 0
 2946              		sub	r1, fp, #42
 2947              		mov	r2, r4
 2948              		.loc 1 900 0
 2949              		strb	r4, [r3, r5]
 2950 19c0 F8379FE5 		.loc 1 902 0
 2951 19c4 050185E0 		mov	r0, #160
 2952              		.loc 1 901 0
 2953 19c8 000180E0 		strb	ip, [fp, #-42]
 2954 19cc 01108CE2 		.loc 1 902 0
 2955 19d0 012044E2 		bl	aciTxSendPacket
 2956 19d4 000283E0 		.loc 1 904 0
 2957 19d8 FEFFFFEB 		ldr	r3, .L408+72
 2958              		.loc 1 903 0
 2959 19dc E0379FE5 		ldr	r2, .L408+76
 2960 19e0 0140A0E3 		.loc 1 904 0
 2961              		mov	r1, #0
 2962              		strb	r1, [r3, r5]
 2963 19e4 70C085E2 		.loc 1 903 0
 2964              		strb	r4, [r2, r5]
 2965 19e8 2A104BE2 		b	.L366
 2966 19ec 0420A0E1 	.LVL154:
 2967              	.L210:
 2968 19f0 0540C3E7 	.LBB34:
 2969              		.loc 1 847 0
 2970 19f4 A000A0E3 		ldr	r3, .L408+48
 2971              		ldr	r0, [r3, #0]
 2972 19f8 2AC04BE5 		mov	r6, r0, asl #1
 2973              		mov	r3, r6, asl #1
 2974 19fc FEFFFFEB 		add	r3, r3, #8
 2975              	.LBE34:
 2976 1a00 94379FE5 		.loc 1 793 0
 2977              		mov	r7, sp
 2978 1a04 94279FE5 	.LBB35:
 2979              		.loc 1 847 0
 2980 1a08 0010A0E3 		rsb	sp, r3, sp
 2981 1a0c 0510C3E7 		mov	r2, sp, lsr #2
 2982              		mov	ip, r2, asl #2
 2983 1a10 0540C2E7 		.loc 1 854 0
 2984 1a14 2AFEFFEA 		cmp	r0, #0
 2985              		.loc 1 852 0
 2986              		strh	r0, [ip, #0]	@ movhi
 2987              		.loc 1 854 0
 2988              		ble	.L335
 2989 1a18 64379FE5 		mov	r4, #0
 2990 1a1c 000093E5 	.LVL155:
 2991 1a20 8060A0E1 		ldr	r8, .L408+52
 2992 1a24 8630A0E1 		mov	r5, #1
 2993 1a28 083083E2 	.LVL156:
 2994              		mov	lr, r4
 2995              	.LVL157:
 2996 1a2c 0D70A0E1 	.L337:
 2997              		.loc 1 855 0
 2998              		add	r3, lr, r8
 2999 1a30 0DD063E0 		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 3000 1a34 2D21A0E1 		ldrb	r2, [lr, r8]	@ zero_extendqisi2
 3001 1a38 02C1A0E1 		mov	r3, r5, asl #16
 3002              		.loc 1 854 0
 3003 1a3c 000050E3 		add	r4, r4, #1
 3004              		.loc 1 855 0
 3005 1a40 B000CCE1 		orr	r2, r2, r1, asl #8
 3006              		mov	r3, r3, lsr #15
 3007 1a44 0F0000DA 		.loc 1 854 0
 3008 1a48 0040A0E3 		cmp	r0, r4
 3009              		.loc 1 855 0
 3010 1a4c 34879FE5 		strh	r2, [r3, ip]	@ movhi
 3011 1a50 0150A0E3 		.loc 1 854 0
 3012              		add	lr, lr, #19
 3013 1a54 04E0A0E1 		add	r5, r5, #1
 3014              		bne	.L337
 3015              	.LVL158:
 3016              	.L335:
 3017 1a58 08308EE0 		.loc 1 859 0
 3018 1a5c 0110D3E5 		add	r2, r6, #2
 3019 1a60 0820DEE7 		mov	r2, r2, asl #16
 3020 1a64 0538A0E1 		mov	r1, ip
 3021              	.LVL159:
 3022 1a68 014084E2 		mov	r2, r2, lsr #16
 3023              		mov	r0, #134
 3024 1a6c 012482E1 		bl	aciTxSendPacket
 3025 1a70 A337A0E1 	.LVL160:
 3026              		mov	sp, r7
 3027 1a74 040050E1 		b	.L366
 3028              	.LVL161:
 3029 1a78 BC2083E1 	.L400:
 3030              	.LBE35:
 3031 1a7c 13E08EE2 		.loc 1 779 0
 3032 1a80 015085E2 		add	r3, r5, #80
 3033 1a84 F3FFFF1A 		.loc 1 780 0
 3034              		mov	r0, #160
 3035              		sub	r1, fp, #42
 3036              		mov	r2, r4
 3037 1a88 022086E2 		.loc 1 779 0
 3038 1a8c 0228A0E1 		strb	r3, [fp, #-42]
 3039 1a90 0C10A0E1 		.loc 1 780 0
 3040              		bl	aciTxSendPacket
 3041 1a94 2228A0E1 		b	.L315
 3042 1a98 8600A0E3 	.LVL162:
 3043 1a9c FEFFFFEB 	.L227:
 3044              	.LBE32:
 3045 1aa0 07D0A0E1 		.loc 1 515 0
 3046 1aa4 06FEFFEA 		cmp	r5, #34
 3047              		beq	.L213
 3048              		cmp	r5, #35
 3049              		bne	.L366
 3050              	.LBB36:
 3051 1aa8 503085E2 		.loc 1 933 0
 3052              		cmp	r4, #2
 3053 1aac A000A0E3 		bne	.L366
 3054 1ab0 2A104BE2 		.loc 1 934 0
 3055 1ab4 0420A0E1 		mov	r2, r4
 3056              		ldr	r1, .L408
 3057 1ab8 2A304BE5 		ldr	r0, .L408+80
 3058              		bl	memcpy
 3059 1abc FEFFFFEB 		b	.L366
 3060 1ac0 35FFFFEA 	.LVL163:
 3061              	.L212:
 3062              		.loc 1 923 0
 3063              		mov	r0, #161
 3064              		ldr	r1, .L408+104
 3065 1ac4 220055E3 		mov	r2, #6
 3066 1ac8 3A02000A 		bl	aciTxSendPacket
 3067 1acc 230055E3 		b	.L366
 3068 1ad0 FBFDFF1A 	.LVL164:
 3069              	.L230:
 3070              	.LBE36:
 3071 1ad4 020054E3 		.loc 1 515 0
 3072 1ad8 F9FDFF1A 		cmp	r5, #242
 3073              		beq	.L222
 3074 1adc 0420A0E1 		cmp	r5, #243
 3075 1ae0 6C169FE5 		beq	.L223
 3076 1ae4 B8069FE5 		cmp	r5, #240
 3077 1ae8 FEFFFFEB 		bne	.L366
 3078 1aec F4FDFFEA 	.LBB37:
 3079              		.loc 1 519 0
 3080              		mov	r2, #0
 3081              		.loc 1 520 0
 3082 1af0 A100A0E3 		mov	r1, #64
 3083 1af4 C0169FE5 		.loc 1 521 0
 3084 1af8 0620A0E3 		mov	r0, #32
 3085 1afc FEFFFFEB 		.loc 1 518 0
 3086 1b00 EFFDFFEA 		mov	r3, #1
 3087              		strb	r3, [fp, #-83]
 3088              		.loc 1 522 0
 3089              		strb	r0, [fp, #-79]
 3090              		.loc 1 523 0
 3091 1b04 F20055E3 		add	r3, r3, #2
 3092 1b08 3C02000A 		.loc 1 524 0
 3093 1b0c F30055E3 		strb	r1, [fp, #-77]
 3094 1b10 2E02000A 		.loc 1 519 0
 3095 1b14 F00055E3 		strb	r2, [fp, #-82]
 3096 1b18 E9FDFF1A 		.loc 1 520 0
 3097              		strb	r1, [fp, #-80]
 3098              		.loc 1 521 0
 3099 1b1c 0020A0E3 		strb	r0, [fp, #-81]
 3100              		.loc 1 525 0
 3101 1b20 4010A0E3 		strb	r2, [fp, #-76]
 3102              		strb	r2, [fp, #-75]
 3103 1b24 2000A0E3 		.loc 1 523 0
 3104              		strb	r3, [fp, #-78]
 3105 1b28 0130A0E3 		.loc 1 525 0
 3106 1b2c 53304BE5 		mov	ip, r2
 3107              		sub	r3, fp, #75
 3108 1b30 4F004BE5 	.L234:
 3109              		.loc 1 527 0
 3110 1b34 023083E2 		add	ip, ip, #1
 3111              		.loc 1 526 0
 3112 1b38 4D104BE5 		cmp	ip, #8
 3113              		.loc 1 527 0
 3114 1b3c 52204BE5 		strb	r2, [r3, #1]
 3115              		strb	r2, [r3, #2]!
 3116 1b40 50104BE5 		.loc 1 526 0
 3117              		bne	.L234
 3118 1b44 51004BE5 		.loc 1 528 0
 3119              		mov	r0, #241
 3120 1b48 4C204BE5 		sub	r1, fp, #83
 3121 1b4c 4B204BE5 		mov	r2, #25
 3122              		bl	aciTxSendPacket
 3123 1b50 4E304BE5 		b	.L366
 3124              	.LVL165:
 3125 1b54 02C0A0E1 	.L220:
 3126 1b58 4B304BE2 	.LBB38:
 3127              		.loc 1 939 0
 3128              		ldr	r3, .L408+116
 3129 1b5c 01C08CE2 		ldrh	r3, [r3, #0]
 3130              		.loc 1 940 0
 3131 1b60 08005CE3 		sub	r0, fp, #56
 3132              		ldr	r1, .L408+120
 3133 1b64 0120C3E5 		mov	r2, #2
 3134 1b68 0220E3E5 		.loc 1 939 0
 3135              		strh	r3, [fp, #-58]	@ movhi
 3136 1b6c FAFFFF1A 		.loc 1 940 0
 3137              		bl	memcpy
 3138 1b70 F100A0E3 		.loc 1 941 0
 3139 1b74 53104BE2 		sub	r0, fp, #54
 3140 1b78 1920A0E3 		ldr	r1, .L408+124
 3141 1b7c FEFFFFEB 		mov	r2, #2
 3142 1b80 CFFDFFEA 		bl	memcpy
 3143              		.loc 1 942 0
 3144              		sub	r0, fp, #52
 3145              		ldr	r1, .L408+96
 3146              		mov	r2, #2
 3147 1b84 3C369FE5 		bl	memcpy
 3148 1b88 B030D3E1 		.loc 1 943 0
 3149              		sub	r0, fp, #50
 3150 1b8c 38004BE2 		ldr	r1, .L408+20
 3151 1b90 34169FE5 		mov	r2, #2
 3152 1b94 0220A0E3 		bl	memcpy
 3153              		.loc 1 944 0
 3154 1b98 BA334BE1 		sub	r0, fp, #48
 3155              		mov	r2, #2
 3156 1b9c FEFFFFEB 		ldr	r1, .L408+48
 3157              		bl	memcpy
 3158 1ba0 36004BE2 		.loc 1 945 0
 3159 1ba4 24169FE5 		mov	r0, r5
 3160 1ba8 0220A0E3 		sub	r1, fp, #58
 3161 1bac FEFFFFEB 		mov	r2, #12
 3162              		bl	aciTxSendPacket
 3163 1bb0 34004BE2 		b	.L366
 3164 1bb4 F8159FE5 	.LVL166:
 3165 1bb8 0220A0E3 	.L405:
 3166 1bbc FEFFFFEB 	.LBE38:
 3167              	.LBB39:
 3168 1bc0 32004BE2 		.loc 1 635 0
 3169 1bc4 9C159FE5 		mov	r6, #0
 3170 1bc8 0220A0E3 		mov	r7, r6
 3171 1bcc FEFFFFEB 	.LVL167:
 3172              	.L269:
 3173 1bd0 30004BE2 	.LBB40:
 3174 1bd4 0220A0E3 		.loc 1 647 0
 3175 1bd8 A4159FE5 		add	r3, r7, r6
 3176 1bdc FEFFFFEB 		add	r3, r6, r3, asl #1
 3177              		add	r3, r3, r4
 3178 1be0 0500A0E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3179 1be4 3A104BE2 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3180 1be8 0C20A0E3 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3181 1bec FEFFFFEB 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3182 1bf0 B3FDFFEA 		orr	r2, r2, r1, asl #8
 3183              		orr	r2, r2, ip, asl #16
 3184              		orr	r5, r2, r0, asl #24
 3185              	.LVL168:
 3186              		mov	r0, r5
 3187              		bl	strlen
 3188 1bf4 0060A0E3 		cmp	r0, #32
 3189 1bf8 0670A0E1 		bls	.L270
 3190              	.LVL169:
 3191              		.loc 1 649 0
 3192              		mov	r1, r5
 3193              		sub	r0, fp, #246
 3194 1bfc 063087E0 		mov	r2, #32
 3195 1c00 833086E0 		bl	memcpy
 3196 1c04 043083E0 		.loc 1 650 0
 3197 1c08 0220D3E5 		mov	r3, #0
 3198 1c0c 0310D3E5 		strb	r3, [fp, #-215]
 3199 1c10 04C0D3E5 	.L272:
 3200 1c14 0500D3E5 		.loc 1 654 0
 3201 1c18 012482E1 		add	r3, r7, r6
 3202 1c1c 0C2882E1 		add	r3, r6, r3, asl #1
 3203 1c20 005C82E1 		add	r3, r3, r4
 3204              		add	r3, r3, #4
 3205 1c24 0500A0E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3206 1c28 FEFFFFEB 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3207 1c2c 200050E3 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3208 1c30 1301009A 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3209              		orr	r2, r2, r1, asl #8
 3210              		orr	r2, r2, ip, asl #16
 3211 1c34 0510A0E1 		orr	r5, r2, r0, asl #24
 3212 1c38 F6004BE2 		mov	r0, r5
 3213 1c3c 2020A0E3 		bl	strlen
 3214 1c40 FEFFFFEB 		cmp	r0, #64
 3215              		bls	.L273
 3216 1c44 0030A0E3 		.loc 1 656 0
 3217 1c48 D7304BE5 		mov	r1, r5
 3218              		sub	r0, fp, #214
 3219              		mov	r2, #32
 3220 1c4c 063087E0 		bl	memcpy
 3221 1c50 833086E0 		.loc 1 657 0
 3222 1c54 043083E0 		mov	r3, #0
 3223 1c58 043083E2 		strb	r3, [fp, #-151]
 3224 1c5c 0220D3E5 	.L275:
 3225 1c60 0310D3E5 		.loc 1 661 0
 3226 1c64 04C0D3E5 		add	r3, r7, r6
 3227 1c68 0500D3E5 		add	r3, r6, r3, asl #1
 3228 1c6c 012482E1 		add	r3, r3, r4
 3229 1c70 0C2882E1 		add	r3, r3, #8
 3230 1c74 005C82E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3231 1c78 0500A0E1 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3232 1c7c FEFFFFEB 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3233 1c80 400050E3 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3234 1c84 FA00009A 		orr	r2, r2, r1, asl #8
 3235              		orr	r2, r2, ip, asl #16
 3236 1c88 0510A0E1 		orr	r5, r2, r0, asl #24
 3237 1c8c D6004BE2 		mov	r0, r5
 3238 1c90 2020A0E3 		bl	strlen
 3239 1c94 FEFFFFEB 		cmp	r0, #32
 3240              		bls	.L276
 3241 1c98 0030A0E3 		.loc 1 663 0
 3242 1c9c 97304BE5 		mov	r1, r5
 3243              		sub	r0, fp, #150
 3244              		mov	r2, #32
 3245 1ca0 063087E0 		bl	memcpy
 3246 1ca4 833086E0 		.loc 1 664 0
 3247 1ca8 043083E0 		mov	r3, #0
 3248 1cac 083083E2 		strb	r3, [fp, #-119]
 3249 1cb0 0220D3E5 	.L278:
 3250 1cb4 0310D3E5 		.loc 1 668 0
 3251 1cb8 04C0D3E5 		add	r3, r7, r6
 3252 1cbc 0500D3E5 		add	r3, r6, r3, asl #1
 3253 1cc0 012482E1 		add	r2, r3, r4
 3254 1cc4 0C2882E1 		ldrb	ip, [r3, r4]	@ zero_extendqisi2
 3255 1cc8 005C82E1 		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 3256 1ccc 0500A0E1 		.loc 1 670 0
 3257 1cd0 FEFFFFEB 		ldr	r4, [fp, #-116]
 3258 1cd4 200050E3 		.loc 1 669 0
 3259 1cd8 1302009A 		ldrb	lr, [r2, #14]	@ zero_extendqisi2
 3260              		.loc 1 668 0
 3261 1cdc 0510A0E1 		orr	ip, ip, r1, asl #8
 3262 1ce0 96004BE2 		.loc 1 670 0
 3263 1ce4 2020A0E3 		and	r4, r4, #-16777216
 3264 1ce8 FEFFFFEB 		mov	r3, #0
 3265              		.loc 1 671 0
 3266 1cec 0030A0E3 		mov	r0, #132
 3267 1cf0 77304BE5 		sub	r1, fp, #248
 3268              		mov	r2, #131
 3269              		.loc 1 668 0
 3270 1cf4 063087E0 		strh	ip, [fp, #-248]	@ movhi
 3271 1cf8 833086E0 		.loc 1 669 0
 3272 1cfc 042083E0 		strb	lr, [fp, #-118]
 3273 1d00 04C0D3E7 		.loc 1 670 0
 3274 1d04 0110D2E5 		strb	r3, [fp, #-117]
 3275              		str	r4, [fp, #-116]
 3276 1d08 74401BE5 		.loc 1 671 0
 3277              		bl	aciTxSendPacket
 3278 1d0c 0EE0D2E5 		b	.L279
 3279              	.LVL170:
 3280 1d10 01C48CE1 	.L226:
 3281              	.LBE40:
 3282 1d14 FF4404E2 	.LBE39:
 3283 1d18 0030A0E3 	.LBE37:
 3284              		.loc 1 515 0
 3285 1d1c 8400A0E3 		cmp	r5, #4
 3286 1d20 F8104BE2 		beq	.L208
 3287 1d24 8320A0E3 		cmp	r5, #5
 3288              		bne	.L366
 3289 1d28 B8CF4BE1 	.LBB41:
 3290              		.loc 1 793 0
 3291 1d2c 76E04BE5 		mov	r1, r1, lsr #17
 3292              		cmp	r1, #0
 3293 1d30 75304BE5 		ldrgt	sl, .L408
 3294 1d34 74400BE5 		addgt	r9, r1, #1
 3295              		.loc 1 787 0
 3296 1d38 FEFFFFEB 		movgt	r2, #0
 3297 1d3c 24FEFFEA 		movgt	r7, #1
 3298              		.loc 1 793 0
 3299              		ble	.L366
 3300              	.LVL171:
 3301              	.L317:
 3302              	.LBB42:
 3303              		.loc 1 799 0
 3304 1d40 040055E3 		mov	r2, r2, asl #1
 3305 1d44 A600000A 		add	r3, r2, sl
 3306 1d48 050055E3 		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 3307 1d4c 5CFDFF1A 		.loc 1 801 0
 3308              		ldr	r2, .L408+48
 3309              		.loc 1 799 0
 3310 1d50 A118A0E1 		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 3311 1d54 000051E3 		.loc 1 801 0
 3312 1d58 F4A39FC5 		ldr	ip, [r2, #0]
 3313 1d5c 019081C2 		.loc 1 799 0
 3314              		orr	r1, r1, r0, asl #8
 3315 1d60 0020A0C3 		.loc 1 801 0
 3316 1d64 0170A0C3 		cmp	ip, #0
 3317              		.loc 1 799 0
 3318 1d68 55FDFFDA 		strh	r1, [fp, #-46]	@ movhi
 3319              		.loc 1 801 0
 3320              		ble	.L318
 3321              		.loc 1 802 0
 3322              		ldr	r8, .L408+52
 3323 1d6c 8220A0E1 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 3324 1d70 0A3082E0 		ldrb	r2, [r8, #1]	@ zero_extendqisi2
 3325 1d74 0210DAE7 		orr	r3, r3, r2, asl #8
 3326              		cmp	r3, r1
 3327 1d78 04249FE5 		movne	r5, #0
 3328              	.LVL172:
 3329 1d7c 0100D3E5 		movne	r0, r5
 3330              		bne	.L322
 3331 1d80 00C092E5 	.LVL173:
 3332              		b	.L406
 3333 1d84 001481E1 	.L323:
 3334              		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 3335 1d88 00005CE3 		ldrb	r3, [r0, r8]	@ zero_extendqisi2
 3336              		orr	r3, r3, r2, asl #8
 3337 1d8c BE124BE1 		cmp	r1, r3
 3338              		beq	.L324
 3339 1d90 130000DA 	.L322:
 3340              		.loc 1 801 0
 3341 1d94 EC839FE5 		add	r5, r5, #1
 3342 1d98 0030D8E5 		add	r0, r0, #19
 3343 1d9c 0120D8E5 		cmp	ip, r5
 3344 1da0 023483E1 		.loc 1 802 0
 3345 1da4 010053E1 		mov	r6, r5, asl #3
 3346 1da8 0050A013 		add	r3, r0, r8
 3347              		.loc 1 801 0
 3348 1dac 0500A011 		bne	.L323
 3349 1db0 0500001A 	.LVL174:
 3350              	.L318:
 3351 1db4 130000EA 		.loc 1 840 0
 3352              		mov	r0, #136
 3353 1db8 0120D3E5 		sub	r1, fp, #46
 3354 1dbc 0830D0E7 		mov	r2, #2
 3355 1dc0 023483E1 		bl	aciTxSendPacket
 3356 1dc4 030051E1 	.L334:
 3357 1dc8 1000000A 	.LBB43:
 3358              		.loc 1 837 0
 3359              		mov	r2, r7
 3360 1dcc 015085E2 		add	r7, r7, #1
 3361 1dd0 130080E2 	.LBE43:
 3362 1dd4 05005CE1 	.LBE42:
 3363              		.loc 1 793 0
 3364 1dd8 8561A0E1 		cmp	r9, r7
 3365 1ddc 083080E0 		bne	.L317
 3366              		b	.L366
 3367 1de0 F4FFFF1A 	.LVL175:
 3368              	.L406:
 3369              	.LBB44:
 3370              		.loc 1 801 0
 3371 1de4 8800A0E3 		mov	r5, #0
 3372 1de8 2E104BE2 		mov	r6, r5
 3373 1dec 0220A0E3 	.LVL176:
 3374 1df0 FEFFFFEB 	.L324:
 3375              	.LBB45:
 3376              		.loc 1 813 0
 3377              		add	r3, r6, r5
 3378 1df4 0720A0E1 		add	r3, r5, r3, asl #1
 3379 1df8 017087E2 		add	r3, r3, r8
 3380              		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3381              		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3382              		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3383 1dfc 070059E1 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3384 1e00 D9FFFF1A 		orr	r2, r2, r1, asl #8
 3385 1e04 2EFDFFEA 		orr	r2, r2, ip, asl #16
 3386              		orr	r4, r2, r0, asl #24
 3387              	.LVL177:
 3388              		mov	r0, r4
 3389              		bl	strlen
 3390 1e08 0050A0E3 		cmp	r0, #32
 3391 1e0c 0560A0E1 		bls	.L325
 3392              	.LVL178:
 3393              		.loc 1 815 0
 3394              		mov	r1, r4
 3395              		sub	r0, fp, #246
 3396 1e10 053086E0 		mov	r2, #32
 3397 1e14 833085E0 		bl	memcpy
 3398 1e18 083083E0 		.loc 1 816 0
 3399 1e1c 0220D3E5 		mov	r3, #0
 3400 1e20 0310D3E5 		strb	r3, [fp, #-215]
 3401 1e24 04C0D3E5 	.L327:
 3402 1e28 0500D3E5 		.loc 1 820 0
 3403 1e2c 012482E1 		add	r3, r6, r5
 3404 1e30 0C2882E1 		add	r3, r5, r3, asl #1
 3405 1e34 004C82E1 		add	r3, r3, r8
 3406              		add	r3, r3, #4
 3407 1e38 0400A0E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3408 1e3c FEFFFFEB 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3409 1e40 200050E3 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3410 1e44 C401009A 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3411              		orr	r2, r2, r1, asl #8
 3412              		orr	r2, r2, ip, asl #16
 3413 1e48 0410A0E1 		orr	r4, r2, r0, asl #24
 3414 1e4c F6004BE2 		mov	r0, r4
 3415 1e50 2020A0E3 		bl	strlen
 3416 1e54 FEFFFFEB 		cmp	r0, #64
 3417              		bls	.L328
 3418 1e58 0030A0E3 		.loc 1 822 0
 3419 1e5c D7304BE5 		mov	r1, r4
 3420              		sub	r0, fp, #214
 3421              		mov	r2, #32
 3422 1e60 053086E0 		bl	memcpy
 3423 1e64 833085E0 		.loc 1 823 0
 3424 1e68 083083E0 		mov	r3, #0
 3425 1e6c 043083E2 		strb	r3, [fp, #-151]
 3426 1e70 0220D3E5 	.L330:
 3427 1e74 0310D3E5 		.loc 1 827 0
 3428 1e78 04C0D3E5 		add	r3, r6, r5
 3429 1e7c 0500D3E5 		add	r3, r5, r3, asl #1
 3430 1e80 012482E1 		add	r3, r3, r8
 3431 1e84 0C2882E1 		add	r3, r3, #8
 3432 1e88 004C82E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3433 1e8c 0400A0E1 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3434 1e90 FEFFFFEB 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3435 1e94 400050E3 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3436 1e98 AB01009A 		orr	r2, r2, r1, asl #8
 3437              		orr	r2, r2, ip, asl #16
 3438 1e9c 0410A0E1 		orr	r4, r2, r0, asl #24
 3439 1ea0 D6004BE2 		mov	r0, r4
 3440 1ea4 2020A0E3 		bl	strlen
 3441 1ea8 FEFFFFEB 		cmp	r0, #32
 3442              		bls	.L331
 3443 1eac 0030A0E3 		.loc 1 829 0
 3444 1eb0 97304BE5 		mov	r1, r4
 3445              		sub	r0, fp, #150
 3446              		mov	r2, #32
 3447 1eb4 053086E0 		bl	memcpy
 3448 1eb8 833085E0 		.loc 1 830 0
 3449 1ebc 083083E0 		mov	r3, #0
 3450 1ec0 083083E2 		strb	r3, [fp, #-119]
 3451 1ec4 0220D3E5 	.L333:
 3452 1ec8 0310D3E5 		.loc 1 834 0
 3453 1ecc 04C0D3E5 		add	r3, r6, r5
 3454 1ed0 0500D3E5 		add	r3, r5, r3, asl #1
 3455 1ed4 012482E1 		add	r2, r3, r8
 3456 1ed8 0C2882E1 		ldrb	ip, [r3, r8]	@ zero_extendqisi2
 3457 1edc 004C82E1 		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 3458 1ee0 0400A0E1 		.loc 1 836 0
 3459 1ee4 FEFFFFEB 		ldr	r4, [fp, #-116]
 3460 1ee8 200050E3 		.loc 1 835 0
 3461 1eec 9201009A 		ldrb	lr, [r2, #14]	@ zero_extendqisi2
 3462              		.loc 1 834 0
 3463 1ef0 0410A0E1 		orr	ip, ip, r1, asl #8
 3464 1ef4 96004BE2 		.loc 1 836 0
 3465 1ef8 2020A0E3 		and	r4, r4, #-16777216
 3466 1efc FEFFFFEB 		mov	r3, #0
 3467              		.loc 1 837 0
 3468 1f00 0030A0E3 		mov	r0, #135
 3469 1f04 77304BE5 		sub	r1, fp, #248
 3470              		mov	r2, #131
 3471              		.loc 1 834 0
 3472 1f08 053086E0 		strh	ip, [fp, #-248]	@ movhi
 3473 1f0c 833085E0 		.loc 1 835 0
 3474 1f10 082083E0 		strb	lr, [fp, #-118]
 3475 1f14 08C0D3E7 		.loc 1 836 0
 3476 1f18 0110D2E5 		strb	r3, [fp, #-117]
 3477              		str	r4, [fp, #-116]
 3478 1f1c 74401BE5 		.loc 1 837 0
 3479              		bl	aciTxSendPacket
 3480 1f20 0EE0D2E5 		b	.L334
 3481              	.LVL179:
 3482 1f24 01C48CE1 	.L207:
 3483              	.LBE45:
 3484 1f28 FF4404E2 	.LBE44:
 3485 1f2c 0030A0E3 	.LBB46:
 3486              		.loc 1 585 0
 3487 1f30 8700A0E3 		ldr	r3, .L408+96
 3488 1f34 F8104BE2 		ldr	r0, [r3, #0]
 3489 1f38 8320A0E3 		mov	r6, r0, asl #1
 3490              		mov	r3, r6, asl #1
 3491 1f3c B8CF4BE1 		add	r3, r3, #8
 3492              	.LBE46:
 3493 1f40 76E04BE5 		.loc 1 532 0
 3494              		mov	r7, sp
 3495 1f44 75304BE5 	.LBB47:
 3496 1f48 74400BE5 		.loc 1 585 0
 3497              		rsb	sp, r3, sp
 3498 1f4c FEFFFFEB 		mov	r2, sp, lsr #2
 3499 1f50 A7FFFFEA 		mov	ip, r2, asl #2
 3500              		.loc 1 590 0
 3501              		cmp	r0, #0
 3502              		.loc 1 588 0
 3503              		strh	r0, [ip, #0]	@ movhi
 3504              		.loc 1 590 0
 3505              		ble	.L254
 3506 1f54 58329FE5 		mov	r4, #0
 3507 1f58 000093E5 	.LVL180:
 3508 1f5c 8060A0E1 		ldr	r9, .L408+100
 3509 1f60 8630A0E1 		mov	r5, #1
 3510 1f64 083083E2 	.LVL181:
 3511              		mov	lr, r4
 3512              	.LVL182:
 3513 1f68 0D70A0E1 	.L256:
 3514              		.loc 1 591 0
 3515              		add	r3, lr, r9
 3516 1f6c 0DD063E0 		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 3517 1f70 2D21A0E1 		ldrb	r2, [lr, r9]	@ zero_extendqisi2
 3518 1f74 02C1A0E1 		mov	r3, r5, asl #16
 3519              		.loc 1 590 0
 3520 1f78 000050E3 		add	r4, r4, #1
 3521              		.loc 1 591 0
 3522 1f7c B000CCE1 		orr	r2, r2, r1, asl #8
 3523              		mov	r3, r3, lsr #15
 3524 1f80 0F0000DA 		.loc 1 590 0
 3525 1f84 0040A0E3 		cmp	r0, r4
 3526              		.loc 1 591 0
 3527 1f88 28929FE5 		strh	r2, [r3, ip]	@ movhi
 3528 1f8c 0150A0E3 		.loc 1 590 0
 3529              		add	lr, lr, #19
 3530 1f90 04E0A0E1 		add	r5, r5, #1
 3531              		bne	.L256
 3532              	.LVL183:
 3533              	.L254:
 3534 1f94 09308EE0 		.loc 1 594 0
 3535 1f98 0110D3E5 		add	r2, r6, #2
 3536 1f9c 0920DEE7 		mov	r2, r2, asl #16
 3537 1fa0 0538A0E1 		mov	r1, ip
 3538              	.LVL184:
 3539 1fa4 014084E2 		mov	r2, r2, lsr #16
 3540              		mov	r0, #128
 3541 1fa8 012482E1 		bl	aciTxSendPacket
 3542 1fac A337A0E1 	.LVL185:
 3543              		mov	sp, r7
 3544 1fb0 040050E1 		b	.L366
 3545              	.LVL186:
 3546 1fb4 BC2083E1 	.L208:
 3547              	.LBE47:
 3548 1fb8 13E08EE2 	.LBB48:
 3549 1fbc 015085E2 		.loc 1 681 0
 3550 1fc0 F3FFFF1A 		ldr	r3, .L408+20
 3551              		ldr	r0, [r3, #0]
 3552              		mov	r7, r0, asl #1
 3553              		mov	r3, r7, asl #1
 3554 1fc4 022086E2 		add	r3, r3, #8
 3555 1fc8 0228A0E1 	.LBE48:
 3556 1fcc 0C10A0E1 		.loc 1 628 0
 3557              		mov	r8, sp
 3558 1fd0 2228A0E1 	.LBB49:
 3559 1fd4 8000A0E3 		.loc 1 681 0
 3560 1fd8 FEFFFFEB 		rsb	sp, r3, sp
 3561              		mov	r2, sp, lsr #2
 3562 1fdc 07D0A0E1 		mov	ip, r2, asl #2
 3563 1fe0 B7FCFFEA 		.loc 1 686 0
 3564              		cmp	r0, #0
 3565              		.loc 1 684 0
 3566              		strh	r0, [ip, #0]	@ movhi
 3567              		.loc 1 686 0
 3568              		ble	.L280
 3569 1fe4 7C319FE5 		mov	r5, #0
 3570 1fe8 000093E5 	.LVL187:
 3571 1fec 8070A0E1 		ldr	r4, .L408+16
 3572 1ff0 8730A0E1 	.LVL188:
 3573 1ff4 083083E2 		mov	r6, #1
 3574              		mov	lr, r5
 3575              	.LVL189:
 3576 1ff8 0D80A0E1 	.L282:
 3577              		.loc 1 687 0
 3578              		add	r3, lr, r4
 3579 1ffc 0DD063E0 		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 3580 2000 2D21A0E1 		ldrb	r2, [lr, r4]	@ zero_extendqisi2
 3581 2004 02C1A0E1 		mov	r3, r6, asl #16
 3582              		.loc 1 686 0
 3583 2008 000050E3 		add	r5, r5, #1
 3584              		.loc 1 687 0
 3585 200c B000CCE1 		orr	r2, r2, r1, asl #8
 3586              		mov	r3, r3, lsr #15
 3587 2010 0F0000DA 		.loc 1 686 0
 3588 2014 0050A0E3 		cmp	r0, r5
 3589              		.loc 1 687 0
 3590 2018 44419FE5 		strh	r2, [r3, ip]	@ movhi
 3591              		.loc 1 686 0
 3592 201c 0160A0E3 		add	lr, lr, #19
 3593 2020 05E0A0E1 		add	r6, r6, #1
 3594              		bne	.L282
 3595              	.LVL190:
 3596              	.L280:
 3597 2024 04308EE0 		.loc 1 690 0
 3598 2028 0110D3E5 		add	r2, r7, #2
 3599 202c 0420DEE7 		mov	r2, r2, asl #16
 3600 2030 0638A0E1 		mov	r1, ip
 3601              	.LVL191:
 3602 2034 015085E2 		mov	r2, r2, lsr #16
 3603              		mov	r0, #131
 3604 2038 012482E1 		bl	aciTxSendPacket
 3605 203c A337A0E1 	.LVL192:
 3606              		mov	sp, r8
 3607 2040 050050E1 		b	.L366
 3608              	.LVL193:
 3609 2044 BC2083E1 	.L273:
 3610              	.LBE49:
 3611 2048 13E08EE2 	.LBB50:
 3612 204c 016086E2 	.LBB51:
 3613 2050 F3FFFF1A 		.loc 1 659 0
 3614              		mov	r1, r5
 3615              		sub	r0, fp, #214
 3616              		bl	strcpy
 3617 2054 022087E2 		b	.L275
 3618 2058 0228A0E1 	.L270:
 3619 205c 0C10A0E1 		.loc 1 652 0
 3620              		mov	r1, r5
 3621 2060 2228A0E1 		sub	r0, fp, #246
 3622 2064 8300A0E3 		bl	strcpy
 3623 2068 FEFFFFEB 		b	.L272
 3624              	.LVL194:
 3625 206c 08D0A0E1 	.L205:
 3626 2070 93FCFFEA 	.LBE51:
 3627              	.LBE50:
 3628              		.loc 1 532 0
 3629              		mov	r1, r1, lsr #17
 3630              		cmp	r1, #0
 3631              		ble	.L366
 3632              		add	r1, r1, #1
 3633 2074 0510A0E1 		ldr	sl, .L408
 3634 2078 D6004BE2 		ldr	r8, .L408+96
 3635 207c FEFFFFEB 		str	r1, [fp, #-1788]
 3636 2080 06FFFFEA 		.loc 1 530 0
 3637              		mov	r7, r5
 3638              		mov	r2, #0
 3639 2084 0510A0E1 	.LVL195:
 3640 2088 F6004BE2 	.L236:
 3641 208c FEFFFFEB 	.LBB52:
 3642 2090 EDFEFFEA 		.loc 1 537 0
 3643              		mov	r2, r2, asl #1
 3644              		add	r3, r2, sl
 3645              		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 3646              		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 3647              		.loc 1 539 0
 3648 2094 A118A0E1 		ldr	ip, [r8, #0]
 3649 2098 000051E3 		.loc 1 537 0
 3650 209c 88FCFFDA 		orr	r0, r1, r0, asl #8
 3651 20a0 011081E2 		.loc 1 539 0
 3652 20a4 A8A09FE5 		cmp	ip, #0
 3653 20a8 04819FE5 		.loc 1 537 0
 3654 20ac FC160BE5 		strh	r0, [fp, #-46]	@ movhi
 3655              		.loc 1 539 0
 3656 20b0 0570A0E1 		ble	.L237
 3657 20b4 0020A0E3 		.loc 1 540 0
 3658              		ldr	r9, .L408+100
 3659              		ldrb	r3, [r9, #0]	@ zero_extendqisi2
 3660              		ldrb	r2, [r9, #1]	@ zero_extendqisi2
 3661              		orr	r3, r3, r2, asl #8
 3662 20b8 8220A0E1 		cmp	r0, r3
 3663 20bc 0A3082E0 		movne	r5, #0
 3664 20c0 0100D3E5 	.LVL196:
 3665 20c4 0210DAE7 		movne	r1, r5
 3666              		bne	.L241
 3667 20c8 00C098E5 	.LVL197:
 3668              		b	.L407
 3669 20cc 000481E1 	.L242:
 3670              		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 3671 20d0 00005CE3 		ldrb	r3, [r1, r9]	@ zero_extendqisi2
 3672              		orr	r3, r3, r2, asl #8
 3673 20d4 BE024BE1 		cmp	r0, r3
 3674              		beq	.L243
 3675 20d8 130000DA 	.L241:
 3676              		.loc 1 539 0
 3677 20dc D4909FE5 		add	r5, r5, #1
 3678 20e0 0030D9E5 		add	r1, r1, #19
 3679 20e4 0120D9E5 		cmp	r5, ip
 3680 20e8 023483E1 		.loc 1 540 0
 3681 20ec 030050E1 		mov	r6, r5, asl #3
 3682 20f0 0050A013 		add	r3, r1, r9
 3683              		.loc 1 539 0
 3684 20f4 0510A011 		bne	.L242
 3685 20f8 0500001A 	.LVL198:
 3686              	.L237:
 3687 20fc 400000EA 		.loc 1 578 0
 3688              		mov	r0, #130
 3689 2100 0120D3E5 		sub	r1, fp, #46
 3690 2104 0930D1E7 		mov	r2, #2
 3691 2108 023483E1 		bl	aciTxSendPacket
 3692 210c 030050E1 	.L253:
 3693 2110 3D00000A 	.LBE52:
 3694              		.loc 1 532 0
 3695              		ldr	r1, [fp, #-1788]
 3696 2114 015085E2 	.LBB53:
 3697 2118 131081E2 	.LBB54:
 3698 211c 0C0055E1 		.loc 1 575 0
 3699              		mov	r2, r7
 3700 2120 8561A0E1 		add	r7, r7, #1
 3701 2124 093081E0 	.LBE54:
 3702              	.LBE53:
 3703 2128 F4FFFF1A 		.loc 1 532 0
 3704              		cmp	r7, r1
 3705              		bne	.L236
 3706              		b	.L366
 3707 212c 8200A0E3 	.L409:
 3708 2130 2E104BE2 		.align	2
 3709 2134 0220A0E3 	.L408:
 3710 2138 FEFFFFEB 		.word	aciRxDataBuffer
 3711              		.word	aciCmdPacketMagicCode
 3712              		.word	aciCmdPacketWithACK
 3713              		.word	aciCmdPacketSelect
 3714 213c FC161BE5 		.word	aciListCmd
 3715              		.word	aciListCmdCount
 3716              		.word	aciCmdPacketContentBufferLength
 3717              		.word	aciCmdPacketSelectLength
 3718 2140 0720A0E1 		.word	aciVarPacketContentBufferLength
 3719 2144 017087E2 		.word	aciVarPacketUpdated
 3720              		.word	aciParPacketSelect
 3721              		.word	aciParPacketMagicCode
 3722              		.word	aciListParCount
 3723 2148 010057E1 		.word	aciListPar
 3724 214c D9FFFF1A 		.word	aciParPacketContentBufferLength
 3725 2150 5BFCFFEA 		.word	aciParPacketSelectLength
 3726              		.word	aciCmdPacketContentBufferInvalidCnt
 3727              		.word	aciCmdPacketContentBufferValid
 3728              		.word	aciParPacketContentBufferInvalidCnt
 3729 2154 00000000 		.word	aciParPacketContentBufferValid
 3730 2158 00000000 		.word	aciHeartBeatTimeout
 3731 215c 00000000 		.word	aciCmdPacketContentBuffer
 3732 2160 00000000 		.word	aciRxDataBuffer+1
 3733 2164 00000000 		.word	aciCmdPacketReceived
 3734 2168 00000000 		.word	aciListVarCount
 3735 216c 00000000 		.word	aciListVar
 3736 2170 00000000 		.word	aciVarPacketTransmissionRate
 3737 2174 00000000 		.word	aciParPacketContentBuffer
 3738 2178 00000000 		.word	aciParamPacketReceived
 3739 217c 00000000 		.word	aciMagicCodeVar
 3740 2180 00000000 		.word	aciMagicCodeCmd
 3741 2184 00000000 		.word	aciMagicCodePar
 3742 2188 00000000 		.word	aciRxDataBuffer
 3743 218c 00000000 		.word	aciSendSingleStatus
 3744 2190 00000000 		.word	aciReadParafromFlashCallback
 3745 2194 00000000 		.word	aciSaveParaCallback
 3746 2198 00000000 		.word	aciParamSaveIt
 3747 219c 00000000 		.word	aciVarPacketSelect
 3748 21a0 00000000 		.word	aciVarPacketPtrList
 3749 21a4 00000000 		.word	aciVarPacketSelectLength
 3750 21a8 00000000 		.word	aciVarPacketMagicCode
 3751 21ac 01000000 		.word	aciVarPacketTypeList
 3752 21b0 00000000 		.word	aciInhibitPacketTransmission
 3753 21b4 00000000 		.word	aciHeartBeatCnt
 3754 21b8 00000000 	.LVL199:
 3755 21bc 00000000 	.L407:
 3756 21c0 00000000 	.LBB55:
 3757 21c4 00000000 		.loc 1 539 0
 3758 21c8 00000000 		mov	r5, #0
 3759 21cc 00000000 		mov	r6, r5
 3760 21d0 00000000 	.LVL200:
 3761 21d4 00000000 	.L243:
 3762 21d8 00000000 	.LBB56:
 3763 21dc 00000000 		.loc 1 551 0
 3764 21e0 00000000 		add	r3, r6, r5
 3765 21e4 00000000 		add	r3, r5, r3, asl #1
 3766 21e8 00000000 		add	r3, r3, r9
 3767 21ec 00000000 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3768 21f0 00000000 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3769 21f4 00000000 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3770 21f8 00000000 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3771 21fc 00000000 		orr	r2, r2, r1, asl #8
 3772 2200 00000000 		orr	r2, r2, ip, asl #16
 3773              		orr	r4, r2, r0, asl #24
 3774              	.LVL201:
 3775              		mov	r0, r4
 3776              		bl	strlen
 3777 2204 0050A0E3 		cmp	r0, #32
 3778 2208 0560A0E1 		bls	.L244
 3779              	.LVL202:
 3780              		.loc 1 553 0
 3781              		mov	r1, r4
 3782              		sub	r0, fp, #246
 3783 220c 053086E0 		mov	r2, #32
 3784 2210 833085E0 		bl	memcpy
 3785 2214 093083E0 		.loc 1 554 0
 3786 2218 0220D3E5 		mov	r3, #0
 3787 221c 0310D3E5 		strb	r3, [fp, #-215]
 3788 2220 04C0D3E5 	.L246:
 3789 2224 0500D3E5 		.loc 1 558 0
 3790 2228 012482E1 		add	r3, r6, r5
 3791 222c 0C2882E1 		add	r3, r5, r3, asl #1
 3792 2230 004C82E1 		add	r3, r3, r9
 3793              		add	r3, r3, #4
 3794 2234 0400A0E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3795 2238 FEFFFFEB 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3796 223c 200050E3 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3797 2240 4200009A 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3798              		orr	r2, r2, r1, asl #8
 3799              		orr	r2, r2, ip, asl #16
 3800 2244 0410A0E1 		orr	r4, r2, r0, asl #24
 3801 2248 F6004BE2 		mov	r0, r4
 3802 224c 2020A0E3 		bl	strlen
 3803 2250 FEFFFFEB 		cmp	r0, #64
 3804              		bls	.L247
 3805 2254 0030A0E3 		.loc 1 560 0
 3806 2258 D7304BE5 		mov	r1, r4
 3807              		sub	r0, fp, #214
 3808              		mov	r2, #32
 3809 225c 053086E0 		bl	memcpy
 3810 2260 833085E0 		.loc 1 561 0
 3811 2264 093083E0 		mov	r3, #0
 3812 2268 043083E2 		strb	r3, [fp, #-151]
 3813 226c 0220D3E5 	.L249:
 3814 2270 0310D3E5 		.loc 1 565 0
 3815 2274 04C0D3E5 		add	r3, r6, r5
 3816 2278 0500D3E5 		add	r3, r5, r3, asl #1
 3817 227c 012482E1 		add	r3, r3, r9
 3818 2280 0C2882E1 		add	r3, r3, #8
 3819 2284 004C82E1 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 3820 2288 0400A0E1 		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 3821 228c FEFFFFEB 		ldrb	ip, [r3, #4]	@ zero_extendqisi2
 3822 2290 400050E3 		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 3823 2294 3500009A 		orr	r2, r2, r1, asl #8
 3824              		orr	r2, r2, ip, asl #16
 3825 2298 0410A0E1 		orr	r4, r2, r0, asl #24
 3826 229c D6004BE2 		mov	r0, r4
 3827 22a0 2020A0E3 		bl	strlen
 3828 22a4 FEFFFFEB 		cmp	r0, #32
 3829              		bls	.L250
 3830 22a8 0030A0E3 		.loc 1 567 0
 3831 22ac 97304BE5 		mov	r1, r4
 3832              		sub	r0, fp, #150
 3833              		mov	r2, #32
 3834 22b0 053086E0 		bl	memcpy
 3835 22b4 833085E0 		.loc 1 568 0
 3836 22b8 093083E0 		mov	r3, #0
 3837 22bc 083083E2 		strb	r3, [fp, #-119]
 3838 22c0 0220D3E5 	.L252:
 3839 22c4 0310D3E5 		.loc 1 572 0
 3840 22c8 04C0D3E5 		add	r3, r6, r5
 3841 22cc 0500D3E5 		add	r3, r5, r3, asl #1
 3842 22d0 012482E1 		add	r2, r3, r9
 3843 22d4 0C2882E1 		ldrb	ip, [r3, r9]	@ zero_extendqisi2
 3844 22d8 004C82E1 		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 3845 22dc 0400A0E1 		.loc 1 574 0
 3846 22e0 FEFFFFEB 		ldr	r4, [fp, #-116]
 3847 22e4 200050E3 		.loc 1 573 0
 3848 22e8 1C00009A 		ldrb	lr, [r2, #14]	@ zero_extendqisi2
 3849              		.loc 1 572 0
 3850 22ec 0410A0E1 		orr	ip, ip, r1, asl #8
 3851 22f0 96004BE2 		.loc 1 574 0
 3852 22f4 2020A0E3 		and	r4, r4, #-16777216
 3853 22f8 FEFFFFEB 		mov	r3, #0
 3854              		.loc 1 575 0
 3855 22fc 0030A0E3 		mov	r0, #129
 3856 2300 77304BE5 		sub	r1, fp, #248
 3857              		mov	r2, #131
 3858              		.loc 1 572 0
 3859 2304 053086E0 		strh	ip, [fp, #-248]	@ movhi
 3860 2308 833085E0 		.loc 1 573 0
 3861 230c 092083E0 		strb	lr, [fp, #-118]
 3862 2310 09C0D3E7 		.loc 1 574 0
 3863 2314 0110D2E5 		strb	r3, [fp, #-117]
 3864              		str	r4, [fp, #-116]
 3865 2318 74401BE5 		.loc 1 575 0
 3866              		bl	aciTxSendPacket
 3867 231c 0EE0D2E5 		b	.L253
 3868              	.L244:
 3869 2320 01C48CE1 		.loc 1 556 0
 3870              		mov	r1, r4
 3871 2324 FF4404E2 		sub	r0, fp, #246
 3872 2328 0030A0E3 		bl	strcpy
 3873              		b	.L246
 3874 232c 8100A0E3 	.L250:
 3875 2330 F8104BE2 		.loc 1 570 0
 3876 2334 8320A0E3 		mov	r1, r4
 3877              		sub	r0, fp, #150
 3878 2338 B8CF4BE1 		bl	strcpy
 3879              		b	.L252
 3880 233c 76E04BE5 	.L247:
 3881              		.loc 1 563 0
 3882 2340 75304BE5 		mov	r1, r4
 3883 2344 74400BE5 		sub	r0, fp, #214
 3884              		bl	strcpy
 3885 2348 FEFFFFEB 		b	.L249
 3886 234c 7AFFFFEA 	.LVL203:
 3887              	.L401:
 3888              	.LBE56:
 3889 2350 0410A0E1 	.LBE55:
 3890 2354 F6004BE2 	.LBB57:
 3891 2358 FEFFFFEB 		.loc 1 993 0
 3892 235c BEFFFFEA 		mov	r1, #0
 3893              		mov	r4, r1
 3894              	.LVL204:
 3895 2360 0410A0E1 		b	.L365
 3896 2364 96004BE2 	.LVL205:
 3897 2368 FEFFFFEB 	.L218:
 3898 236c E4FFFFEA 	.LBE57:
 3899              		.loc 1 983 0
 3900              		ldr	r1, .L408+128
 3901 2370 0410A0E1 		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3902 2374 D6004BE2 		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 3903 2378 FEFFFFEB 		orr	r3, r3, r2, asl #8
 3904 237c CBFFFFEA 		sub	r3, r3, #1
 3905              		mov	r3, r3, asl #16
 3906              		ldr	r2, .L408+132
 3907              		mov	r3, r3, asr #15
 3908              		mov	r8, #0	@ movhi
 3909              		strh	r8, [r3, r2]	@ movhi
 3910              		b	.L366
 3911 2380 0010A0E3 	.L213:
 3912 2384 0140A0E1 		.loc 1 927 0
 3913              		ldr	r2, .L408+172
 3914 2388 34FDFFEA 		.loc 1 926 0
 3915              		ldr	r1, .L408+168
 3916              		mov	r3, #0
 3917              		.loc 1 927 0
 3918              		strh	r3, [r2, #0]	@ movhi
 3919 238c C0111FE5 		.loc 1 926 0
 3920 2390 0120D1E5 		strb	r3, [r1, #0]
 3921 2394 0030D1E5 		b	.L366
 3922 2398 023483E1 	.L223:
 3923 239c 013043E2 		.loc 1 973 0
 3924 23a0 0338A0E1 		ldr	r3, .L408+136
 3925 23a4 D4211FE5 		ldr	r3, [r3, #0]
 3926 23a8 C337A0E1 		cmp	r3, #0
 3927 23ac 0080A0E3 		beq	.L366
 3928 23b0 B28083E1 		.loc 1 974 0
 3929 23b4 C2FBFFEA 		mov	lr, pc
 3930              		bx	r3
 3931              		.loc 1 975 0
 3932 23b8 C0211FE5 		sub	r1, fp, #44
 3933              		.loc 1 974 0
 3934 23bc C8111FE5 		strh	r0, [fp, #-44]	@ movhi
 3935 23c0 0030A0E3 	.LVL206:
 3936              		.loc 1 975 0
 3937 23c4 B030C2E1 		mov	r2, #2
 3938              		mov	r0, r5
 3939 23c8 0030C1E5 		bl	aciTxSendPacket
 3940 23cc BCFBFFEA 		b	.L366
 3941              	.LVL207:
 3942              	.L222:
 3943 23d0 FC311FE5 		.loc 1 966 0
 3944 23d4 003093E5 		ldr	r3, .L408+140
 3945 23d8 000053E3 		ldr	r3, [r3, #0]
 3946 23dc B8FBFF0A 		cmp	r3, #0
 3947              		beq	.L366
 3948 23e0 0FE0A0E1 		.loc 1 967 0
 3949 23e4 13FF2FE1 		mov	lr, pc
 3950              		bx	r3
 3951 23e8 2C104BE2 		.loc 1 968 0
 3952              		ldr	r3, .L408+144
 3953 23ec BC024BE1 		mov	r2, #1
 3954              		strb	r2, [r3, #0]
 3955              		b	.L366
 3956 23f0 0220A0E3 	.LVL208:
 3957 23f4 0500A0E1 	.L216:
 3958 23f8 FEFFFFEB 		ldr	r6, .L408+148
 3959 23fc B0FBFFEA 		ldr	sl, .L408+152
 3960              		ldr	r5, .L408+164
 3961              	.LVL209:
 3962              		ldr	r8, .L408+160
 3963 2400 28321FE5 		ldr	r7, .L408+156
 3964 2404 003093E5 	.LBB58:
 3965 2408 000053E3 		.loc 1 840 0
 3966 240c ACFBFF0A 		mov	r2, #0
 3967              	.LVL210:
 3968 2410 0FE0A0E1 	.L355:
 3969 2414 13FF2FE1 		add	r4, r6, r2, asl #7
 3970              	.LVL211:
 3971 2418 3C321FE5 		add	lr, sl, r2, asl #8
 3972 241c 0120A0E3 		add	ip, r5, r2, asl #6
 3973 2420 0020C3E5 		mov	r3, #0
 3974 2424 A6FBFFEA 	.L353:
 3975              	.LBE58:
 3976              		.loc 1 952 0
 3977 2428 48621FE5 		add	r3, r3, #1
 3978 242c 48A21FE5 	.LVL212:
 3979 2430 40521FE5 		mov	r3, r3, asl #16
 3980              		.loc 1 954 0
 3981 2434 48821FE5 		mov	r1, #0
 3982 2438 50721FE5 		.loc 1 952 0
 3983              		cmp	r3, #4194304
 3984              		.loc 1 954 0
 3985 243c 0020A0E3 		strh	r1, [r4], #2	@ movhi
 3986              		.loc 1 955 0
 3987              		str	r1, [lr], #4
 3988 2440 824386E0 		.loc 1 956 0
 3989              		strb	r1, [ip], #1
 3990 2444 02E48AE0 		.loc 1 952 0
 3991 2448 02C385E0 		mov	r3, r3, lsr #16
 3992 244c 0030A0E3 	.LVL213:
 3993              		bne	.L353
 3994              		.loc 1 958 0
 3995              		strb	r1, [r2, r8]
 3996 2450 013083E2 		.loc 1 959 0
 3997              		strb	r1, [r2, r7]
 3998 2454 0338A0E1 		.loc 1 950 0
 3999              		add	r2, r2, #1
 4000 2458 0010A0E3 		cmp	r2, #3
 4001              		bne	.L355
 4002 245c 010553E3 		.loc 1 961 0
 4003              		ldr	r3, .L408+168
 4004 2460 B210C4E0 	.LVL214:
 4005              		.loc 1 962 0
 4006 2464 04108EE4 		ldr	r2, .L408+172
 4007              	.LVL215:
 4008 2468 0110CCE4 		.loc 1 961 0
 4009              		strb	r1, [r3, #0]
 4010 246c 2338A0E1 		.loc 1 962 0
 4011              		strh	r1, [r2, #0]	@ movhi
 4012 2470 F6FFFF1A 		b	.L366
 4013              	.LVL216:
 4014 2474 0810C2E7 	.L343:
 4015              	.LBB59:
 4016 2478 0710C2E7 		.loc 1 875 0
 4017              		add	r4, r4, r1
 4018 247c 012082E2 	.LVL217:
 4019 2480 030052E3 		add	r4, r1, r4, asl #1
 4020 2484 EDFFFF1A 		add	r4, r4, r8
 4021              		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4022 2488 94321FE5 		.loc 1 876 0
 4023              		sub	r6, fp, #113
 4024              		.loc 1 877 0
 4025 248c 94221FE5 		add	r4, r4, #12
 4026              		.loc 1 875 0
 4027              		mov	r3, r3, lsr #2
 4028 2490 0010C3E5 		.loc 1 876 0
 4029              		mov	r2, #2
 4030 2494 B010C2E1 		sub	r1, fp, #46
 4031 2498 89FBFFEA 	.LVL218:
 4032              		mov	r0, r6
 4033              		.loc 1 875 0
 4034              		add	r5, r3, r2
 4035              	.LVL219:
 4036 249c 014084E0 		.loc 1 876 0
 4037              		bl	memcpy
 4038 24a0 844081E0 		.loc 1 877 0
 4039 24a4 084084E0 		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4040 24a8 0E30D4E5 		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4041              		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 4042 24ac 71604BE2 		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 4043              		orr	r1, r1, r3, asl #8
 4044 24b0 0C4084E2 		orr	r1, r1, r0, asl #16
 4045              		orr	r1, r1, r2, asl #24
 4046 24b4 2331A0E1 		sub	r0, fp, #111
 4047              		sub	r2, r5, #2
 4048 24b8 0220A0E3 		bl	memcpy
 4049 24bc 2E104BE2 		.loc 1 882 0
 4050              		cmp	r5, #0
 4051 24c0 0600A0E1 		bne	.L404
 4052              	.LVL220:
 4053 24c4 025083E0 	.L339:
 4054              		.loc 1 883 0
 4055              		mov	r3, #0
 4056 24c8 FEFFFFEB 		.loc 1 884 0
 4057              		mov	r1, r6
 4058 24cc 0310D4E5 	.LVL221:
 4059 24d0 0430D4E5 		mov	r0, #137
 4060 24d4 0500D4E5 		mov	r2, #1
 4061 24d8 0620D4E5 		.loc 1 883 0
 4062 24dc 031481E1 		strb	r3, [fp, #-113]
 4063 24e0 001881E1 		.loc 1 884 0
 4064 24e4 021C81E1 		bl	aciTxSendPacket
 4065 24e8 6F004BE2 		b	.L366
 4066 24ec 022045E2 	.LVL222:
 4067 24f0 FEFFFFEB 	.L404:
 4068              		.loc 1 887 0
 4069 24f4 000055E3 		mov	r1, r6
 4070 24f8 0600001A 		mov	r2, r5
 4071              		mov	r0, #137
 4072              		bl	aciTxSendPacket
 4073              		b	.L366
 4074 24fc 0030A0E3 	.LVL223:
 4075              	.L276:
 4076 2500 0610A0E1 	.LBE59:
 4077              	.LBB60:
 4078 2504 8900A0E3 	.LBB61:
 4079 2508 0120A0E3 		.loc 1 666 0
 4080              		mov	r1, r5
 4081 250c 71304BE5 		sub	r0, fp, #150
 4082              		bl	strcpy
 4083 2510 FEFFFFEB 		b	.L278
 4084 2514 6AFBFFEA 	.LVL224:
 4085              	.L331:
 4086              	.LBE61:
 4087              	.LBE60:
 4088 2518 0610A0E1 	.LBB62:
 4089 251c 0520A0E1 	.LBB63:
 4090 2520 8900A0E3 		.loc 1 832 0
 4091 2524 FEFFFFEB 		mov	r1, r4
 4092 2528 65FBFFEA 		sub	r0, fp, #150
 4093              		bl	strcpy
 4094              		b	.L333
 4095              	.L328:
 4096              		.loc 1 825 0
 4097              		mov	r1, r4
 4098              		sub	r0, fp, #214
 4099 252c 0510A0E1 		bl	strcpy
 4100 2530 96004BE2 		b	.L330
 4101 2534 FEFFFFEB 	.L325:
 4102 2538 EDFDFFEA 		.loc 1 818 0
 4103              		mov	r1, r4
 4104              		sub	r0, fp, #246
 4105              		bl	strcpy
 4106              		b	.L327
 4107              	.LBE63:
 4108              	.LBE62:
 4109              	.LBE41:
 4110 253c 0410A0E1 	.LFE13:
 4112 2544 FEFFFFEB 		.align	2
 4113 2548 6EFEFFEA 		.global	aciReceiveHandler
 4115              	aciReceiveHandler:
 4116 254c 0410A0E1 	.LFB14:
 4117 2550 D6004BE2 		.loc 1 1017 0
 4118 2554 FEFFFFEB 		@ Function supports interworking.
 4119 2558 55FEFFEA 		@ args = 0, pretend = 0, frame = 0
 4120              		@ frame_needed = 0, uses_anonymous_args = 0
 4121              	.LVL225:
 4122 255c 0410A0E1 		stmfd	sp!, {r4, r5, r6, r7, lr}
 4123 2560 F6004BE2 	.LCFI25:
 4124 2564 FEFFFFEB 		.loc 1 1025 0
 4125 2568 3CFEFFEA 		ldr	r7, .L437
 4126              		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4127              		.loc 1 1017 0
 4128              		and	r6, r0, #255
 4129              		.loc 1 1025 0
 4130              		cmp	r3, #8
 4131              		ldrls	pc, [pc, r3, asl #2]
 4132              		b	.L434
 4133              		.p2align 2
 4134              	.L421:
 4135              		.word	.L412
 4136              		.word	.L413
 4137              		.word	.L414
 4138              		.word	.L415
 4139              		.word	.L416
 4140              		.word	.L417
 4141 256c F0402DE9 		.word	.L418
 4142              		.word	.L419
 4143              		.word	.L420
 4144 2570 B8719FE5 	.LVL226:
 4145 2574 0030D7E5 	.L420:
 4146              		.loc 1 1081 0
 4147 2578 FF6000E2 		ldr	r0, .L437+4
 4148              		.loc 1 1082 0
 4149 257c 080053E3 		ldr	r2, .L437+8
 4150 2580 03F19F97 		.loc 1 1081 0
 4151 2584 120000EA 		ldrh	r3, [r0, #0]
 4152              		.loc 1 1082 0
 4153              		ldrh	r1, [r2, #0]
 4154 2588 DC250000 		.loc 1 1081 0
 4155 258c 04270000 		orr	r3, r3, r6, asl #8
 4156 2590 F0260000 		.loc 1 1082 0
 4157 2594 C8260000 		cmp	r1, r3
 4158 2598 A0260000 		.loc 1 1081 0
 4159 259c 50260000 		strh	r3, [r0, #0]	@ movhi
 4160 25a0 00260000 		.loc 1 1082 0
 4161 25a4 EC250000 		beq	.L436
 4162 25a8 AC250000 	.LVL227:
 4163              	.L432:
 4164              		.loc 1 1086 0
 4165              		mov	r3, #0
 4166 25ac 80019FE5 		strb	r3, [r7, #0]
 4167              	.L434:
 4168 25b0 80219FE5 		.loc 1 1092 0
 4169              		ldmfd	sp!, {r4, r5, r6, r7, lr}
 4170 25b4 B030D0E1 		bx	lr
 4171              	.L412:
 4172 25b8 B010D2E1 		.loc 1 1028 0
 4173              		cmp	r6, #33
 4174 25bc 063483E1 		.loc 1 1029 0
 4175              		moveq	r3, #1
 4176 25c0 030051E1 		streqb	r3, [r7, #0]
 4177              		b	.L434
 4178 25c4 B030C0E1 	.L419:
 4179              		.loc 1 1077 0
 4180 25c8 5200000A 		ldr	r3, .L437+4
 4181              		.loc 1 1078 0
 4182              		mov	r2, #8
 4183              		.loc 1 1077 0
 4184 25cc 0030A0E3 		strh	r6, [r3, #0]	@ movhi
 4185 25d0 0030C7E5 		.loc 1 1078 0
 4186              		strb	r2, [r7, #0]
 4187              		b	.L434
 4188 25d4 F040BDE8 	.L418:
 4189 25d8 1EFF2FE1 		.loc 1 1071 0
 4190              		ldr	r5, .L437+8
 4191              		mov	r1, r6
 4192 25dc 210056E3 		ldrh	r0, [r5, #0]
 4193              		bl	aciCrcUpdate
 4194 25e0 0130A003 		.loc 1 1072 0
 4195 25e4 0030C705 		ldr	r4, .L437+12
 4196 25e8 F9FFFFEA 		ldrh	ip, [r4, #0]
 4197              		.loc 1 1073 0
 4198              		ldr	r3, .L437+16
 4199 25ec 40319FE5 		.loc 1 1072 0
 4200              		add	r2, ip, #1
 4201 25f0 0820A0E3 		.loc 1 1073 0
 4202              		ldrh	r1, [r3, #0]
 4203 25f4 B060C3E1 		.loc 1 1072 0
 4204              		mov	r2, r2, asl #16
 4205 25f8 0020C7E5 		mov	r2, r2, lsr #16
 4206 25fc F4FFFFEA 		ldr	r3, .L437+20
 4207              		.loc 1 1073 0
 4208              		cmp	r1, r2
 4209 2600 30519FE5 		.loc 1 1071 0
 4210 2604 0610A0E1 		strh	r0, [r5, #0]	@ movhi
 4211 2608 B000D5E1 		.loc 1 1072 0
 4212 260c FEFFFFEB 		strb	r6, [r3, ip]
 4213              		strh	r2, [r4, #0]	@ movhi
 4214 2610 24419FE5 		.loc 1 1073 0
 4215 2614 B0C0D4E1 		bne	.L434
 4216              	.L435:
 4217 2618 20319FE5 		.loc 1 1074 0
 4218              		mov	r3, #7
 4219 261c 01208CE2 		strb	r3, [r7, #0]
 4220              		b	.L434
 4221 2620 B010D3E1 	.LVL228:
 4222              	.L417:
 4223 2624 0228A0E1 		.loc 1 1057 0
 4224 2628 2228A0E1 		ldr	r3, .L437+16
 4225 262c 10319FE5 		ldrh	r1, [r3, #0]
 4226              		orr	r2, r1, r6, asl #8
 4227 2630 020051E1 		.loc 1 1058 0
 4228              		cmp	r2, #384
 4229 2634 B000C5E1 		.loc 1 1057 0
 4230              		strh	r2, [r3, #0]	@ movhi
 4231 2638 0C60C3E7 		orr	r5, r1, r6, asl #8
 4232 263c B020C4E1 		.loc 1 1058 0
 4233              		bhi	.L432
 4234 2640 E3FFFF1A 		.loc 1 1062 0
 4235              		ldr	r4, .L437+8
 4236              		mov	r1, r6
 4237 2644 0730A0E3 		ldrh	r0, [r4, #0]
 4238 2648 0030C7E5 		bl	aciCrcUpdate
 4239 264c E0FFFFEA 		.loc 1 1063 0
 4240              		ldr	r3, .L437+12
 4241              		.loc 1 1064 0
 4242              		cmp	r5, #0
 4243 2650 E8309FE5 		.loc 1 1063 0
 4244 2654 B010D3E1 		mov	r2, #0	@ movhi
 4245 2658 062481E1 		strh	r2, [r3, #0]	@ movhi
 4246              		.loc 1 1065 0
 4247 265c 060D52E3 		movne	r3, #6
 4248              		.loc 1 1062 0
 4249 2660 B020C3E1 		strh	r0, [r4, #0]	@ movhi
 4250 2664 065481E1 		.loc 1 1065 0
 4251              		strneb	r3, [r7, #0]
 4252 2668 D7FFFF8A 		.loc 1 1064 0
 4253              		bne	.L434
 4254 266c C4409FE5 		b	.L435
 4255 2670 0610A0E1 	.LVL229:
 4256 2674 B000D4E1 	.L416:
 4257 2678 FEFFFFEB 		.loc 1 1052 0
 4258              		ldr	r3, .L437+16
 4259 267c B8309FE5 		.loc 1 1053 0
 4260              		ldr	r4, .L437+8
 4261 2680 000055E3 		.loc 1 1052 0
 4262              		strh	r6, [r3, #0]	@ movhi
 4263 2684 0020A0E3 		.loc 1 1053 0
 4264 2688 B020C3E1 		ldrh	r0, [r4, #0]
 4265              		mov	r1, r6
 4266 268c 0630A013 		bl	aciCrcUpdate
 4267              		.loc 1 1054 0
 4268 2690 B000C4E1 		mov	r3, #5
 4269              		.loc 1 1053 0
 4270 2694 0030C715 		strh	r0, [r4, #0]	@ movhi
 4271              		.loc 1 1054 0
 4272 2698 CDFFFF1A 		strb	r3, [r7, #0]
 4273 269c E8FFFFEA 		b	.L434
 4274              	.LVL230:
 4275              	.L415:
 4276              		.loc 1 1045 0
 4277 26a0 98309FE5 		ldr	r3, .L437+24
 4278              		.loc 1 1047 0
 4279 26a4 8C409FE5 		mov	r1, r6
 4280              		.loc 1 1045 0
 4281 26a8 B060C3E1 		strb	r6, [r3, #0]
 4282              		.loc 1 1047 0
 4283 26ac B000D4E1 		mov	r0, #255
 4284 26b0 0610A0E1 		bl	aciCrcUpdate
 4285 26b4 FEFFFFEB 		ldr	r3, .L437+8
 4286              		.loc 1 1048 0
 4287 26b8 0530A0E3 		mov	r2, #4
 4288              		.loc 1 1047 0
 4289 26bc B000C4E1 		strh	r0, [r3, #0]	@ movhi
 4290              		.loc 1 1048 0
 4291 26c0 0030C7E5 		strb	r2, [r7, #0]
 4292 26c4 C2FFFFEA 		b	.L434
 4293              	.LVL231:
 4294              	.L414:
 4295              		.loc 1 1039 0
 4296 26c8 78309FE5 		cmp	r6, #33
 4297              		.loc 1 1040 0
 4298 26cc 0610A0E1 		moveq	r3, #3
 4299              		streqb	r3, [r7, #0]
 4300 26d0 0060C3E5 		.loc 1 1039 0
 4301              		bne	.L432
 4302 26d4 FF00A0E3 		b	.L434
 4303 26d8 FEFFFFEB 	.L413:
 4304 26dc 54309FE5 		.loc 1 1032 0
 4305              		cmp	r6, #35
 4306 26e0 0420A0E3 		.loc 1 1033 0
 4307              		moveq	r3, #2
 4308 26e4 B000C3E1 		streqb	r3, [r7, #0]
 4309              		.loc 1 1032 0
 4310 26e8 0020C7E5 		bne	.L432
 4311 26ec B8FFFFEA 		b	.L434
 4312              	.LVL232:
 4313              	.L436:
 4314              		.loc 1 1084 0
 4315 26f0 210056E3 		ldr	r3, .L437+24
 4316              		ldr	r2, .L437+16
 4317 26f4 0330A003 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 4318 26f8 0030C705 		ldrh	r1, [r2, #0]
 4319              		bl	aciRxHandleMessage
 4320 26fc B2FFFF1A 		b	.L432
 4321 2700 B3FFFFEA 	.L438:
 4322              		.align	2
 4323              	.L437:
 4324 2704 230056E3 		.word	aciRxState.2760
 4325              		.word	aciRxReceivedCrc.2764
 4326 2708 0230A003 		.word	aciRxCrc.2763
 4327 270c 0030C705 		.word	aciRxDataCnt
 4328              		.word	aciRxLength.2762
 4329 2710 ADFFFF1A 		.word	aciRxDataBuffer
 4330 2714 AEFFFFEA 		.word	aciRxMessageType.2761
 4331              	.LFE14:
 4333              		.align	2
 4334 2718 28309FE5 		.global	aciSingleSend
 4336 2720 0000D3E5 	aciSingleSend:
 4337 2724 B010D2E1 	.LFB4:
 4338 2728 FEFFFFEB 		.loc 1 199 0
 4339 272c A6FFFFEA 		@ Function supports interworking.
 4340              		@ args = 0, pretend = 0, frame = 12
 4341              		@ frame_needed = 1, uses_anonymous_args = 0
 4342              	.LVL233:
 4343 2730 73000000 		mov	ip, sp
 4344 2734 6C000000 	.LCFI26:
 4345 2738 6E000000 		stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 4346 273c 00000000 	.LCFI27:
 4347 2740 70000000 		sub	fp, ip, #4
 4348 2744 00000000 	.LCFI28:
 4349 2748 72000000 		sub	sp, sp, #12
 4350              	.LCFI29:
 4351              		.loc 1 199 0
 4352              		strb	r1, [fp, #-44]
 4353              		strh	r2, [fp, #-48]	@ movhi
 4354              		.loc 1 200 0
 4355              		ldrb	r5, [fp, #-44]	@ zero_extendqisi2
 4356              		ldrh	ip, [fp, #-48]
 4357              		cmp	ip, #0
 4358              		cmpne	r5, #0
 4359              		movne	lr, #0
 4360              		moveq	lr, #1
 4361              		.loc 1 199 0
 4362 274c 0DC0A0E1 		mov	r8, r0
 4363              		and	r1, r3, #255
 4364 2750 F0DD2DE9 	.LVL234:
 4365              		mov	r7, sp
 4366 2754 04B04CE2 		.loc 1 200 0
 4367              		beq	.L440
 4368 2758 0CD04DE2 	.LVL235:
 4369              		.loc 1 201 0
 4370              		ldr	r6, .L461
 4371 275c 2C104BE5 		ldrh	r3, [r6, #0]
 4372 2760 B0234BE1 		mov	r2, r5, lsr #2
 4373              		add	r3, r3, r2
 4374 2764 2C505BE5 		cmp	r3, #560
 4375 2768 B0C35BE1 		ble	.L458
 4376 276c 00005CE3 	.LVL236:
 4377 2770 00005513 	.L440:
 4378 2774 00E0A013 		.loc 1 226 0
 4379 2778 01E0A003 		mov	sp, r7
 4380              		.loc 1 228 0
 4381 277c 0080A0E1 		sub	sp, fp, #36
 4382 2780 FF1003E2 		ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, lr}
 4383              		bx	lr
 4384 2784 0D70A0E1 	.LVL237:
 4385              	.L458:
 4386 2788 0500000A 		.loc 1 203 0
 4387              		add	r3, r2, #11
 4388              		and	r3, r3, #124
 4389 278c 3C619FE5 		rsb	sp, r3, sp
 4390 2790 B030D6E1 		.loc 1 208 0
 4391 2794 2521A0E1 		cmp	r1, #0
 4392 2798 023083E0 		.loc 1 203 0
 4393 279c 230E53E3 		mov	r3, sp, lsr #2
 4394 27a0 030000DA 		mov	r4, r3, asl #2
 4395              		.loc 1 206 0
 4396              		strh	lr, [fp, #-38]	@ movhi
 4397              	.LVL238:
 4398 27a4 07D0A0E1 		ldrne	sl, .L461+4
 4399              		.loc 1 208 0
 4400 27a8 24D04BE2 		movne	r1, lr
 4401 27ac F06D9DE8 	.LVL239:
 4402 27b0 1EFF2FE1 		beq	.L459
 4403              	.LVL240:
 4404              	.L445:
 4405              		.loc 1 210 0
 4406 27b4 0B3082E2 		mov	r3, r1, asl #1
 4407 27b8 7C3003E2 		ldrh	r2, [r3, sl]
 4408 27bc 0DD063E0 		cmp	r2, #0
 4409              		moveq	lr, r1
 4410 27c0 000051E3 		mvnne	lr, #0
 4411              		.loc 1 209 0
 4412 27c4 2D31A0E1 		add	r1, r1, #1
 4413 27c8 0341A0E1 		cmp	r1, #69
 4414              		bgt	.L460
 4415 27cc B6E24BE1 	.L446:
 4416              		.loc 1 210 0
 4417 27d0 FCA09F15 		cmn	lr, #1
 4418              		beq	.L445
 4419 27d4 0E10A011 		.loc 1 209 0
 4420              		add	r1, r1, #1
 4421 27d8 2600000A 		cmp	r1, #69
 4422              		ble	.L446
 4423              	.L460:
 4424              		.loc 1 212 0
 4425 27dc 8130A0E1 		cmn	lr, #1
 4426 27e0 BA2093E1 		beq	.L440
 4427 27e4 000052E3 		.loc 1 217 0
 4428 27e8 01E0A001 		ldrh	r3, [r6, #0]
 4429 27ec 00E0E013 		ldr	r0, .L461+8
 4430              		add	r0, r3, r0
 4431 27f0 011081E2 		.loc 1 215 0
 4432 27f4 450051E3 		ldr	r3, .L461+12
 4433 27f8 040000CA 		.loc 1 214 0
 4434              		mov	r4, lr, asl #1
 4435              		.loc 1 215 0
 4436 27fc 01007EE3 		strh	ip, [r4, r3]	@ movhi
 4437 2800 F5FFFF0A 		.loc 1 216 0
 4438              		ldr	ip, .L461+16
 4439 2804 011081E2 	.LVL241:
 4440 2808 450051E3 		.loc 1 214 0
 4441 280c FAFFFFDA 		mov	r3, #1	@ movhi
 4442              		.loc 1 217 0
 4443              		mov	r1, r8
 4444 2810 01007EE3 	.LVL242:
 4445 2814 E2FFFF0A 		mov	r2, r5, lsr #2
 4446              		.loc 1 216 0
 4447 2818 B030D6E1 		strb	r5, [ip, lr]
 4448 281c B4009FE5 		.loc 1 214 0
 4449 2820 000083E0 		strh	r3, [r4, sl]	@ movhi
 4450              		.loc 1 217 0
 4451 2824 B0309FE5 		bl	memcpy
 4452              	.LVL243:
 4453 2828 8E40A0E1 		.loc 1 220 0
 4454              		ldr	ip, .L461+20
 4455 282c B3C084E1 		.loc 1 218 0
 4456              		ldrh	r0, [r6, #0]
 4457 2830 A8C09FE5 		.loc 1 220 0
 4458              		ldrh	r1, [ip, #0]
 4459              		.loc 1 219 0
 4460 2834 0130A0E3 		ldrb	r2, [fp, #-44]	@ zero_extendqisi2
 4461              		.loc 1 218 0
 4462 2838 0810A0E1 		ldr	r3, .L461+24
 4463              		.loc 1 219 0
 4464 283c 2521A0E1 		add	r2, r0, r2, lsr #2
 4465              		.loc 1 220 0
 4466 2840 0E50CCE7 		add	r1, r1, #1
 4467              		.loc 1 218 0
 4468 2844 BA3084E1 		strh	r0, [r4, r3]	@ movhi
 4469              		.loc 1 219 0
 4470 2848 FEFFFFEB 		strh	r2, [r6, #0]	@ movhi
 4471              		.loc 1 220 0
 4472              		strh	r1, [ip, #0]	@ movhi
 4473 284c 90C09FE5 		b	.L440
 4474              	.LVL244:
 4475 2850 B000D6E1 	.L459:
 4476              		.loc 1 222 0
 4477 2854 B010DCE1 		sub	r1, fp, #38
 4478              	.LVL245:
 4479 2858 2C205BE5 		mov	r2, #2
 4480              		mov	r0, r4
 4481 285c 84309FE5 		bl	memcpy
 4482              	.LVL246:
 4483 2860 222180E0 		.loc 1 223 0
 4484              		mov	r2, #2
 4485 2864 011081E2 		sub	r1, fp, #48
 4486              		add	r0, r4, r2
 4487 2868 B30084E1 		bl	memcpy
 4488              		.loc 1 224 0
 4489 286c B020C6E1 		ldrb	r3, [fp, #-44]	@ zero_extendqisi2
 4490              		strb	r3, [r4, #4]
 4491 2870 B010CCE1 		.loc 1 225 0
 4492 2874 CAFFFFEA 		ldrb	r2, [fp, #-44]	@ zero_extendqisi2
 4493              		mov	r1, r8
 4494              		mov	r2, r2, lsr #2
 4495              		add	r0, r4, #5
 4496 2878 26104BE2 		bl	memcpy
 4497              		.loc 1 226 0
 4498 287c 0220A0E3 		ldrb	r2, [fp, #-44]	@ zero_extendqisi2
 4499 2880 0400A0E1 		mov	r2, r2, lsr #2
 4500 2884 FEFFFFEB 		mov	r1, r4
 4501              		add	r2, r2, #5
 4502              		mov	r0, #163
 4503 2888 0220A0E3 		bl	aciTxSendPacket
 4504 288c 30104BE2 		b	.L440
 4505 2890 020084E0 	.L462:
 4506 2894 FEFFFFEB 		.align	2
 4507              	.L461:
 4508 2898 2C305BE5 		.word	aciSendSingleNextBufferCount
 4509 289c 0430C4E5 		.word	aciSendSingleStatus
 4510              		.word	aciSendSingleBuffer
 4511 28a0 2C205BE5 		.word	aciSendSingleId
 4512 28a4 0810A0E1 		.word	aciSendSingleVarType
 4513 28a8 2221A0E1 		.word	aciSendSingleCount
 4514 28ac 050084E2 		.word	aciSendSingleBufferCnt
 4515 28b0 FEFFFFEB 	.LFE4:
 4517 28b4 2C205BE5 		.align	2
 4518 28b8 2221A0E1 		.global	aciSendSingleWithAck
 4520 28c0 052082E2 	aciSendSingleWithAck:
 4521 28c4 A300A0E3 	.LFB3:
 4522 28c8 FEFFFFEB 		.loc 1 184 0
 4523 28cc B4FFFFEA 		@ Function supports interworking.
 4524              		@ args = 0, pretend = 0, frame = 4
 4525              		@ frame_needed = 1, uses_anonymous_args = 0
 4526              	.LVL247:
 4527 28d0 00000000 		mov	ip, sp
 4528 28d4 00000000 	.LCFI30:
 4529 28d8 00000000 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}
 4530 28dc 00000000 	.LCFI31:
 4531 28e0 00000000 		sub	fp, ip, #4
 4532 28e4 00000000 	.LCFI32:
 4533 28e8 00000000 		mov	ip, r0, asl #16
 4534              		mov	ip, ip, lsr #16
 4535              		sub	sp, sp, #4
 4536              	.LCFI33:
 4537              		.loc 1 186 0
 4538              		mov	r5, ip, asl #16
 4539              		ldr	r2, .L465
 4540              		.loc 1 184 0
 4541              		.loc 1 186 0
 4542              		mov	r5, r5, asr #16
 4543              		ldrb	r7, [r2, r5]	@ zero_extendqisi2
 4544              		.loc 1 187 0
 4545              		mov	r3, r7, lsr #2
 4546 28ec 0DC0A0E1 		add	r3, r3, #11
 4547              		and	r3, r3, #124
 4548 28f0 F0D92DE9 		.loc 1 184 0
 4549              		mov	r8, sp
 4550 28f4 04B04CE2 		.loc 1 187 0
 4551              		rsb	sp, r3, sp
 4552 28f8 00C8A0E1 		mov	r4, sp, lsr #2
 4553 28fc 2CC8A0E1 		mov	r4, r4, asl #2
 4554 2900 04D04DE2 		.loc 1 189 0
 4555              		mov	r6, #2
 4556              		.loc 1 185 0
 4557 2904 0C58A0E1 		add	ip, ip, #1
 4558 2908 B8209FE5 		.loc 1 189 0
 4559              		sub	r1, fp, #36
 4560              		mov	r2, r6
 4561 290c 4558A0E1 		mov	r0, r4
 4562 2910 0570D2E7 	.LVL248:
 4563              		.loc 1 185 0
 4564 2914 2731A0E1 		strh	ip, [fp, #-36]	@ movhi
 4565 2918 0B3083E2 	.LVL249:
 4566 291c 7C3003E2 		.loc 1 186 0
 4567              		strb	r7, [fp, #-33]
 4568 2920 0D80A0E1 	.LVL250:
 4569              		.loc 1 189 0
 4570 2924 0DD063E0 		bl	memcpy
 4571 2928 2D41A0E1 		.loc 1 190 0
 4572 292c 0441A0E1 		ldr	r1, .L465+4
 4573              		mov	r5, r5, asl #1
 4574 2930 0260A0E3 		add	r1, r5, r1
 4575              		mov	r2, r6
 4576 2934 01C08CE2 		add	r0, r4, r6
 4577              		bl	memcpy
 4578 2938 24104BE2 		.loc 1 191 0
 4579 293c 0620A0E1 		ldrb	r3, [fp, #-33]	@ zero_extendqisi2
 4580 2940 0400A0E1 		.loc 1 192 0
 4581              		ldr	r2, .L465+8
 4582              		.loc 1 191 0
 4583 2944 B4C24BE1 		strb	r3, [r4, #4]
 4584              		.loc 1 192 0
 4585              		ldr	r1, .L465+12
 4586 2948 21704BE5 		ldrh	r3, [r5, r2]
 4587              		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 4588              		add	r1, r3, r1
 4589 294c FEFFFFEB 		mov	r2, r2, lsr r6
 4590              		add	r0, r4, #5
 4591 2950 74109FE5 		bl	memcpy
 4592 2954 8550A0E1 		.loc 1 195 0
 4593 2958 011085E0 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 4594 295c 0620A0E1 		mov	r2, r2, lsr r6
 4595 2960 060084E0 		.loc 1 193 0
 4596 2964 FEFFFFEB 		ldr	ip, .L465+16
 4597              		ldrh	r3, [r5, ip]
 4598 2968 21305BE5 		add	r3, r3, #1
 4599              		.loc 1 195 0
 4600 296c 5C209FE5 		mov	r1, r4
 4601              		add	r2, r2, #5
 4602 2970 0430C4E5 		mov	r0, #163
 4603              		.loc 1 193 0
 4604 2974 58109FE5 		strh	r3, [r5, ip]	@ movhi
 4605 2978 B23095E1 		.loc 1 195 0
 4606 297c 21205BE5 		bl	aciTxSendPacket
 4607 2980 011083E0 		mov	sp, r8
 4608 2984 3226A0E1 		.loc 1 197 0
 4609 2988 050084E2 		sub	sp, fp, #32
 4610 298c FEFFFFEB 		ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, lr}
 4611              		bx	lr
 4612 2990 21205BE5 	.L466:
 4613 2994 3226A0E1 		.align	2
 4614              	.L465:
 4615 2998 38C09FE5 		.word	aciSendSingleVarType
 4616 299c BC3095E1 		.word	aciSendSingleId
 4617 29a0 013083E2 		.word	aciSendSingleBufferCnt
 4618              		.word	aciSendSingleBuffer
 4619 29a4 0410A0E1 		.word	aciSendSingleStatus
 4620 29a8 052082E2 	.LFE3:
 4622              		.align	2
 4623 29b0 BC3085E1 		.global	aciEngine
 4625 29b4 FEFFFFEB 	aciEngine:
 4626 29b8 08D0A0E1 	.LFB12:
 4627              		.loc 1 437 0
 4628 29bc 20D04BE2 		@ Function supports interworking.
 4629 29c0 F0699DE8 		@ args = 0, pretend = 0, frame = 4
 4630 29c4 1EFF2FE1 		@ frame_needed = 0, uses_anonymous_args = 0
 4631              		.loc 1 442 0
 4632              		ldr	r0, .L493
 4633              		ldrh	r3, [r0, #0]
 4634 29c8 00000000 		.loc 1 437 0
 4635 29cc 00000000 		stmfd	sp!, {r4, r5, r6, lr}
 4636 29d0 00000000 	.LCFI34:
 4637 29d4 00000000 		.loc 1 445 0
 4638 29d8 00000000 		ldr	r2, .L493+4
 4639              		.loc 1 442 0
 4640              		add	r3, r3, #1
 4641              		mov	r3, r3, asl #16
 4642              		.loc 1 445 0
 4643              		ldrh	r1, [r2, #0]
 4644              		.loc 1 442 0
 4645              		mov	r3, r3, lsr #16
 4646              		.loc 1 445 0
 4647              		cmp	r1, r3
 4648              		.loc 1 437 0
 4649              		sub	sp, sp, #4
 4650              	.LCFI35:
 4651 29dc 50019FE5 		.loc 1 442 0
 4652 29e0 B030D0E1 		strh	r3, [r0, #0]	@ movhi
 4653              		.loc 1 445 0
 4654 29e4 70402DE9 		bhi	.L468
 4655              		.loc 1 449 0
 4656              		ldr	r3, .L493+8
 4657 29e8 48219FE5 		mov	r2, #1
 4658              		strb	r2, [r3, #0]
 4659 29ec 013083E2 		.loc 1 448 0
 4660 29f0 0338A0E1 		mov	r3, #0	@ movhi
 4661              		strh	r3, [r0, #0]	@ movhi
 4662 29f4 B010D2E1 	.L470:
 4663              		.loc 1 460 0
 4664 29f8 2338A0E1 		ldr	r6, .L493+12
 4665              		ldr	r2, .L493+16
 4666 29fc 030051E1 		ldr	r3, [r6, #0]
 4667              		add	r0, r2, #12
 4668 2a00 04D04DE2 		add	r1, r3, r3, asl #2
 4669              	.L472:
 4670              		.loc 1 459 0
 4671 2a04 B030C0E1 		ldr	r3, [r2, #0]
 4672              		add	r3, r3, #1
 4673 2a08 4300008A 		.loc 1 460 0
 4674              		cmp	r3, r1
 4675 2a0c 28319FE5 		movhi	r3, #0
 4676 2a10 0120A0E3 		str	r3, [r2], #4
 4677 2a14 0020C3E5 		.loc 1 457 0
 4678              		cmp	r2, r0
 4679 2a18 0030A0E3 		bne	.L472
 4680 2a1c B030C0E1 		.loc 1 463 0
 4681              		ldr	r4, .L493+20
 4682              		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 4683 2a20 18619FE5 		cmp	r3, #0
 4684 2a24 18219FE5 		beq	.L476
 4685 2a28 003096E5 		ldr	r3, .L493+24
 4686 2a2c 0C0082E2 		ldr	r3, [r3, #0]
 4687 2a30 031183E0 		cmp	r3, #0
 4688              		beq	.L476
 4689              	.LBB64:
 4690 2a34 003092E5 		.loc 1 465 0
 4691 2a38 013083E2 		mov	lr, pc
 4692              		bx	r3
 4693 2a3c 010053E1 		add	r1, sp, #4
 4694 2a40 0030A083 		.loc 1 466 0
 4695 2a44 043082E4 		mov	r3, #0
 4696              		.loc 1 465 0
 4697 2a48 000052E1 		strh	r0, [r1, #-2]!	@ movhi
 4698 2a4c F8FFFF1A 	.LVL251:
 4699              		.loc 1 467 0
 4700 2a50 F0409FE5 		mov	r2, #2
 4701 2a54 0030D4E5 		mov	r0, #242
 4702 2a58 000053E3 		.loc 1 466 0
 4703 2a5c 0C00000A 		strb	r3, [r4, #0]
 4704 2a60 E4309FE5 		.loc 1 467 0
 4705 2a64 003093E5 		bl	aciTxSendPacket
 4706 2a68 000053E3 	.L476:
 4707 2a6c 0800000A 	.LBE64:
 4708              		.loc 1 470 0
 4709              		ldr	r3, .L493+28
 4710 2a70 0FE0A0E1 		ldrh	r2, [r3, #0]
 4711 2a74 13FF2FE1 		cmp	r2, #0
 4712 2a78 04108DE2 		.loc 1 483 0
 4713              		ldreq	r3, .L493+32
 4714 2a7c 0030A0E3 		streqh	r2, [r3, #0]	@ movhi
 4715              		.loc 1 470 0
 4716 2a80 B20061E1 		beq	.L489
 4717              		ldr	r5, .L493+36
 4718              		mov	r4, #0
 4719 2a84 0220A0E3 	.LVL252:
 4720 2a88 F200A0E3 		b	.L481
 4721              	.LVL253:
 4722 2a8c 0030C4E5 	.L484:
 4723              		.loc 1 478 0
 4724 2a90 FEFFFFEB 		ldr	r3, [r6, #0]
 4725              		add	r3, r3, #2
 4726              		cmp	r2, r3
 4727              		.loc 1 480 0
 4728 2a94 B4309FE5 		add	r3, r2, #1
 4729 2a98 B020D3E1 		.loc 1 479 0
 4730 2a9c 000052E3 		moveq	r3, #1	@ movhi
 4731              		streqh	r3, [r5, #0]	@ movhi
 4732 2aa0 AC309F05 		.loc 1 480 0
 4733 2aa4 B020C301 		strneh	r3, [r5, #0]	@ movhi
 4734              	.LVL254:
 4735 2aa8 1800000A 	.L482:
 4736 2aac A4509FE5 		.loc 1 473 0
 4737 2ab0 0040A0E3 		add	r4, r4, #1
 4738              		cmp	r4, #70
 4739 2ab4 0A0000EA 		add	r5, r5, #2
 4740              		beq	.L489
 4741              	.L481:
 4742              		.loc 1 474 0
 4743 2ab8 003096E5 		ldrh	r2, [r5, #0]
 4744 2abc 023083E2 		cmp	r2, #0
 4745 2ac0 030052E1 		beq	.L482
 4746              		.loc 1 475 0
 4747 2ac4 013082E2 		cmp	r2, #1
 4748              		.loc 1 476 0
 4749 2ac8 0130A003 		mov	r0, r4
 4750 2acc B030C501 		.loc 1 475 0
 4751              		bne	.L484
 4752 2ad0 B030C511 	.LVL255:
 4753              		.loc 1 473 0
 4754              		add	r4, r4, #1
 4755              		.loc 1 476 0
 4756 2ad4 014084E2 		bl	aciSendSingleWithAck
 4757 2ad8 460054E3 	.LVL256:
 4758 2adc 025085E2 		.loc 1 473 0
 4759 2ae0 0A00000A 		cmp	r4, #70
 4760              		add	r5, r5, #2
 4761              		bne	.L481
 4762 2ae4 B020D5E1 	.LVL257:
 4763 2ae8 000052E3 	.L489:
 4764 2aec F8FFFF0A 		.loc 1 484 0
 4765              		add	sp, sp, #4
 4766 2af0 010052E3 		ldmfd	sp!, {r4, r5, r6, lr}
 4767              		bx	lr
 4768 2af4 0400A0E1 	.LVL258:
 4769              	.L468:
 4770 2af8 EEFFFF1A 		.loc 1 452 0
 4771              		ldr	r3, .L493+8
 4772              		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4773 2afc 014084E2 		cmp	r2, #0
 4774              		bne	.L470
 4775 2b00 FEFFFFEB 		.loc 1 454 0
 4776              		bl	aciSendVar
 4777              		b	.L470
 4778 2b04 460054E3 	.L494:
 4779 2b08 025085E2 		.align	2
 4780 2b0c F4FFFF1A 	.L493:
 4781              		.word	aciHeartBeatCnt
 4782              		.word	aciHeartBeatTimeout
 4783              		.word	aciInhibitPacketTransmission
 4784 2b10 04D08DE2 		.word	aciEngineRate
 4785 2b14 7040BDE8 		.word	aciEngineRateCounter
 4786 2b18 1EFF2FE1 		.word	aciParamSaveIt
 4787              		.word	aciWriteParatoFlashCallback
 4788              		.word	aciSendSingleCount
 4789              		.word	aciSendSingleNextBufferCount
 4790 2b1c 18309FE5 		.word	aciSendSingleStatus
 4791 2b20 0020D3E5 	.LFE12:
 4793 2b28 BCFFFF1A 		.global	aciListVarCount
 4794              		.bss
 4795 2b2c FEFFFFEB 		.align	2
 4798              	aciListVarCount:
 4799              		.space	4
 4800 2b34 00000000 		.global	aciListCmdCount
 4801 2b38 00000000 		.align	2
 4804 2b44 00000000 	aciListCmdCount:
 4805 2b48 00000000 		.space	4
 4806 2b4c 00000000 		.global	aciListParCount
 4807 2b50 00000000 		.align	2
 4810              	aciListParCount:
 4811              		.space	4
 4812              		.global	aciVarPacketMagicCode
 4815              	aciVarPacketMagicCode:
 4816              		.space	3
 4817              		.global	aciVarPacketTransmissionRate
 4818 0000 00000000 		.data
 4819              		.align	1
 4822              	aciVarPacketTransmissionRate:
 4823              		.short	10
 4824 0004 00000000 		.short	10
 4825              		.short	10
 4826              		.global	aciVarPacketCurrentSize
 4827              		.bss
 4828              		.align	1
 4831              	aciVarPacketCurrentSize:
 4832              		.space	6
 4833              		.global	aciVarPacketNumberOfVars
 4834              		.align	1
 4837              	aciVarPacketNumberOfVars:
 4838              		.space	6
 4839              		.global	aciVarPacketUpdated
 4840              		.align	1
 4843 0002 0A00     	aciVarPacketUpdated:
 4844 0004 0A00     		.space	6
 4845              		.global	aciCmdPacketMagicCode
 4848              	aciCmdPacketMagicCode:
 4849              		.space	3
 4850              		.global	aciCmdPacketWithACK
 4853              	aciCmdPacketWithACK:
 4854              		.space	3
 4855              		.global	aciCmdPacketSendAck
 4858              	aciCmdPacketSendAck:
 4859              		.space	3
 4860              		.global	aciCmdPacketReceived
 4863 001c 00000000 	aciCmdPacketReceived:
 4863      0000
 4864              		.space	3
 4865              		.global	aciParPacketMagicCode
 4868 0022 000000   	aciParPacketMagicCode:
 4869              		.space	3
 4870              		.global	aciParPacketSendAck
 4873 0025 000000   	aciParPacketSendAck:
 4874              		.space	3
 4875              		.global	aciParamPacketReceived
 4878 0028 000000   	aciParamPacketReceived:
 4879              		.space	3
 4880              		.global	aciParPacketRequest
 4883 002b 000000   	aciParPacketRequest:
 4884              		.space	3
 4885              		.global	aciParamSaveIt
 4888 002e 000000   	aciParamSaveIt:
 4889              		.space	1
 4890              		.global	entry_exist
 4891              		.data
 4894              	entry_exist:
 4895              		.byte	1
 4896              		.global	aciEngineRate
 4897              		.align	2
 4900              	aciEngineRate:
 4901              		.word	1000
 4902              		.global	aciEngineRateCounter
 4903 0037 000000   		.bss
 4904              		.align	2
 4907              	aciEngineRateCounter:
 4908 003a 00       		.space	12
 4909              		.global	aciTxRingBufferWritePtr
 4910              		.align	1
 4913              	aciTxRingBufferWritePtr:
 4914 0006 01       		.space	2
 4915              		.global	aciTxRingBufferReadPtr
 4918              	aciTxRingBufferReadPtr:
 4919              		.space	1
 4920 0008 E8030000 		.global	aciHeartBeatCnt
 4921              		.align	1
 4924              	aciHeartBeatCnt:
 4925              		.space	2
 4926              		.global	aciHeartBeatTimeout
 4927 003c 00000000 		.data
 4927      00000000 
 4927      00000000 
 4928              		.align	1
 4931              	aciHeartBeatTimeout:
 4932              		.short	2000
 4933 0048 0000     		.global	aciInhibitPacketTransmission
 4934              		.bss
 4937              	aciInhibitPacketTransmission:
 4938 004a 00       		.space	1
 4939              		.global	aciReadWriteStartCallback
 4940 004b 00       		.align	2
 4943              	aciReadWriteStartCallback:
 4944 004c 0000     		.space	4
 4945              		.global	aciReadWriteEndCallback
 4946              		.align	2
 4949              	aciReadWriteEndCallback:
 4950              		.space	4
 4951 000c D007     		.global	aciAddDatatoFlashCallback
 4952              		.align	2
 4955              	aciAddDatatoFlashCallback:
 4956              		.space	4
 4957 004e 00       		.global	aciReadParafromFlashCallback
 4958              		.align	2
 4961              	aciReadParafromFlashCallback:
 4962              		.space	4
 4963 0050 00000000 		.global	aciSaveParaCallback
 4964              		.align	2
 4967              	aciSaveParaCallback:
 4968              		.space	4
 4969 0054 00000000 		.global	aciWriteParatoFlashCallback
 4970              		.align	2
 4973              	aciWriteParatoFlashCallback:
 4974              		.space	4
 4975 0058 00000000 		.global	aciSendSingleCount
 4976              		.align	1
 4979              	aciSendSingleCount:
 4980              		.space	2
 4981 005c 00000000 		.global	aciSendSingleNextBufferCount
 4982              		.align	1
 4985              	aciSendSingleNextBufferCount:
 4986              		.space	2
 4987 0060 00000000 		.global	aciMagicCodeVar
 4988              		.data
 4989              		.align	1
 4992              	aciMagicCodeVar:
 4993 0064 00000000 		.short	255
 4994              		.global	aciMagicCodeCmd
 4995              		.align	1
 4998              	aciMagicCodeCmd:
 4999 0068 0000     		.short	255
 5000              		.global	aciMagicCodePar
 5001              		.align	1
 5004              	aciMagicCodePar:
 5005 006a 0000     		.short	255
 5006              		.section	.rodata
 5009              	C.81.2813:
 5010              		.byte	33
 5011              		.byte	35
 5012 000e FF00     		.byte	33
 5013              		.bss
 5014              		.align	1
 5015              	aciRxReceivedCrc.2764:
 5016              		.space	2
 5017              		.align	1
 5018 0010 FF00     	aciRxCrc.2763:
 5019              		.space	2
 5020              		.align	1
 5021              	aciRxLength.2762:
 5022              		.space	2
 5023              	aciRxMessageType.2761:
 5024 0012 FF00     		.space	1
 5025              	aciRxState.2760:
 5026              		.space	1
 5027              		.section	.rodata
 5030 0001 23       	C.30.2276:
 5031 0002 21       		.byte	33
 5032              		.byte	35
 5033              		.byte	33
 5034              		.comm	aciListPar,950,1
 5035 006c 0000     		.comm	aciListVar,1330,1
 5036              		.comm	aciListCmd,950,1
 5037              		.comm	aciVarPacketSelect,384,2
 5038 006e 0000     		.comm	aciVarPacketSelectLength,3,1
 5039              		.comm	aciVarPacketPtrList,768,4
 5040              		.comm	aciVarPacketTypeList,192,1
 5041 0070 0000     		.comm	aciVarPacketContentBufferLength,6,2
 5042              		.comm	aciVarPacketContentBuffer,1680,1
 5043 0072 00       		.comm	aciCmdPacketSelect,384,2
 5044              		.comm	aciCmdPacketSelectLength,3,1
 5045 0073 00       		.comm	aciCmdPacketContentBufferLength,6,2
 5046              		.comm	aciCmdPacketContentBuffer,1200,1
 5047              		.comm	aciCmdPacketContentBufferValid,3,1
 5048              		.comm	aciCmdPacketContentBufferInvalidCnt,3,1
 5049              		.comm	aciParPacketSelect,384,2
 5050 0003 21       		.comm	aciParPacketSelectLength,3,1
 5051 0004 23       		.comm	aciParPacketContentBufferLength,6,2
 5052 0005 21       		.comm	aciParPacketContentBuffer,1200,1
 5053              		.comm	aciParPacketContentBufferValid,3,1
 5054              		.comm	aciParPacketContentBufferInvalidCnt,3,1
 5055              		.comm	aciTxRingBuffer,160,1
 5056              		.comm	aciStartTxCallback,4,4
 5057              		.comm	aciReadDatafromFlashCallback,4,4
 5058              		.comm	aciSendSingleStatus,140,2
 5059              		.comm	aciSendSingleId,140,2
 5060              		.comm	aciSendSingleVarType,70,1
 5061              		.comm	aciSendSingleBuffer,560,1
 5062              		.comm	aciSendSingleBufferCnt,140,2
 5063              		.comm	aciRxDataBuffer,384,1
 5064              		.comm	aciRxDataCnt,2,2
 5065              		.section	.debug_frame,"",%progbits
 5066              	.Lframe0:
 5067              		.4byte	.LECIE0-.LSCIE0
 5068              	.LSCIE0:
 5069              		.4byte	0xffffffff
 5070              		.byte	0x1
 5071              		.ascii	"\000"
 5072              		.uleb128 0x1
 5073              		.sleb128 -4
 5074              		.byte	0xe
 5075              		.byte	0xc
 5076              		.uleb128 0xd
 5077              		.uleb128 0x0
 5078              		.align	2
 5079              	.LECIE0:
 5080              	.LSFDE0:
 5081              		.4byte	.LEFDE0-.LASFDE0
 5082              	.LASFDE0:
 5083              		.4byte	.Lframe0
 5678              		.byte	0x50
DEFINED SYMBOLS
                            *ABS*:00000000 asctecCommIntfOnboard.c
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:13     .text:00000000 aciInit
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:22     .text:00000000 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:141    .text:00000100 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4817   .bss:00000000 aciListVarCount
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4823   .bss:00000004 aciListCmdCount
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4829   .bss:00000008 aciListParCount
                            *COM*:00000006 aciVarPacketContentBufferLength
                            *COM*:00000003 aciCmdPacketContentBufferValid
                            *COM*:00000003 aciCmdPacketContentBufferInvalidCnt
                            *COM*:00000003 aciParPacketContentBufferValid
                            *COM*:00000003 aciParPacketContentBufferInvalidCnt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4834   .bss:0000000c aciVarPacketMagicCode
                            *COM*:00000003 aciVarPacketSelectLength
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4867   .bss:00000022 aciCmdPacketMagicCode
                            *COM*:00000180 aciVarPacketSelect
                            *COM*:00000300 aciVarPacketPtrList
                            *COM*:000000c0 aciVarPacketTypeList
                            *COM*:0000008c aciSendSingleId
                            *COM*:00000230 aciSendSingleBuffer
                            *COM*:00000046 aciSendSingleVarType
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4919   .data:00000008 aciEngineRate
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:164    .text:00000148 aciSetStartTxCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:173    .text:00000148 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:183    .text:00000154 $d
                            *COM*:00000004 aciStartTxCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:189    .text:00000158 aciTxRingBufferReset
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:197    .text:00000158 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:213    .text:00000170 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4932   .bss:00000048 aciTxRingBufferWritePtr
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4937   .bss:0000004a aciTxRingBufferReadPtr
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:220    .text:00000178 aciTxRingBufferGetFreeSpace
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:228    .text:00000178 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:257    .text:000001b0 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:264    .text:000001b8 aciTxRingBufferByteAvailable
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:270    .text:000001b8 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:284    .text:000001d0 aciTxRingBufferGetNextByte
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:324    .text:0000021c $d
                            *COM*:000000a0 aciTxRingBuffer
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:332    .text:00000228 aciCrcUpdate
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:340    .text:00000228 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:368    .text:00000254 aciUpdateCrc16
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:417    .text:00000294 aciPublishParameterInt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:589    .text:00000434 $d
                            *COM*:000003b6 aciListPar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5023   .data:00000012 aciMagicCodePar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:597    .text:00000440 aciPublishCommandInt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:604    .text:00000440 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:769    .text:000005e0 $d
                            *COM*:000003b6 aciListCmd
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5017   .data:00000010 aciMagicCodeCmd
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:777    .text:000005ec aciPublishVariableInt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:784    .text:000005ec $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:949    .text:0000078c $d
                            *COM*:00000532 aciListVar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5011   .data:0000000e aciMagicCodeVar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:957    .text:00000798 aciSetReadParafromFlashCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:966    .text:00000798 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:976    .text:000007a4 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4980   .bss:0000005c aciReadParafromFlashCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:982    .text:000007a8 aciSetSaveParaCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:991    .text:000007a8 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1001   .text:000007b4 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4986   .bss:00000060 aciSaveParaCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1007   .text:000007b8 aciSetWriteParatoFlashCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1016   .text:000007b8 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1026   .text:000007c4 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4992   .bss:00000064 aciWriteParatoFlashCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1032   .text:000007c8 aciTxRingBufferAddData
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1039   .text:000007c8 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1139   .text:000008ac $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1148   .text:000008bc aciTxSendPacket
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1155   .text:000008bc $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1240   .text:00000990 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5028   .rodata:00000000 C.81.2813
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1246   .text:00000994 aciSendVar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1252   .text:00000994 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1619   .text:00000d5c $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4841   .data:00000000 aciVarPacketTransmissionRate
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4850   .bss:00000010 aciVarPacketCurrentSize
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4856   .bss:00000016 aciVarPacketNumberOfVars
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4926   .bss:0000003c aciEngineRateCounter
                            *COM*:00000690 aciVarPacketContentBuffer
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4862   .bss:0000001c aciVarPacketUpdated
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4956   .bss:0000004e aciInhibitPacketTransmission
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5049   .rodata:00000003 C.30.2276
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1642   .text:00000d9c aciSyncPar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1648   .text:00000d9c $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1788   .text:00000f14 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4897   .bss:00000034 aciParamPacketReceived
                            *COM*:00000003 aciParPacketSelectLength
                            *COM*:00000180 aciParPacketSelect
                            *COM*:000004b0 aciParPacketContentBuffer
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1800   .text:00000f2c aciSyncCmd
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1806   .text:00000f2c $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1946   .text:000010a4 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4882   .bss:0000002b aciCmdPacketReceived
                            *COM*:00000003 aciCmdPacketSelectLength
                            *COM*:00000180 aciCmdPacketSelect
                            *COM*:000004b0 aciCmdPacketContentBuffer
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1958   .text:000010bc aciSyncVar
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:1964   .text:000010bc $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:2029   .text:00001150 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:2038   .text:00001160 aciRxHandleMessage
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:2045   .text:00001160 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:3729   .text:00002154 $d
                            *COM*:00000180 aciRxDataBuffer
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4872   .bss:00000025 aciCmdPacketWithACK
                            *COM*:00000006 aciCmdPacketContentBufferLength
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4887   .bss:0000002e aciParPacketMagicCode
                            *COM*:00000006 aciParPacketContentBufferLength
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4950   .data:0000000c aciHeartBeatTimeout
                            *COM*:0000008c aciSendSingleStatus
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4907   .bss:0000003a aciParamSaveIt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4943   .bss:0000004c aciHeartBeatCnt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:3777   .text:00002204 $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4134   .text:0000256c aciReceiveHandler
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4154   .text:00002588 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4166   .text:000025ac $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4343   .text:00002730 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5044   .bss:00000073 aciRxState.2760
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5034   .bss:0000006c aciRxReceivedCrc.2764
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5037   .bss:0000006e aciRxCrc.2763
                            *COM*:00000002 aciRxDataCnt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5040   .bss:00000070 aciRxLength.2762
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5042   .bss:00000072 aciRxMessageType.2761
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4355   .text:0000274c aciSingleSend
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4362   .text:0000274c $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4527   .text:000028d0 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5004   .bss:0000006a aciSendSingleNextBufferCount
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4998   .bss:00000068 aciSendSingleCount
                            *COM*:0000008c aciSendSingleBufferCnt
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4539   .text:000028ec aciSendSingleWithAck
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4546   .text:000028ec $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4634   .text:000029c8 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4644   .text:000029dc aciEngine
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4651   .text:000029dc $a
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4800   .text:00002b34 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4837   .bss:0000000f $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4877   .bss:00000028 aciCmdPacketSendAck
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4892   .bss:00000031 aciParPacketSendAck
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4902   .bss:00000037 aciParPacketRequest
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4913   .data:00000006 entry_exist
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4920   .data:00000008 $d
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4962   .bss:00000050 aciReadWriteStartCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4968   .bss:00000054 aciReadWriteEndCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:4974   .bss:00000058 aciAddDatatoFlashCallback
C:\Users\stier2\AppData\Local\Temp/ccqQaaaa.s:5007   .bss:0000006c $d
                            *COM*:00000004 aciReadDatafromFlashCallback

UNDEFINED SYMBOLS
memcpy
strlen
strcpy
